(this.webpackJsonpundefined=this.webpackJsonpundefined||[]).push([[37],{183:function(e,t,r){"use strict";r.r(t);const n=async(e,t,r=e.name)=>{const a=[],i=[];var o,l=!0,c=!1;try{for(var s,u,y=function(e){var t;if("undefined"!==typeof Symbol){if(Symbol.asyncIterator&&null!=(t=e[Symbol.asyncIterator]))return t.call(e);if(Symbol.iterator&&null!=(t=e[Symbol.iterator]))return t.call(e)}throw new TypeError("Object is not async iterable")}(e.getEntries());l=(s=await y.next()).done,u=await s.value,!l;l=!0){const e=u,o="".concat(r,"/").concat(e.name);e.isFile?i.push(e.getFile().then(e=>Object.defineProperty(e,"webkitRelativePath",{configurable:!0,enumerable:!0,get:()=>o}))):e.isDirectory&&t&&a.push(n(e,t,o))}}catch(f){c=!0,o=f}finally{try{l||null==y.return||await y.return()}finally{if(c)throw o}}return[...(await Promise.all(a)).flat(),...await Promise.all(i)]};t.default=async(e={})=>{e.recursive=e.recursive||!1;const t=await window.chooseFileSystemEntries({type:"open-directory"});return n(t,e.recursive)}}}]);
//# sourceMappingURL=37.36195215.chunk.js.map