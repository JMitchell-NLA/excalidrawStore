{"version":3,"sources":["constants.ts","element/typeChecks.ts","math.ts","points.ts","element/bounds.ts","renderer/renderElement.ts","random.ts","element/mutateElement.ts","element/sizeHelpers.ts","groups.ts","element/newElement.ts","element/handlerRectangles.ts","element/collision.ts","element/resizeTest.ts","element/resizeElements.ts","element/dragElements.ts","keys.ts","element/textWysiwyg.tsx","element/textElement.ts","element/showSelectedShapeActions.ts","element/index.ts","i18n.ts","scene/scrollbars.ts","scene/selection.ts","scene/scroll.ts","scene/comparisons.ts","scene/zoom.ts","scene/globalScene.ts","utils.ts","components/TopErrorBoundary.tsx","components/LoadingMessage.tsx","components/InitializeApp.tsx","is-mobile.tsx","components/Save.tsx","appState.ts","colors.ts","clients.ts","element/linearElementEditor.ts","renderer/renderScene.ts","renderer/roundRect.ts","scene/export.ts","charts.ts","clipboard.ts","data/restore.ts","data/blob.ts","data/json.ts","data/localStorage.ts","data/urlStorage.ts","data/index.ts","components/Portal.tsx","shapes.tsx","history.ts","components/Popover.tsx","components/ContextMenu.tsx","actions/manager.tsx","components/ToolButton.tsx","components/icons.tsx","actions/register.ts","actions/actionDeleteSelected.tsx","zindex.ts","actions/actionZindex.tsx","components/ButtonSelect.tsx","actions/actionSelectAll.ts","actions/actionDuplicateSelection.tsx","components/ColorPicker.tsx","actions/actionProperties.tsx","actions/actionCanvas.tsx","actions/actionFinalize.tsx","components/ProjectName.tsx","actions/actionExport.tsx","actions/actionStyles.ts","components/HelpIcon.tsx","actions/actionMenu.tsx","actions/actionGroup.ts","components/Avatar.tsx","gesture.ts","actions/actionNavigate.tsx","actions/actionAddToLibrary.ts","actions/actionHistory.tsx","components/Island.tsx","components/Stack.tsx","components/FixedSideContainer.tsx","components/UserList.tsx","components/LockIcon.tsx","components/Modal.tsx","components/Dialog.tsx","components/ExportDialog.tsx","components/LanguageList.tsx","components/HintViewer.tsx","components/Actions.tsx","components/Section.tsx","components/RoomDialog.tsx","components/MobileMenu.tsx","components/ErrorDialog.tsx","components/ShortcutsDialog.tsx","components/GitHubCorner.tsx","components/Tooltip.tsx","components/LibraryUnit.tsx","components/LayerUI.tsx","components/App.tsx","time_constants.ts","serviceWorker.tsx","index.tsx","locales lazy /^/.//.*$/ groupOptions: {} namespace object"],"names":["SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","POINTER_BUTTON","SCENE","EVENT","ENV","BROADCAST","CLASSES","FONT_FAMILY","1","2","3","CANVAS_ONLY_ACTIONS","isTextElement","element","type","isLinearElement","distanceBetweenPointAndSegment","x","y","x1","y1","x2","y2","C","D","lenSquare","xx","yy","param","dx","dy","hypot","rotate","angle","cos","sin","adjustXYWithRotation","sides","deltaX1","deltaY1","deltaX2","deltaY2","e","w","n","s","distance2d","xd","yd","isPathALoop","points","length","firstPoint","lastPoint","onSegment","p","q","r","max","min","orientation","val","doIntersect","p1","q1","p2","q2","o1","o2","o3","o4","getGridPoint","gridSize","round","getSizeFromPoints","xs","map","point","ys","width","height","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","value","currentDimension","scaledValue","translation","scaledPoint","getElementAbsoluteCoords","getLinearElementAbsoluteCoords","getDiamondPoints","topX","floor","rightX","rightY","getCurvePathOps","shape","set","sets","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","minX","minY","maxX","maxY","reduce","limits","op","data","p3","p0","equation","t","idx","pow","getShapeForElement","getElementBounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","curve","rough","generator","generateRoughOptions","getElementPointsCoords","DASHARRAY_DASHED","DASHARRAY_DOTTED","drawElementOnCanvas","rc","context","globalAlpha","opacity","draw","Error","rtl","isRTL","text","shouldTemporarilyAttach","canvas","isConnected","document","body","appendChild","setAttribute","font","getFontString","fillStyle","strokeColor","textAlign","lines","replace","split","lineHeight","verticalOffset","baseline","horizontalOffset","i","fillText","remove","elementWithCanvasCache","WeakMap","shapeCache","get","invalidateShapeForElement","delete","options","seed","strokeLineDash","strokeStyle","undefined","disableMultiStroke","strokeWidth","fillWeight","hachureGap","roughness","stroke","fill","backgroundColor","curveFitting","generateElementShape","rectangle","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","x3","y3","x4","y4","prevOp","distance","nx","ny","arrowLength","total","px","py","minSize","getArrowPoints","push","line","generateElementWithCanvas","sceneState","zoom","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","shouldCacheIgnoreZoom","elementWithCanvas","createElement","getContext","canvasOffsetX","canvasOffsetY","window","devicePixelRatio","CANVAS_PADDING","translate","scale","generateElementCanvas","renderElement","renderOptimizations","scrollX","scrollY","fillRect","drawImage","drawElementFromCanvas","shiftX","shiftY","random","Random","Date","now","randomInteger","next","randomId","nanoid","mutateElement","updates","didChange","key","nextPoints","didChangePoints","nextPoint","version","versionNonce","globalSceneState","informMutation","newElementWith","isInvisiblySmallElement","getPerfectElementSize","elementType","absWidth","abs","absHeight","lockedAngle","atan","tan","sign","getNormalizedDimensions","ret","selectGroup","groupId","appState","elementsInGroup","filter","groupIds","includes","selectedGroupIds","editingGroupId","selectedElementIds","Object","fromEntries","id","getSelectedGroupIds","entries","isSelected","selectGroupsForSelectedElements","nextAppState","selectedElements","getSelectedElements","selectedElement","indexOfEditingGroup","indexOf","slice","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","_newElementBase","rest","isDeleted","newElement","opts","getTextElementPositionOffsets","metrics","verticalAlign","newTextElement","measureText","offsets","fontSize","fontFamily","getAdjustedDimensions","nextText","nextBaseline","prevMetrics","nextX1","nextY1","nextX2","nextY2","Number","isFinite","deepCopyElement","depth","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","Array","isArray","k","arr","duplicateElement","groupIdMapForOperation","overrides","copy","mapper","endIndex","getNewGroupIdsForDuplication","has","assign","handleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","rotation","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateHandler","handlerRectanglesFromCoords","pointerType","omitSides","size","handlerWidth","handlerHeight","handlerMarginX","handlerMarginY","dashedLineMargin","centeringOffset","handlers","minimumSizeForEightHandlers","handlerRectangles","isElementDraggableFromInside","dragFromInside","hitTest","lineThreshold","tx","ty","a","b","ex","ey","rx","ry","qx","qy","relX","relY","some","subshape","hitTestCurveInside","hitTestRoughShape","console","warn","drawable","operation","vertices","extreme","MAX_SAFE_INTEGER","count","current","isPointInPolygon","pointsOnBezierCurves","mx","my","sqrt","pointInBezierEquation","isInHandlerRect","handler","getElementWithResizeHandler","scenePointerX","scenePointerY","result","resizeHandle","rotationHandler","keys","resizeTest","getResizeHandlerFromCoords","find","RESIZE_CURSORS","getCursorForResizingElement","resizingElement","shouldSwapCursors","cursor","index","rotateResizeCursor","rotateSingleElement","pointerX","pointerY","isRotateWithDiscreteAngle","atan2","resizeSingleTwoPointElement","resizeArrowDirection","pointOrigin","pointEnd","rescalePointsInElement","measureFontSizeFromWH","nextFontSize","getSidesForResizeHandle","isResizeFromCenter","test","resizeSingleTextElement","rotatedX","rotatedY","nextFont","nextElementX","nextElementY","resizeSingleElement","sidesWithSameLength","scaleX","scaleY","rescaledPoints","finalX1","finalY1","finalX2","finalY2","flipDiffX","flipDiffY","side","needsRotation","getFlipAdjustment","resizeMultipleElements","getNextXY","origX1","origY1","origX2","origY2","prev","origCoords","finalCoords","dragNewElement","draggingElement","originX","originY","isResizeWithSidesSameLength","isResizeCenterPoint","newX","newY","isDarwin","navigator","platform","KEYS","isArrowKey","keyCode","getResizeCenterPointKey","event","altKey","which","getResizeWithSidesSameLengthKey","shiftKey","getRotateWithDiscreteAngleKey","normalizeText","getTransform","degree","redrawTextBoundingBox","showSelectedShapeActions","Boolean","editingElement","getElementMap","acc","getDrawingVersion","el","getNonDeletedElements","isNonDeletedElement","languages","lng","label","concat","sort","left","right","lang","percentages","currentLanguage","currentLanguageData","fallbackLanguage","setLanguage","async","language","newLng","documentElement","dir","languageDetector","cacheUserLanguage","getLanguage","findPartsForData","parts","part","path","replacement","fallbackLanguageData","LanguageDetector","init","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","isOverScrollBars","scrollBars","isOverHorizontal","isOverVertical","horizontal","vertical","scrollBar","isOverEither","isSomeElementSelected","normalizeScroll","pos","calculateScrollCenter","cords","viewportX1","viewportY1","sceneCoordsToViewportCoords","sceneX","sceneY","viewportX2","viewportY2","isOutsideViewPort","from","minDistance","closestElement","getClosestElementBounds","viewportCoordsToSceneCoords","clientX","clientY","centerX","centerY","hasBackground","hasStroke","hasText","getElementAtPosition","hitElement","getZoomOrigin","getNormalizedZoom","normalizedZoom","parseFloat","toFixed","callbacks","Set","nonDeletedElements","elementsMap","getElementsIncludingDeleted","this","getElements","getElement","getNonDeletedElement","replaceAllElements","nextElements","callback","addCallback","cb","add","SVG_NS","mockDateTime","getDateTime","date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","getMinutes","capitalizeString","str","charAt","toUpperCase","isWritableElement","target","HTMLElement","dataset","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","getFontFamilyString","style","position","whiteSpace","innerText","join","offsetWidth","offsetHeight","span","display","overflow","offsetTop","removeChild","debounce","fn","timeout","lastArgs","handle","args","clearTimeout","setTimeout","flush","resetCursor","setCursorForShape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","isMac","zoomOrigin","getGlobalCSSVariable","name","getComputedStyle","getPropertyValue","RE_RTL_CHECK","RegExp","tupleToCoors","xyTuple","TopErrorBoundary","React","Component","state","hasError","sentryEventId","localStorage","render","errorSplash","props","children","componentDidCatch","error","errorInfo","_localStorage","JSON","parse","Sentry","scope","setExtras","eventId","setState","stringify","selectTextArea","activeElement","preventDefault","select","templateStrFn","default","encodeURIComponent","open","className","onClick","location","reload","clear","role","aria-label","aria-hidden","createGithubIssue","rows","onPointerDown","readOnly","LoadingMessage","InitializeApp","isLoading","detect","setLanguageFirstTime","createContext","IsMobileProvider","query","useRef","matchMedia","matches","addListener","removeListener","isMobile","setMobile","useState","useEffect","Provider","useIsMobile","useContext","Save","show","setShow","sorted","docs","dateLastSaved","localeCompare","icon","faSave","faTimes","entry","handleLoad","loadDoc","faFolderOpen","getDefaultAppState","errorMessage","multiElement","editingLinearElement","elementLocked","exportBackground","shouldAddWatermark","currentItemStrokeColor","oc","black","currentItemBackgroundColor","currentItemFillStyle","currentItemStrokeWidth","currentItemStrokeStyle","currentItemRoughness","currentItemOpacity","currentItemFontSize","currentItemFontFamily","currentItemTextAlign","viewBackgroundColor","white","cursorX","cursorY","cursorButton","scrolledOutside","username","isCollaborating","isResizing","isRotating","selectionElement","openMenu","lastPointerDownWith","previousSelectedElementIds","collaborators","Map","showShortcutsDialog","zenModeEnabled","innerWidth","innerHeight","isLibraryOpen","clearAppStateForLocalStorage","exportedState","cleanAppStateForExport","shades","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","gray","elementBackground","elementStroke","getClientColors","clientId","sum","charCodeAt","backgrounds","colors","strokes","background","LinearElementEditor","elementId","activePointIndex","draggingElementPointIndex","lastUncommittedPoint","normalizePoints","lastX","lastY","clickedPointIndex","getPointIndexUnderCursor","deltaX","deltaY","targetPoint","movePoint","history","didAddPoint","createPointAt","resumeRecording","newPoint","pointHandles","getPointsGlobalCoordinates","POINT_HANDLE_SIZE","offsetX","offsetY","_idx","pointIndex","targetPosition","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","strokeRectWithRotation","strokeRect","strokeCircle","beginPath","arc","renderScene","renderScrollbars","renderSelection","renderGrid","atLeastOneVisibleElement","normalizedCanvasWidth","normalizedCanvasHeight","clearRect","zoomTranslationX","zoomTranslationY","origStrokeStyle","moveTo","lineTo","strokeGrid","ceil","visibleElements","isVisibleElement","lineWidth","setLineDash","renderLinearPointHandles","selections","selectionColors","isSelectedViaGroup","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","groupElements","elementWidth","elementHeight","initialLineDash","getLineDash","lineDashOffset","dashedLinePadding","dashWidth","spaceWidth","locallySelectedElements","remotePointerViewportCoords","remotePointerUsernames","isOutOfBounds","remotePointerButton","closePath","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","viewportWidth","viewportHeight","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","top","parseInt","bottom","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","SCROLLBAR_MARGIN","getScrollBars","radius","quadraticCurveTo","roundRect","SCROLLBAR_WIDTH","renderSceneToSvg","rsvg","svgRoot","node","group","ownerDocument","createElementNS","direction","textAnchor","textContent","renderElementToSvg","exportToCanvas","exportPadding","createCanvas","tempCanvas","sceneElements","getWatermarkElement","exportToSvg","innerHTML","rect","svg","tryParseNumber","match","exec","isNumericColumn","columnIndex","every","tryParseCells","cells","numCols","hasHeader","values","spreadsheet","yAxisLabel","labels","valueColumnIndex","labelColumnIndex","row","renderSpreadsheet","range","minYLabel","toLocaleString","maxYLabel","bars","barHeight","xLabels","labelX","BAR_HEIGHT","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","clipboard","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","getClipboardContent","clipboardData","getData","trim","readText","numColsFirstLine","transposedResults","nextCells","col","nextCellRow","transposeCells","tryParseSpreadsheet","clipboardElements","getAppClipboard","copyTextToSystemClipboard","copied","writeText","copyTextViaExecCommand","getAttribute","textarea","border","padding","margin","yPosition","pageYOffset","scrollTop","success","setSelectionRange","execCommand","migrateElementWithProperties","extra","base","migrateElement","fontPx","_fontFamily","fontFamilyName","fontFamilyString","getFontFamilyByName","restore","savedElements","savedState","migratedElement","log","scrollToContent","loadFromBlob","contents","blob","Blob","Promise","resolve","reader","FileReader","readAsText","onloadend","readyState","DONE","defaultAppState","updateAppState","serializeAsJSON","source","origin","saveAsJSON","fileHandle","serialized","fileSave","fileName","description","extensions","_LATEST_LIBRARY_ITEMS","loadLibrary","getItem","items","saveLibrary","prevLibraryItems","serializedItems","setItem","axios","require","byteToHex","byte","getCollaborationLinkData","link","URL","hash","generateCollaborationLink","Uint8Array","crypto","getRandomValues","generateRandomID","subtle","generateKey","exportKey","generateEncryptionKey","pathname","getImportedKey","usage","importKey","alg","ext","key_ops","kty","encryptAESGEM","importedKey","iv","createIV","encrypt","exportCanvas","alert","tempSvg","outerHTML","svgroot","copyCanvasToClipboardAsSvg","toBlob","reject","write","ClipboardItem","copyCanvasToClipboardAsPng","json","encoded","TextEncoder","encode","encrypted","exportedKey","response","fetch","process","method","url","href","urlString","prompt","exportToBackend","loadScene","privateKey","lastHttpStatus","status","substr","lastSuccessfulPut","restoreFromUrl","ok","buffer","arrayBuffer","decrypted","decrypt","string","TextDecoder","decode","importFromBackend","restoreFromLocalStorage","commitToHistory","Portal","app","socket","socketInitialized","roomID","roomKey","on","emit","restoreUserName","broadcastScene","INIT","clients","setCollaborators","close","isOpen","volatile","SHAPES","viewBox","d","strokeLinecap","shapesShortcutKeys","flat","clearAppStatePropertiesForHistory","SceneHistory","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","lastCommittedPoint","hydrateHistoryEntry","dehydratedExcalidrawElement","versions","getSnapshotForTest","dehydratedHistoryEntry","shouldCreateEntry","nextEntry","pushEntry","newEntryDehydrated","newEntry","clearRedoStack","redoOnce","entryToRestore","pop","undoOnce","currentEntry","setCurrentState","record","Popover","onCloseRequest","fitInViewport","popoverRef","useLayoutEffect","getBoundingClientRect","contains","unstable_batchedUpdates","addEventListener","removeEventListener","ref","ContextMenu","onContextMenu","option","ContextMenuOption","action","contextMenuNode","getContextMenuNode","div","handleClose","unmountComponentAtNode","params","of","ActionManager","updater","getAppState","actions","renderAction","PanelComponent","updateData","formState","perform","registerAction","registerAll","handleKeyDown","keyPriority","keyTest","executeAction","getContextMenuItems","actionFilter","contextItemPredicate","contextMenuOrder","contextItemLabel","ToolButton","forwardRef","innerRef","useImperativeHandle","sizeCn","hidden","selected","visible","title","keyBindingLabel","showAriaLabel","aria-keyshortcuts","data-testid","onChange","checked","defaultProps","ACTIVE_ELEMENT_COLOR","createIcon","mirror","focusable","save","saveAs","load","trash","palette","exportFile","zoomIn","zoomOut","done","menu","undo","redo","resetZoom","bringForward","sendBackward","bringToFront","sendToBack","strokeLinejoin","users","start","stop","back","marginLeft","clone","shield","register","handleGroupEditingState","siblingElements","actionDeleteSelected","deleteSelectedElements","swap","indexA","indexB","moveOneLeft","indicesToMove","isSorted","moveOneRight","reversedIndicesToMove","moveAllLeft","leftMostElements","reverse","moveAllRight","rightMostElements","moveElements","func","_elements","selectedIndices","deletedIndicesCache","len","getElementIndices","ButtonSelect","code","selectedPoint","groupIdMap","isValidColor","color","Option","keyBindings","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","focus","aria-modal","onKeyDown","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","_color","currentTarget","onFocus","ColorInput","innerValue","setInnerValue","inputRef","changeColor","useCallback","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","changeProperty","getFormValue","defaultValue","attributes","getCommonAttributeOfSelectedElements","KEY_CODES","step","onWheel","stopPropagation","_","confirm","actionFinalize","commonBounds","currentZoom","zoomX","zoomY","newZoom","calculateZoom","newElements","blur","multiPointElement","linePoints","ProjectName","handleFocus","selection","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","selectNode","handleBlur","removeSelection","isComposing","makeEditable","editable","contentEditable","suppressContentEditableWarning","data-type","catch","loadedElements","loadedAppState","fileOpen","mimeTypes","loadFromJSON","then","message","copiedStyles","pastedElement","ICON","xmlns","HelpIcon","requestFullscreen","exitFullscreen","selectedGroupId","elementIdsInGroup","updatedElements","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","updatedElementsInOrder","updatedElement","nextGroupIds","removeFromSelectedGroups","Avatar","getCenter","collaborator","shortName","names","substring","firstName","lastName","getClientInitials","pointer","pointers","allCoords","coords","getDistance","array","item","writeData","prevElements","prevElementMap","nextElementMap","nextElement","prevElement","syncHistory","testUndo","shift","Island","gap","align","justifyContent","alignItems","justifyItems","FixedSideContainer","UserList","mobile","compClassName","ICONS","CHECKED","UNCHECKED","LockIcon","Modal","modalRoot","useBodyRoot","createPortal","aria-labelledby","labelledBy","maxWidth","maxHeight","overflowY","Dialog","islandRef","focusableElements","queryFocusableElements","currentIndex","findIndex","querySelectorAll","scales","defaultScale","ExportModal","actionManager","onExportToPng","onExportToSvg","onExportToClipboard","onExportToBackend","someElementIsSelected","setScale","exportSelected","setExportSelected","previewRef","exportedElements","previewNode","ExportDialog","modalIsShown","setModalIsShown","triggerButton","LanguageList","i18n","floating","Fragment","HintViewer","hint","multiMode","targetElement","getHints","SelectedShapeActions","targetElements","getTargetElement","isEditing","LIBRARY_ICON","ShapesSwitcher","setAppState","ZoomActions","marginInlineStart","Section","heading","header","RoomModal","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","onPressingEnter","roomLinkInput","htmlFor","onKeyPress","RoomDialog","collaboratorCount","setActiveRoomLink","MobileMenu","exportButton","onLockToggle","marginBottom","marginRight","client","ErrorDialog","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","borderTop","flex","minWidth","shortcuts","ShortcutKey","isOr","wordBreak","borderRadius","minHeight","boxSizing","Footer","marginTop","paddingTop","rel","ShortcutsDialog","GitHubCorner","memo","transformOrigin","Tooltip","PLUS_ICON","LibraryUnit","pendingElements","onRemoveFromLibrary","elementsToRender","child","tagName","isHovered","setIsHovered","adder","onMouseEnter","onMouseLeave","draggable","onDragStart","dataTransfer","setData","LibraryMenuItems","library","onAddToLibrary","onInsertShape","numCells","numRows","addedPendingElements","j","shouldAddPendingElements","bind","LibraryMenu","onClickOutside","listener","Element","useOnClickOutside","libraryItems","setLibraryItems","loadingState","setIsLoading","loadingTimerRef","race","removeFromLibrary","nextItems","indexToRemove","addToLibrary","toggleZenMode","renderExportDialog","createExporter","closeLibrary","deselectItems","shouldRenderSelectedShapeActions","libraryMenu","zIndex","renderFixedSideContainer","getNecessaryObj","prevAppState","withBatchedUpdates","didTapTwice","tappedTwiceTimer","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","touchTimeout","touchMoving","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","super","portal","lastBroadcastedOrReceivedSceneVersion","broadcastedElementVersions","removeSceneCallback","unmounted","syncActionResult","actionResult","saveDebounced","onUnload","destroySocketClient","disableEvent","onFontLoaded","onSceneUpdated","initializeScene","URLSearchParams","search","jsonMatch","scene","isCollaborationScene","shouldForceLoadScene","replaceState","initializeSocketClient","showLoadingState","onResize","onHashChange","beforeUnload","timestamp","room","returnValue","queueBroadcastAllElements","throttle","UPDATE","onCut","copyAll","onCopy","copyToAppClipboard","copyToClipboardAsPng","copyToClipboardAsSvg","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","onTapEnd","pasteFromClipboard","elementUnderCursor","elementFromPoint","addElementsFromPasteOrLibrary","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","obj","removePointer","pointerId","openPortal","pushState","closePortal","toggleLock","prevState","toggleGridMode","roomMatch","initialize","initializationTimer","updateScene","decryptedData","remoteElements","payload","localElementMap","socketIOClient","encryptedData","decodedData","decryptAESGEM","socketID","pointerCoords","button","user","off","broadcastMouseLocation","_broadcastSocketData","sceneType","syncAll","syncableElements","syncableElement","updateCurrentCursorPosition","HTMLSelectElement","findShapeByKey","update","startTextEditing","ctrlKey","metaKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","setElements","insertAtParentCenter","existingTextElement","getTextElementAtPosition","parentCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","handleCanvasPointerMove","savePointer","center","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","handlePointerMove","buttons","elementWithResizeHandler","handleTouchMove","handleCanvasPointerDown","persist","maybeOpenContextMenuAfterPointerDownOnTouchDevices","maybeCleanupAfterMissingPointerUp","handleCanvasPanUsingWheelOrSpaceDrag","updateGestureOnPointerDown","pointerDownState","initialPointerDownState","handleDraggingScrollBar","clearSelectionIfNotUsingSelection","handleSelectionOnPointerDown","handleTextOnPointerDown","handleLinearElementOnPointerDown","createGenericElementOnPointerDown","onPointerMove","onPointerMoveFromPointerDownHandler","onPointerUp","onPointerUpFromPointerDownHandler","POINTER_MOVE","POINTER_UP","eventListeners","onMove","onUp","openContextMenu","nextPastePrevented","isLinux","preventNextPaste","PASTE","enableNextPaste","teardown","BLUR","passive","resize","offset","getResizeOffsetXY","arrowDirection","getResizeArrowDirection","handlePointerDown","hit","maybeClearSelectionWhenHittingElement","wasAddedToSelection","gridX","gridY","handleCanvasRef","WHEEL","handleWheel","TOUCH_START","TOUCH_END","handleCanvasOnDrop","libraryShapes","file","files","endsWith","handleCanvasContextMenu","MAX_STEP","delta","isNaN","saveToLocalStorage","isCloudConnected","activeDocIndex","saveActiveDoc","firstReload","flurb","idText","createRedoAction","SaveToURL","statCodeString","codeLeadingDigit","appStateJSON","elementsJSON","reqData","lastSaved","toISOString","headers","activeDocName","restoreFromURL","fetchDocs","serverURL","cloudDocs","listDocs","activateCloud","docList","urlParams","docToLoad","newDocName","saveNewDoc","docName","isRefresh","newurl","protocol","host","reloadDoc","prevDocName","prevDocNo","l","canvasDOMWidth","canvasDOMHeight","canvasScale","canvasWidth","canvasHeight","saveUsernameToLocalStorage","onDoubleClick","onPointerCancel","onTouchMove","onDrop","collabForceLoadFlag","previousRoom","defineProperties","configurable","addEventListeners","componentWillUnmount","removeEventListeners","COPY","CUT","KEYDOWN","MOUSE_MOVE","KEYUP","RESIZE","UNLOAD","DRAG_OVER","DROP","HASHCHANGE","GESTURE_START","GESTURE_CHANGE","GESTURE_END","BEFORE_UNLOAD","fonts","componentDidUpdate","prevProps","prevWidth","prevHeight","currentWidth","currentHeight","pointerViewportCoords","pointerUsernames","sockets","restoreUsernameFromLocalStorage","resetSelection","updateElement","_element","updateTextElement","onSubmit","onCancel","getViewportCoords","updateWysiwygStyle","viewportX","viewportY","transform","tabIndex","wrap","backfaceVisibility","outline","oninput","onkeydown","handleSubmit","stopEvent","cleanup","isDestroyed","onblur","rebindBlur","unbindUpdate","closest","textWysiwyg","originInGrid","scrollbars","lastCoords","hasBeenDuplicated","drag","hasOccurred","getDragOffsetXY","resizeX","resizeY","setResizeHandle","normalizeResizeHandle","resizeElements","newResizeHandle","handlePointDragging","dragX","dragY","dragSelectedElements","elementsToAppend","duplicatedElement","originDragX","originDragY","simplify","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","handlePointerUp","_prevState","elementClickedInside","getElementContainingPosition","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","checkValidServiceWorker","contentType","ready","unregister","userAgent","SentryEnvHostnameMap","onlineEnv","REACT_APP_DISABLE_SENTRY","ExcalidrawApp","dimensions","setDimensions","dsn","environment","release","ignoreErrors","integrations","SentryIntegrations","levels","beforeSend","request","__EXCALIDRAW_SHA__","rootElement","getElementById","ReactDOM","info","registerServiceWorker","waitingServiceWorker","waiting","STATE_CHANGE","postMessage","launchQueue","setConsumer","launchParams","getFile","webpackAsyncContext","req","__webpack_require__","o","ids","all","module","exports"],"mappings":"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,SAAS6Z,MACpDpE,SAAW9yB,OAAOqd,SAASyV,OAIvC,OAGF9yB,OAAOk8B,iBAAiB,OAAQ,KAC9B,MAAM8tB,EAAK,UAAMjzB,IAAN,sBAEP8yB,IAEFc,GAAwBX,EAAOC,GAI/B95C,UAAU+5C,cAAcW,MAAM3iB,KAAK,KACjCt9B,QAAQuhD,KACN,gHAMJpC,GAAgBC,EAAOC,OCyD/BmC,CAAsB,CACpB3B,SAAWN,IACT,MAAMkC,EAAuBlC,EAAamC,QACtCD,IACFA,EAAqBnwB,iBACnBrrC,EAAM07D,aACL97C,IAGe,cAFCA,EAAM8H,OACAgD,OAEnBvb,OAAOqd,SAASC,WAItB+uC,EAAqBG,YAAY,CAAEh7D,KAAM,qBAK3C,gBAAiBwO,QAAU,iBAAkBA,QAC9CA,OAAeysD,YAAYC,YAC1Bj6C,UACE,IAAKk6C,EAAa/L,MAAM/sD,OACtB,OAEF,MAAMm/B,EAAa25B,EAAa/L,MAAM,GAChC5uB,QAAagB,EAAW45B,UAC9B96B,GAAaE,M,i4NC3InB,IAAI18B,EAAM,CACT,cAAe,CACd,IACA,EACA,IAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,OAAQ,CACP,GACA,GAED,YAAa,CACZ,GACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,GAED,eAAgB,CACf,GACA,EACA,GAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,gBAAiB,CAChB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,IAED,UAAW,CACV,GACA,EACA,IAED,eAAgB,CACf,GACA,EACA,KAGF,SAASu3D,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE13D,EAAKw3D,GAC9B,OAAO56B,QAAQC,UAAU+V,MAAK,WAC7B,IAAI90C,EAAI,IAAIyH,MAAM,uBAAyBiyD,EAAM,KAEjD,MADA15D,EAAEwvC,KAAO,mBACHxvC,KAIR,IAAI65D,EAAM33D,EAAIw3D,GAAMnpD,EAAKspD,EAAI,GAC7B,OAAO/6B,QAAQg7B,IAAID,EAAI3oD,MAAM,GAAGhP,IAAIy3D,EAAoB35D,IAAI80C,MAAK,WAChE,OAAO6kB,EAAoBx0D,EAAEoL,EAAIspD,EAAI,OAGvCJ,EAAoB1gD,KAAO,WAC1B,OAAO1I,OAAO0I,KAAK7W,IAEpBu3D,EAAoBlpD,GAAK,GACzBwpD,EAAOC,QAAUP,G","file":"static/js/main.44aa202c.chunk.js","sourcesContent":["import { FontFamily } from \"./element/types\";\n\nexport const DRAGGING_THRESHOLD = 10; // 10px\nexport const LINE_CONFIRM_THRESHOLD = 10; // 10px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  POINTER: \"pointer\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n  HASHCHANGE = \"hashchange\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  1: \"Virgil\",\n  2: \"Helvetica\",\n  3: \"Cascadia\",\n} as const;\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamily = 1;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\nexport const DEFAULT_VERTICAL_ALIGN = \"top\";\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const GRID_SIZE = 20; // TODO make it configurable?\n\nexport const LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG = \"collabLinkForceLoadFlag\";\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n} from \"./types\";\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return (\n    element != null &&\n    (element.type === \"arrow\" ||\n      element.type === \"line\" ||\n      element.type === \"draw\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"draw\" ||\n    element?.type === \"line\"\n  );\n};\n","import { Point } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\n// https://stackoverflow.com/a/6853926/232122\nexport const distanceBetweenPointAndSegment = (\n  x: number,\n  y: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const A = x - x1;\n  const B = y - y1;\n  const C = x2 - x1;\n  const D = y2 - y1;\n\n  const dot = A * C + B * D;\n  const lenSquare = C * C + D * D;\n  let param = -1;\n  if (lenSquare !== 0) {\n    // in case of 0 length line\n    param = dot / lenSquare;\n  }\n\n  let xx, yy;\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  } else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  } else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  const dx = x - xx;\n  const dy = y - yy;\n  return Math.hypot(dx, dy);\n};\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const adjustXYWithRotation = (\n  sides: {\n    n?: boolean;\n    e?: boolean;\n    s?: boolean;\n    w?: boolean;\n  },\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (sides.e && sides.w) {\n    x += deltaX1 + deltaX2;\n  } else if (sides.e) {\n    x += deltaX1 * (1 + cos);\n    y += deltaX1 * sin;\n    x += deltaX2 * (1 - cos);\n    y += deltaX2 * -sin;\n  } else if (sides.w) {\n    x += deltaX1 * (1 - cos);\n    y += deltaX1 * -sin;\n    x += deltaX2 * (1 + cos);\n    y += deltaX2 * sin;\n  }\n\n  if (sides.n && sides.s) {\n    y += deltaY1 + deltaY2;\n  } else if (sides.n) {\n    x += deltaY1 * sin;\n    y += deltaY1 * (1 - cos);\n    x += deltaY2 * -sin;\n    y += deltaY2 * (1 + cos);\n  } else if (sides.s) {\n    x += deltaY1 * -sin;\n    y += deltaY1 * (1 + cos);\n    x += deltaY2 * sin;\n    y += deltaY2 * (1 - cos);\n  }\n  return [x, y];\n};\n\nexport const getFlipAdjustment = (\n  side: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  nextWidth: number,\n  nextHeight: number,\n  nextX1: number,\n  nextY1: number,\n  nextX2: number,\n  nextY2: number,\n  finalX1: number,\n  finalY1: number,\n  finalX2: number,\n  finalY2: number,\n  needsRotation: boolean,\n  angle: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  let flipDiffX = 0;\n  let flipDiffY = 0;\n  if (nextWidth < 0) {\n    if (side === \"e\" || side === \"ne\" || side === \"se\") {\n      if (needsRotation) {\n        flipDiffX += (finalX2 - nextX1) * cos;\n        flipDiffY += (finalX2 - nextX1) * sin;\n      } else {\n        flipDiffX += finalX2 - nextX1;\n      }\n    }\n    if (side === \"w\" || side === \"nw\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffX += (finalX1 - nextX2) * cos;\n        flipDiffY += (finalX1 - nextX2) * sin;\n      } else {\n        flipDiffX += finalX1 - nextX2;\n      }\n    }\n  }\n  if (nextHeight < 0) {\n    if (side === \"s\" || side === \"se\" || side === \"sw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY2 - nextY1) * cos;\n        flipDiffX += (finalY2 - nextY1) * -sin;\n      } else {\n        flipDiffY += finalY2 - nextY1;\n      }\n    }\n    if (side === \"n\" || side === \"ne\" || side === \"nw\") {\n      if (needsRotation) {\n        flipDiffY += (finalY1 - nextY2) * cos;\n        flipDiffX += (finalY1 - nextY2) * -sin;\n      } else {\n        flipDiffY += finalY1 - nextY2;\n      }\n    }\n  }\n  return [flipDiffX, flipDiffY];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n): boolean => {\n  if (points.length >= 3) {\n    const [firstPoint, lastPoint] = [points[0], points[points.length - 1]];\n    return (\n      distance2d(firstPoint[0], firstPoint[1], lastPoint[0], lastPoint[1]) <=\n      LINE_CONFIRM_THRESHOLD\n    );\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doIntersect(current, next, p, extreme)) {\n      if (orientation(current, p, next) === 0) {\n        return onSegment(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Check if q lies on the line segment pr\nconst onSegment = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are collinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && onSegment(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && onSegment(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && onSegment(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && onSegment(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: number | null,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import { ExcalidrawElement, ExcalidrawLinearElement } from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = topY;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getArrowPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n) => {\n  const ops = getCurvePathOps(shape[0]);\n\n  const data = ops[ops.length - 1].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // we need to find p0 of the bezier curve\n  // it is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation\n  const prevOp = ops[ops.length - 2];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // we know the last point of the arrow\n  const [x2, y2] = p3;\n\n  // by using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // find the normalized direction vector based on the\n  // previously calculated points\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = 30; // pixels\n  const arrowLength = element.points.reduce((total, [cx, cy], idx, points) => {\n    const [px, py] = idx > 0 ? points[idx - 1] : [0, 0];\n    return total + Math.hypot(cx - px, cy - py);\n  }, 0);\n\n  // Scale down the arrow until we hit a certain size so that it doesn't look weird\n  // This value is selected by minizing a minmum size with the whole length of the arrow\n  // intead of last segment of the arrow\n  const minSize = Math.min(size, arrowLength / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  const angle = 20; // degrees\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isLinearElement(element)) {\n    return getLinearElementRotatedBounds(element, cx, cy);\n  }\n  if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    return [minX, minY, maxX, maxY];\n  }\n  if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    return [cx - ww, cy - hh, cx + ww, cy + hh];\n  }\n  const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n  const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n  const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n  const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n  const minX = Math.min(x11, x12, x22, x21);\n  const minY = Math.min(y11, y12, y22, y21);\n  const maxX = Math.max(x11, x12, x22, x21);\n  const maxY = Math.max(y11, y12, y22, y21);\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!isLinearElement(element)) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve = gen.curve(\n    points as [number, number][],\n    generateRoughOptions(element),\n  );\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { isTextElement, isLinearElement } from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getArrowPoints,\n  getElementAbsoluteCoords,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  SVG_NS,\n  distance,\n  getFontString,\n  getFontFamilyString,\n  isRTL,\n} from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\n\nconst CANVAS_PADDING = 20;\n\nconst DASHARRAY_DASHED = [12, 8];\nconst DASHARRAY_DOTTED = [3, 6];\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: number;\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: number,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element)) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) * window.devicePixelRatio\n        : 0;\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) * window.devicePixelRatio\n        : 0;\n    context.translate(canvasOffsetX * zoom, canvasOffsetY * zoom);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom + CANVAS_PADDING * 2;\n  }\n\n  context.translate(CANVAS_PADDING, CANVAS_PADDING);\n  context.scale(window.devicePixelRatio * zoom, window.devicePixelRatio * zoom);\n\n  const rc = rough.canvas(canvas);\n  drawElementOnCanvas(element, rc, context);\n  context.translate(-CANVAS_PADDING, -CANVAS_PADDING);\n  context.scale(\n    1 / (window.devicePixelRatio * zoom),\n    1 / (window.devicePixelRatio * zoom),\n  );\n  return { element, canvas, canvasZoom: zoom, canvasOffsetX, canvasOffsetY };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"draw\":\n    case \"line\": {\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          //  to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        const font = context.font;\n        context.font = getFontString(element);\n        const fillStyle = context.fillStyle;\n        context.fillStyle = element.strokeColor;\n        const textAlign = context.textAlign;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let i = 0; i < lines.length; i++) {\n          context.fillText(\n            lines[i],\n            horizontalOffset,\n            (i + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.fillStyle = fillStyle;\n        context.font = font;\n        context.textAlign = textAlign;\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (element: ExcalidrawElement): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? DASHARRAY_DASHED\n        : element.strokeStyle === \"dotted\"\n        ? DASHARRAY_DOTTED\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    //  dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    //  similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    //  hachureGap because if not specified, roughjs uses strokeWidth to\n    //  calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\":\n    case \"draw\": {\n      // If shape is a line and is a closed shape,\n      // fill the shape if a color is set.\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element) || null;\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        shape = generator.rectangle(\n          0,\n          0,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"draw\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        shape = [generator.curve(points as [number, number][], options)];\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const [x2, y2, x3, y3, x4, y4] = getArrowPoints(element, shape);\n          // for dotted arrows caps, reduce gap to make it more legible\n          if (element.strokeStyle === \"dotted\") {\n            options.strokeLineDash = [3, 4];\n            // for solid/dashed, keep solid arrow cap\n          } else {\n            delete options.strokeLineDash;\n          }\n          shape.push(\n            ...[\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ],\n          );\n        }\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  sceneState?: SceneState,\n) => {\n  const zoom = sceneState ? sceneState.zoom : 1;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n    elementWithCanvasCache.set(element, elementWithCanvas);\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      CANVAS_PADDING / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.rotate(-element.angle);\n  context.translate(-cx, -cy);\n  context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      const fillStyle = context.fillStyle;\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.fillStyle = fillStyle;\n      context.translate(\n        -element.x - sceneState.scrollX,\n        -element.y - sceneState.scrollY,\n      );\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"draw\":\n    case \"arrow\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.translate(shiftX, shiftY);\n        context.rotate(-element.angle);\n        context.translate(-cx, -cy);\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = rsvg.draw(getShapeForElement(element) as Drawable);\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"draw\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = rsvg.draw(shape);\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          (element.type === \"line\" || element.type === \"draw\") &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n","import { Random } from \"roughjs/bin/math\";\nimport nanoid from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () =>\n  process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { globalSceneState } from \"../scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"seed\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n\n      if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let i = prevPoints.length;\n          while (--i) {\n            const prevPoint: Point = prevPoints[i];\n            const nextPoint: Point = nextPoints[i];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n\n  globalSceneState.informMutation();\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => ({\n  ...element,\n  ...updates,\n  version: element.version + 1,\n  versionNonce: randomInteger(),\n});\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"draw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\n\nexport function selectGroup(\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n}\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport function isSelectedViaGroup(\n  appState: AppState,\n  element: ExcalidrawElement,\n) {\n  return !!element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n}\n\nexport function getSelectedGroupIds(appState: AppState): GroupId[] {\n  return Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n}\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport function selectGroupsForSelectedElements(\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState {\n  let nextAppState = { ...appState };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n}\n\nexport function isElementInGroup(element: ExcalidrawElement, groupId: string) {\n  return element.groupIds.includes(groupId);\n}\n\nexport function getElementsInGroup(\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) {\n  return elements.filter((element) => isElementInGroup(element, groupId));\n}\n\nexport function getSelectedGroupIdForElement(\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n}\n\nexport function getNewGroupIdsForDuplication(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let i = 0; i < endIndex; i++) {\n    copy[i] = mapper(copy[i]);\n  }\n\n  return copy;\n}\n\nexport function addToGroup(\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n}\n\nexport function removeFromSelectedGroups(\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) {\n  return groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  FontFamily,\n  GroupId,\n  VerticalAlign,\n} from \"../element/types\";\nimport { measureText, getFontString } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { adjustXYWithRotation } from \"../math\";\nimport { getResizedElementAbsoluteCoords } from \"./bounds\";\n\ntype ElementConstructorOpts = MarkOptional<\n  Omit<ExcalidrawGenericElement, \"id\" | \"type\" | \"isDeleted\">,\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"groupIds\"\n  | \"seed\"\n  | \"version\"\n  | \"versionNonce\"\n>;\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    groupIds = [],\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => ({\n  id: rest.id || randomId(),\n  type,\n  x,\n  y,\n  width,\n  height,\n  angle,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  groupIds,\n  seed: rest.seed ?? randomInteger(),\n  version: rest.version || 1,\n  versionNonce: rest.versionNonce ?? 0,\n  isDeleted: false as false,\n});\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\n/** computes element x/y offset based on textAlign/verticalAlign */\nfunction getTextElementPositionOffsets(\n  opts: {\n    textAlign: ExcalidrawTextElement[\"textAlign\"];\n    verticalAlign: ExcalidrawTextElement[\"verticalAlign\"];\n  },\n  metrics: {\n    width: number;\n    height: number;\n  },\n) {\n  return {\n    x:\n      opts.textAlign === \"center\"\n        ? metrics.width / 2\n        : opts.textAlign === \"right\"\n        ? metrics.width\n        : 0,\n    y: opts.verticalAlign === \"middle\" ? metrics.height / 2 : 0,\n  };\n}\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamily;\n    textAlign: TextAlign;\n    verticalAlign: VerticalAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const offsets = getTextElementPositionOffsets(opts, metrics);\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      verticalAlign: opts.verticalAlign,\n      x: opts.x - offsets.x,\n      y: opts.y - offsets.y,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n\n  return textElement;\n};\n\nconst getAdjustedDimensions = (\n  element: ExcalidrawTextElement,\n  nextText: string,\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  baseline: number;\n} => {\n  const {\n    width: nextWidth,\n    height: nextHeight,\n    baseline: nextBaseline,\n  } = measureText(nextText, getFontString(element));\n\n  const { textAlign, verticalAlign } = element;\n\n  let x, y;\n\n  if (textAlign === \"center\" && verticalAlign === \"middle\") {\n    const prevMetrics = measureText(element.text, getFontString(element));\n    const offsets = getTextElementPositionOffsets(element, {\n      width: nextWidth - prevMetrics.width,\n      height: nextHeight - prevMetrics.height,\n    });\n\n    x = element.x - offsets.x;\n    y = element.y - offsets.y;\n  } else {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n\n    [x, y] = adjustXYWithRotation(\n      {\n        s: true,\n        e: textAlign === \"center\" || textAlign === \"left\",\n        w: textAlign === \"center\" || textAlign === \"right\",\n      },\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n  }\n\n  return {\n    width: nextWidth,\n    height: nextHeight,\n    x: Number.isFinite(x) ? x : element.x,\n    y: Number.isFinite(y) ? y : element.y,\n    baseline: nextBaseline,\n  };\n};\n\nexport const updateTextElement = (\n  element: ExcalidrawTextElement,\n  { text, isDeleted }: { text: string; isDeleted?: boolean },\n): ExcalidrawTextElement => {\n  return newElementWith(element, {\n    text,\n    isDeleted: isDeleted ?? element.isDeleted,\n    ...getAdjustedDimensions(element, text),\n  });\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    lastCommittedPoint?: ExcalidrawLinearElement[\"lastCommittedPoint\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: [],\n    lastCommittedPoint: opts.lastCommittedPoint || null,\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n//  (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  copy.id = randomId();\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords } from \"./bounds\";\nimport { rotate } from \"../math\";\n\ntype Sides = \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\" | \"rotation\";\n\nconst handleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_HANDLER_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n  rotation: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n  rotation: true,\n};\n\nconst generateHandler = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): [number, number, number, number] => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const handlerRectanglesFromCoords = (\n  [x1, y1, x2, y2]: [number, number, number, number],\n  angle: number,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n  omitSides: { [T in Sides]?: boolean } = {},\n): Partial<{ [T in Sides]: [number, number, number, number] }> => {\n  const size = handleSizes[pointerType];\n  const handlerWidth = size / zoom;\n  const handlerHeight = size / zoom;\n\n  const handlerMarginX = size / zoom;\n  const handlerMarginY = size / zoom;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom;\n\n  const centeringOffset = (size - 8) / (2 * zoom);\n\n  const handlers: Partial<\n    { [T in Sides]: [number, number, number, number] }\n  > = {\n    nw: omitSides[\"nw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides[\"ne\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides[\"sw\"]\n      ? undefined\n      : generateHandler(\n          x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides[\"se\"]\n      ? undefined\n      : generateHandler(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides[\"rotation\"]\n      ? undefined\n      : generateHandler(\n          x1 + width / 2 - handlerWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handlerMarginY +\n            centeringOffset -\n            ROTATION_HANDLER_GAP / zoom,\n          handlerWidth,\n          handlerHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handlers (all cardinal directions)  above a certain size\n  const minimumSizeForEightHandlers = (5 * size) / zoom;\n  if (Math.abs(width) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"n\"]) {\n      handlers[\"n\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y1 - dashedLineMargin - handlerMarginY + centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"s\"]) {\n      handlers[\"s\"] = generateHandler(\n        x1 + width / 2 - handlerWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandlers) {\n    if (!omitSides[\"w\"]) {\n      handlers[\"w\"] = generateHandler(\n        x1 - dashedLineMargin - handlerMarginX + centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides[\"e\"]) {\n      handlers[\"e\"] = generateHandler(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handlerHeight / 2,\n        handlerWidth,\n        handlerHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return handlers;\n};\n\nexport const handlerRectangles = (\n  element: ExcalidrawElement,\n  zoom: number,\n  pointerType: PointerType = \"mouse\",\n) => {\n  let omitSides: { [T in Sides]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"draw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (element.type === \"text\") {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return handlerRectanglesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","import {\n  distanceBetweenPointAndSegment,\n  isPathALoop,\n  rotate,\n  isPointInPolygon,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport { NonDeletedExcalidrawElement } from \"./types\";\n\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getCurvePathOps,\n} from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\nimport { isLinearElement } from \"./typeChecks\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n  const dragFromInside =\n    element.backgroundColor !== \"transparent\" ||\n    appState.selectedElementIds[element.id];\n  if (element.type === \"line\" || element.type === \"draw\") {\n    return dragFromInside && isPathALoop(element.points);\n  }\n  return dragFromInside;\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n): boolean => {\n  // For shapes that are composed of lines, we only enable point-selection when the distance\n  // of the click is less than x pixels of any of the lines that the shape is composed of\n  const lineThreshold = 10 / zoom;\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // reverse rotate the pointer\n  [x, y] = rotate(x, y, cx, cy, -element.angle);\n\n  if (element.type === \"ellipse\") {\n    // https://stackoverflow.com/a/46007540/232122\n    const px = Math.abs(x - element.x - element.width / 2);\n    const py = Math.abs(y - element.y - element.height / 2);\n\n    let tx = 0.707;\n    let ty = 0.707;\n\n    const a = Math.abs(element.width) / 2;\n    const b = Math.abs(element.height) / 2;\n\n    [0, 1, 2, 3].forEach((x) => {\n      const xx = a * tx;\n      const yy = b * ty;\n\n      const ex = ((a * a - b * b) * tx ** 3) / a;\n      const ey = ((b * b - a * a) * ty ** 3) / b;\n\n      const rx = xx - ex;\n      const ry = yy - ey;\n\n      const qx = px - ex;\n      const qy = py - ey;\n\n      const r = Math.hypot(ry, rx);\n      const q = Math.hypot(qy, qx);\n\n      tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n      ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n      const t = Math.hypot(ty, tx);\n      tx /= t;\n      ty /= t;\n    });\n\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        a * tx - (px - lineThreshold) >= 0 && b * ty - (py - lineThreshold) >= 0\n      );\n    }\n    return Math.hypot(a * tx - px, b * ty - py) < lineThreshold;\n  } else if (element.type === \"rectangle\") {\n    if (isElementDraggableFromInside(element, appState)) {\n      return (\n        x > x1 - lineThreshold &&\n        x < x2 + lineThreshold &&\n        y > y1 - lineThreshold &&\n        y < y2 + lineThreshold\n      );\n    }\n\n    // (x1, y1) --A-- (x2, y1)\n    //    |D             |B\n    // (x1, y2) --C-- (x2, y2)\n    return (\n      distanceBetweenPointAndSegment(x, y, x1, y1, x2, y1) < lineThreshold || // A\n      distanceBetweenPointAndSegment(x, y, x2, y1, x2, y2) < lineThreshold || // B\n      distanceBetweenPointAndSegment(x, y, x2, y2, x1, y2) < lineThreshold || // C\n      distanceBetweenPointAndSegment(x, y, x1, y2, x1, y1) < lineThreshold // D\n    );\n  } else if (element.type === \"diamond\") {\n    x -= element.x;\n    y -= element.y;\n    let [\n      topX,\n      topY,\n      rightX,\n      rightY,\n      bottomX,\n      bottomY,\n      leftX,\n      leftY,\n    ] = getDiamondPoints(element);\n\n    if (isElementDraggableFromInside(element, appState)) {\n      // TODO: remove this when we normalize coordinates globally\n      if (topY > bottomY) {\n        [bottomY, topY] = [topY, bottomY];\n      }\n      if (rightX < leftX) {\n        [leftX, rightX] = [rightX, leftX];\n      }\n\n      topY -= lineThreshold;\n      bottomY += lineThreshold;\n      leftX -= lineThreshold;\n      rightX += lineThreshold;\n\n      // all deltas should be < 0. Delta > 0 indicates it's on the outside side\n      //  of the line.\n      //\n      //          (topX, topY)\n      //     D  /             \\ A\n      //      /               \\\n      //  (leftX, leftY)  (rightX, rightY)\n      //    C \\               / B\n      //      \\              /\n      //      (bottomX, bottomY)\n      //\n      // https://stackoverflow.com/a/2752753/927631\n      return (\n        // delta from line D\n        (leftX - topX) * (y - leftY) - (leftX - x) * (topY - leftY) <= 0 &&\n        // delta from line A\n        (topX - rightX) * (y - rightY) - (x - rightX) * (topY - rightY) <= 0 &&\n        // delta from line B\n        (rightX - bottomX) * (y - bottomY) -\n          (x - bottomX) * (rightY - bottomY) <=\n          0 &&\n        // delta from line C\n        (bottomX - leftX) * (y - leftY) - (x - leftX) * (bottomY - leftY) <= 0\n      );\n    }\n\n    return (\n      distanceBetweenPointAndSegment(x, y, topX, topY, rightX, rightY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, rightX, rightY, bottomX, bottomY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, bottomX, bottomY, leftX, leftY) <\n        lineThreshold ||\n      distanceBetweenPointAndSegment(x, y, leftX, leftY, topX, topY) <\n        lineThreshold\n    );\n  } else if (isLinearElement(element)) {\n    if (!getShapeForElement(element)) {\n      return false;\n    }\n    const shape = getShapeForElement(element) as Drawable[];\n\n    if (\n      x < x1 - lineThreshold ||\n      y < y1 - lineThreshold ||\n      x > x2 + lineThreshold ||\n      y > y2 + lineThreshold\n    ) {\n      return false;\n    }\n\n    const relX = x - element.x;\n    const relY = y - element.y;\n\n    if (isElementDraggableFromInside(element, appState)) {\n      const hit = shape.some((subshape) =>\n        hitTestCurveInside(subshape, relX, relY, lineThreshold),\n      );\n      if (hit) {\n        return true;\n      }\n    }\n\n    // hit thest all \"subshapes\" of the linear element\n    return shape.some((subshape) =>\n      hitTestRoughShape(subshape, relX, relY, lineThreshold),\n    );\n  } else if (element.type === \"text\") {\n    return x >= x1 && x <= x2 && y >= y1 && y <= y2;\n  } else if (element.type === \"selection\") {\n    console.warn(\"This should not happen, we need to investigate why it does.\");\n    return false;\n  }\n  throw new Error(`Unimplemented type ${element.type}`);\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      if (points.length) {\n        break;\n      }\n      points.push([operation.data[0], operation.data[1]]);\n    } else if (operation.op === \"bcurveTo\") {\n      points.push([operation.data[0], operation.data[1]]);\n      points.push([operation.data[2], operation.data[3]]);\n      points.push([operation.data[4], operation.data[5]]);\n    }\n  }\n  if (points.length >= 4) {\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nimport { AppState } from \"../types\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst isInHandlerRect = (\n  handler: [number, number, number, number],\n  x: number,\n  y: number,\n) =>\n  x >= handler[0] &&\n  x <= handler[0] + handler[2] &&\n  y >= handler[1] &&\n  y <= handler[1] + handler[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n  pointerType: PointerType,\n): HandlerRectanglesRet | false => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const { rotation: rotationHandler, ...handlers } = handlerRectangles(\n    element,\n    zoom,\n    pointerType,\n  );\n\n  if (rotationHandler && isInHandlerRect(rotationHandler, x, y)) {\n    return \"rotation\" as HandlerRectanglesRet;\n  }\n\n  const filter = Object.keys(handlers).filter((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    if (!handler) {\n      return false;\n    }\n    return isInHandlerRect(handler, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as HandlerRectanglesRet;\n  }\n\n  return false;\n};\n\nexport const getElementWithResizeHandler = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const resizeHandle = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return resizeHandle ? { element, resizeHandle } : null;\n  }, null as { element: NonDeletedExcalidrawElement; resizeHandle: HandlerRectanglesRet } | null);\n};\n\nexport const getResizeHandlerFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: number,\n  pointerType: PointerType,\n) => {\n  const handlers = handlerRectanglesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(handlers).find((key) => {\n    const handler = handlers[key as Exclude<HandlerRectanglesRet, \"rotation\">]!;\n    return handler && isInHandlerRect(handler, scenePointerX, scenePointerY);\n  });\n  return (found || false) as HandlerRectanglesRet;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  resizeHandle: ReturnType<typeof resizeTest>;\n}): string => {\n  const { element, resizeHandle } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (resizeHandle) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n\nexport const normalizeResizeHandle = (\n  element: ExcalidrawElement,\n  resizeHandle: HandlerRectanglesRet,\n): HandlerRectanglesRet => {\n  if (element.width >= 0 && element.height >= 0) {\n    return resizeHandle;\n  }\n\n  if (element.width < 0 && element.height < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"se\";\n      case \"ne\":\n        return \"sw\";\n      case \"se\":\n        return \"nw\";\n      case \"sw\":\n        return \"ne\";\n    }\n  } else if (element.width < 0) {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"ne\";\n      case \"ne\":\n        return \"nw\";\n      case \"se\":\n        return \"sw\";\n      case \"sw\":\n        return \"se\";\n      case \"e\":\n        return \"w\";\n      case \"w\":\n        return \"e\";\n    }\n  } else {\n    switch (resizeHandle) {\n      case \"nw\":\n        return \"sw\";\n      case \"ne\":\n        return \"se\";\n      case \"se\":\n        return \"ne\";\n      case \"sw\":\n        return \"nw\";\n      case \"n\":\n        return \"s\";\n      case \"s\":\n        return \"n\";\n    }\n  }\n\n  return resizeHandle;\n};\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport { rotate, adjustXYWithRotation, getFlipAdjustment } from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport { isLinearElement } from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n} from \"./resizeTest\";\nimport { measureText, getFontString } from \"../utils\";\n\ntype ResizeTestType = ReturnType<typeof resizeTest>;\n\nexport const resizeElements = (\n  resizeHandle: ResizeTestType,\n  setResizeHandle: (nextResizeHandle: ResizeTestType) => void,\n  selectedElements: NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (resizeHandle === \"rotation\") {\n      rotateSingleElement(\n        element,\n        pointerX,\n        pointerY,\n        isRotateWithDiscreteAngle,\n      );\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        isRotateWithDiscreteAngle,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      element.type === \"text\" &&\n      (resizeHandle === \"nw\" ||\n        resizeHandle === \"ne\" ||\n        resizeHandle === \"sw\" ||\n        resizeHandle === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        resizeHandle,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n    } else if (resizeHandle) {\n      resizeSingleElement(\n        element,\n        resizeHandle,\n        isResizeWithSidesSameLength,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n      setResizeHandle(normalizeResizeHandle(element, resizeHandle));\n      if (element.width < 0) {\n        mutateElement(element, { width: -element.width });\n      }\n      if (element.height < 0) {\n        mutateElement(element, { height: -element.height });\n      }\n    }\n\n    // update cursor\n    // FIXME it is not very nice to have this here\n    document.documentElement.style.cursor = getCursorForResizingElement({\n      element,\n      resizeHandle,\n    });\n\n    return true;\n  } else if (\n    selectedElements.length > 1 &&\n    (resizeHandle === \"nw\" ||\n      resizeHandle === \"ne\" ||\n      resizeHandle === \"sw\" ||\n      resizeHandle === \"se\")\n  ) {\n    resizeMultipleElements(selectedElements, resizeHandle, pointerX, pointerY);\n    return true;\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isRotateWithDiscreteAngle: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isRotateWithDiscreteAngle) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  if (angle >= 2 * Math.PI) {\n    angle -= 2 * Math.PI;\n  }\n  mutateElement(element, { angle });\n};\n\nconst resizeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const pointOrigin = element.points[0]; // can assume always [0, 0]?\n  const pointEnd = element.points[1];\n  if (resizeArrowDirection === \"end\") {\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        pointerX - element.x,\n        pointerY - element.y,\n      );\n      mutateElement(element, {\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        points: [\n          pointOrigin,\n          [\n            pointerX - pointOrigin[0] - element.x,\n            pointerY - pointOrigin[1] - element.y,\n          ],\n        ],\n      });\n    }\n  } else {\n    // resizeArrowDirection === \"origin\"\n    if (isRotateWithDiscreteAngle) {\n      const { width, height } = getPerfectElementSize(\n        element.type,\n        element.x + pointEnd[0] - pointOrigin[0] - pointerX,\n        element.y + pointEnd[1] - pointOrigin[1] - pointerY,\n      );\n      mutateElement(element, {\n        x: element.x + pointEnd[0] - pointOrigin[0] - width,\n        y: element.y + pointEnd[1] - pointOrigin[1] - height,\n        points: [pointOrigin, [width, height]],\n      });\n    } else {\n      mutateElement(element, {\n        x: pointerX,\n        y: pointerY,\n        points: [\n          pointOrigin,\n          [\n            pointEnd[0] - (pointerX - pointOrigin[0] - element.x),\n            pointEnd[1] - (pointerY - pointOrigin[1] - element.y),\n          ],\n        ],\n      });\n    }\n  }\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\nconst MIN_FONT_SIZE = 1;\n\nconst measureFontSizeFromWH = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  nextWidth: number,\n  nextHeight: number,\n): { size: number; baseline: number } | null => {\n  // We only use width to scale font on resize\n  const nextFontSize = element.fontSize * (nextWidth / element.width);\n  if (nextFontSize < MIN_FONT_SIZE) {\n    return null;\n  }\n  const metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  return {\n    size: nextFontSize,\n    baseline: metrics.baseline + (nextHeight - metrics.height),\n  };\n};\n\nconst getSidesForResizeHandle = (\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n) => {\n  return {\n    n:\n      /^(n|ne|nw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(s|se|sw)$/.test(resizeHandle)),\n    s:\n      /^(s|se|sw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(n|ne|nw)$/.test(resizeHandle)),\n    w:\n      /^(w|nw|sw)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(e|ne|se)$/.test(resizeHandle)),\n    e:\n      /^(e|ne|se)$/.test(resizeHandle) ||\n      (isResizeFromCenter && /^(w|nw|sw)$/.test(resizeHandle)),\n  };\n};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale;\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const nextWidth = element.width * scale;\n    const nextHeight = element.height * scale;\n    const nextFont = measureFontSizeFromWH(element, nextWidth, nextHeight);\n    if (nextFont === null) {\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      getSidesForResizeHandle(resizeHandle, isResizeFromCenter),\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n    mutateElement(element, {\n      fontSize: nextFont.size,\n      width: nextWidth,\n      height: nextHeight,\n      baseline: nextFont.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nconst resizeSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  resizeHandle: \"n\" | \"s\" | \"w\" | \"e\" | \"nw\" | \"ne\" | \"sw\" | \"se\",\n  sidesWithSameLength: boolean,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scaleX = 1;\n  let scaleY = 1;\n  if (resizeHandle === \"e\" || resizeHandle === \"ne\" || resizeHandle === \"se\") {\n    scaleX = (rotatedX - x1) / (x2 - x1);\n  }\n  if (resizeHandle === \"s\" || resizeHandle === \"sw\" || resizeHandle === \"se\") {\n    scaleY = (rotatedY - y1) / (y2 - y1);\n  }\n  if (resizeHandle === \"w\" || resizeHandle === \"nw\" || resizeHandle === \"sw\") {\n    scaleX = (x2 - rotatedX) / (x2 - x1);\n  }\n  if (resizeHandle === \"n\" || resizeHandle === \"nw\" || resizeHandle === \"ne\") {\n    scaleY = (y2 - rotatedY) / (y2 - y1);\n  }\n  let nextWidth = element.width * scaleX;\n  let nextHeight = element.height * scaleY;\n  if (sidesWithSameLength) {\n    nextWidth = nextHeight = Math.max(nextWidth, nextHeight);\n  }\n  const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n    element,\n    nextWidth,\n    nextHeight,\n  );\n  const deltaX1 = (x1 - nextX1) / 2;\n  const deltaY1 = (y1 - nextY1) / 2;\n  const deltaX2 = (x2 - nextX2) / 2;\n  const deltaY2 = (y2 - nextY2) / 2;\n  const rescaledPoints = rescalePointsInElement(element, nextWidth, nextHeight);\n  const [finalX1, finalY1, finalX2, finalY2] = getResizedElementAbsoluteCoords(\n    {\n      ...element,\n      ...rescaledPoints,\n    },\n    Math.abs(nextWidth),\n    Math.abs(nextHeight),\n  );\n  const [flipDiffX, flipDiffY] = getFlipAdjustment(\n    resizeHandle,\n    nextWidth,\n    nextHeight,\n    nextX1,\n    nextY1,\n    nextX2,\n    nextY2,\n    finalX1,\n    finalY1,\n    finalX2,\n    finalY2,\n    isLinearElement(element),\n    element.angle,\n  );\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    getSidesForResizeHandle(resizeHandle, isResizeFromCenter),\n    element.x - flipDiffX,\n    element.y - flipDiffY,\n    element.angle,\n    deltaX1,\n    deltaY1,\n    deltaX2,\n    deltaY2,\n  );\n  if (\n    nextWidth !== 0 &&\n    nextHeight !== 0 &&\n    Number.isFinite(nextElementX) &&\n    Number.isFinite(nextElementY)\n  ) {\n    mutateElement(element, {\n      width: nextWidth,\n      height: nextHeight,\n      x: nextElementX,\n      y: nextElementY,\n      ...rescaledPoints,\n    });\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  resizeHandle: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  let scale: number;\n  let getNextXY: (\n    element: NonDeletedExcalidrawElement,\n    origCoords: readonly [number, number, number, number],\n    finalCoords: readonly [number, number, number, number],\n  ) => { x: number; y: number };\n  switch (resizeHandle) {\n    case \"se\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, origY1], [finalX1, finalY1]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [, , origX2, origY2], [, , finalX2, finalY2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, , , origY2], [finalX1, , , finalY2]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [, origY1, origX2], [, finalY1, finalX2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n  }\n  if (scale > 0) {\n    const updates = elements.reduce(\n      (prev, element) => {\n        if (!prev) {\n          return prev;\n        }\n        const width = element.width * scale;\n        const height = element.height * scale;\n        let font: { fontSize?: number; baseline?: number } = {};\n        if (element.type === \"text\") {\n          const nextFont = measureFontSizeFromWH(element, width, height);\n          if (nextFont === null) {\n            return null;\n          }\n          font = { fontSize: nextFont.size, baseline: nextFont.baseline };\n        }\n        const origCoords = getElementAbsoluteCoords(element);\n        const rescaledPoints = rescalePointsInElement(element, width, height);\n        const finalCoords = getResizedElementAbsoluteCoords(\n          {\n            ...element,\n            ...rescaledPoints,\n          },\n          width,\n          height,\n        );\n        const { x, y } = getNextXY(element, origCoords, finalCoords);\n        return [...prev, { width, height, x, y, ...rescaledPoints, ...font }];\n      },\n      [] as\n        | {\n            width: number;\n            height: number;\n            x: number;\n            y: number;\n            points?: (readonly [number, number])[];\n            fontSize?: number;\n            baseline?: number;\n          }[]\n        | null,\n    );\n    if (updates) {\n      elements.forEach((element, index) => {\n        mutateElement(element, updates[index]);\n      });\n    }\n  }\n};\n\nexport const getResizeOffsetXY = (\n  resizeHandle: ResizeTestType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (resizeHandle) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  resizeHandle: ResizeTestType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (resizeHandle === \"nw\" && (px < 0 || py < 0)) ||\n    (resizeHandle === \"ne\" && px >= 0) ||\n    (resizeHandle === \"sw\" && px <= 0) ||\n    (resizeHandle === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { NonDeletedExcalidrawElement } from \"./types\";\nimport { getCommonBounds } from \"./bounds\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SHAPES } from \"../shapes\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\n\nexport const dragSelectedElements = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  selectedElements.forEach((element) => {\n    mutateElement(element, {\n      x: pointerX + element.x - x1,\n      y: pointerY + element.y - y1,\n    });\n  });\n};\n\nexport const getDragOffsetXY = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  return [x - x1, y - y1];\n};\n\nexport const dragNewElement = (\n  draggingElement: NonDeletedExcalidrawElement,\n  elementType: typeof SHAPES[number][\"value\"],\n  originX: number,\n  originY: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n) => {\n  if (isResizeWithSidesSameLength) {\n    ({ width, height } = getPerfectElementSize(\n      elementType,\n      width,\n      y < originY ? -height : height,\n    ));\n\n    if (height < 0) {\n      height = -height;\n    }\n  }\n\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n\n  if (isResizeCenterPoint) {\n    width += width;\n    height += height;\n    newX = originX - width / 2;\n    newY = originY - height / 2;\n  }\n\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width: width,\n      height: height,\n    });\n  }\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nexport const KEYS = {\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_UP: \"ArrowUp\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  DELETE: \"Delete\",\n  BACKSPACE: \"Backspace\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  TAB: \"Tab\",\n  SPACE: \" \",\n  QUESTION_MARK: \"?\",\n  F_KEY_CODE: 70,\n  ALT_KEY_CODE: 18,\n  Z_KEY_CODE: 90,\n  GRID_KEY_CODE: 222,\n  G_KEY_CODE: 71,\n  C_KEY_CODE: 67,\n  V_KEY_CODE: 86,\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (keyCode: string) =>\n  keyCode === KEYS.ARROW_LEFT ||\n  keyCode === KEYS.ARROW_RIGHT ||\n  keyCode === KEYS.ARROW_DOWN ||\n  keyCode === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey || event.which === KEYS.ALT_KEY_CODE;\n\nexport const getResizeWithSidesSameLengthKey = (event: MouseEvent) =>\n  event.shiftKey;\n\nexport const getRotateWithDiscreteAngleKey = (event: MouseEvent) =>\n  event.shiftKey;\n","import { KEYS } from \"../keys\";\nimport { isWritableElement, getFontString } from \"../utils\";\nimport { globalSceneState } from \"../scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\nimport { ExcalidrawElement } from \"./types\";\n\nconst normalizeText = (text: string) => {\n  return (\n    text\n      // replace tabs with spaces so they render and measure correctly\n      .replace(/\\t/g, \"        \")\n      // normalize newlines\n      .replace(/\\r?\\n|\\r/g, \"\\n\")\n  );\n};\n\nconst getTransform = (\n  width: number,\n  height: number,\n  angle: number,\n  zoom: number,\n) => {\n  const degree = (180 * angle) / Math.PI;\n  return `translate(${(width * (zoom - 1)) / 2}px, ${\n    (height * (zoom - 1)) / 2\n  }px) scale(${zoom}) rotate(${degree}deg)`;\n};\n\nexport const textWysiwyg = ({\n  id,\n  zoom,\n  onChange,\n  onSubmit,\n  onCancel,\n  getViewportCoords,\n}: {\n  id: ExcalidrawElement[\"id\"];\n  zoom: number;\n  onChange?: (text: string) => void;\n  onSubmit: (text: string) => void;\n  onCancel: () => void;\n  getViewportCoords: (x: number, y: number) => [number, number];\n}) => {\n  function updateWysiwygStyle() {\n    const updatedElement = globalSceneState.getElement(id);\n    if (isTextElement(updatedElement)) {\n      const [viewportX, viewportY] = getViewportCoords(\n        updatedElement.x,\n        updatedElement.y,\n      );\n      const { textAlign, angle } = updatedElement;\n\n      editable.value = updatedElement.text;\n\n      const lines = updatedElement.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n      const lineHeight = updatedElement.height / lines.length;\n\n      Object.assign(editable.style, {\n        font: getFontString(updatedElement),\n        // must be defined *after* font ¯\\_(ツ)_/¯\n        lineHeight: `${lineHeight}px`,\n        width: `${updatedElement.width}px`,\n        height: `${updatedElement.height}px`,\n        left: `${viewportX}px`,\n        top: `${viewportY}px`,\n        transform: getTransform(\n          updatedElement.width,\n          updatedElement.height,\n          angle,\n          zoom,\n        ),\n        textAlign: textAlign,\n        color: updatedElement.strokeColor,\n        opacity: updatedElement.opacity / 100,\n      });\n    }\n  }\n\n  const editable = document.createElement(\"textarea\");\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.dataset.type = \"wysiwyg\";\n  // prevent line wrapping on Safari\n  editable.wrap = \"off\";\n\n  Object.assign(editable.style, {\n    position: \"fixed\",\n    display: \"inline-block\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n    margin: 0,\n    padding: 0,\n    border: 0,\n    outline: 0,\n    resize: \"none\",\n    background: \"transparent\",\n    overflow: \"hidden\",\n    // prevent line wrapping (`whitespace: nowrap` doesn't work on FF)\n    whiteSpace: \"pre\",\n  });\n\n  updateWysiwygStyle();\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(normalizeText(editable.value));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && !event.altKey) {\n      event.stopPropagation();\n    }\n  };\n\n  const stopEvent = (event: Event) => {\n    event.stopPropagation();\n  };\n\n  const handleSubmit = () => {\n    if (editable.value) {\n      onSubmit(normalizeText(editable.value));\n    } else {\n      onCancel();\n    }\n    cleanup();\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    window.removeEventListener(\"resize\", updateWysiwygStyle);\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    document.body.removeChild(editable);\n  };\n\n  const rebindBlur = () => {\n    window.removeEventListener(\"pointerup\", rebindBlur);\n    // deferred to guard against focus traps on various UIs that steal focus\n    //  upon pointerUp\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      event.target instanceof HTMLElement &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", rebindBlur);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      //  alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = globalSceneState.addCallback(() => {\n    updateWysiwygStyle();\n    editable.focus();\n  });\n\n  let isDestroyed = false;\n\n  editable.onblur = handleSubmit;\n  // reposition wysiwyg in case of window resize. Happens on mobile when\n  //  device keyboard is opened.\n  window.addEventListener(\"resize\", updateWysiwygStyle);\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, true);\n  document.body.appendChild(editable);\n  editable.focus();\n  editable.select();\n};\n","import { measureText, getFontString } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, getFontString(element));\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    appState.editingElement ||\n      getSelectedElements(elements, appState).length ||\n      appState.elementType !== \"selection\",\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\n\nexport {\n  newElement,\n  newTextElement,\n  updateTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n} from \"./handlerRectangles\";\nexport { hitTest } from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  normalizeResizeHandle,\n  getElementWithResizeHandler,\n  getResizeHandlerFromCoords,\n} from \"./resizeTest\";\nexport {\n  resizeElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport {\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"./dragElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getSyncableElements = (\n  elements: readonly ExcalidrawElement[], // There are places in Excalidraw where synthetic invisibly small elements are added and removed.\n) =>\n  // It's probably best to keep those local otherwise there might be a race condition that\n  // gets the app into an invalid state. I've never seen it happen but I'm worried about it :)\n  elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n\nexport const getElementMap = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n\nexport const getDrawingVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n","import LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport fallbackLanguageData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\n\nconst COMPLETION_THRESHOLD_TO_EXCEED = 85;\n\ninterface Language {\n  lng: string;\n  label: string;\n  data: string;\n  rtl?: boolean;\n}\n\nconst allLanguages: Language[] = [\n  { lng: \"bg-BG\", label: \"Български\", data: \"bg-BG.json\" },\n  { lng: \"de-DE\", label: \"Deutsch\", data: \"de-DE.json\" },\n  { lng: \"es-ES\", label: \"Español\", data: \"es-ES.json\" },\n  { lng: \"ca-ES\", label: \"Catalan\", data: \"ca-ES.json\" },\n  { lng: \"el-GR\", label: \"Ελληνικά\", data: \"el-GR.json\" },\n  { lng: \"fr-FR\", label: \"Français\", data: \"fr-FR.json\" },\n  { lng: \"id-ID\", label: \"Bahasa Indonesia\", data: \"id-ID.json\" },\n  { lng: \"it-IT\", label: \"Italiano\", data: \"it-IT.json\" },\n  { lng: \"hu-HU\", label: \"Magyar\", data: \"hu-HU.json\" },\n  { lng: \"nl-NL\", label: \"Nederlands\", data: \"nl-NL.json\" },\n  { lng: \"nb-NO\", label: \"Norsk bokmål\", data: \"nb-NO.json\" },\n  { lng: \"nn-NO\", label: \"Norsk nynorsk\", data: \"nn-NO.json\" },\n  { lng: \"pl-PL\", label: \"Polski\", data: \"pl-PL.json\" },\n  { lng: \"pt-PT\", label: \"Português\", data: \"pt-PT.json\" },\n  { lng: \"ru-RU\", label: \"Русский\", data: \"ru-RU.json\" },\n  { lng: \"uk-UA\", label: \"Українська\", data: \"uk-UA.json\" },\n  { lng: \"fi-FI\", label: \"Suomi\", data: \"fi-FI.json\" },\n  { lng: \"tr-TR\", label: \"Türkçe\", data: \"tr-TR.json\" },\n  { lng: \"ja-JP\", label: \"日本語\", data: \"ja-JP.json\" },\n  { lng: \"ko-KR\", label: \"한국어\", data: \"ko-KR.json\" },\n  { lng: \"zh-TW\", label: \"繁體中文\", data: \"zh-TW.json\" },\n  { lng: \"zh-CN\", label: \"简体中文\", data: \"zh-CN.json\" },\n  { lng: \"ar-SA\", label: \"العربية\", data: \"ar-SA.json\", rtl: true },\n  { lng: \"he-IL\", label: \"עברית\", data: \"he-IL.json\", rtl: true },\n  { lng: \"hi-IN\", label: \"हिन्दी\", data: \"hi-IN.json\" },\n];\n\nexport const languages: Language[] = [\n  { lng: \"en\", label: \"English\", data: \"en.json\" },\n]\n  .concat(\n    allLanguages.sort((left, right) => (left.label > right.label ? 1 : -1)),\n  )\n  .filter(\n    (lang) =>\n      (percentages as Record<string, number>)[lang.lng] >\n      COMPLETION_THRESHOLD_TO_EXCEED,\n  );\n\nlet currentLanguage = languages[0];\nlet currentLanguageData = {};\nconst fallbackLanguage = languages[0];\n\nexport const setLanguage = async (newLng: string | undefined) => {\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  currentLanguageData = await import(`./locales/${currentLanguage.data}`);\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const setLanguageFirstTime = async () => {\n  const newLng: string | undefined = languageDetector.detect();\n\n  currentLanguage =\n    languages.find((language) => language.lng === newLng) || fallbackLanguage;\n\n  document.documentElement.dir = currentLanguage.rtl ? \"rtl\" : \"ltr\";\n\n  currentLanguageData = await import(`./locales/${currentLanguage.data}`);\n\n  languageDetector.cacheUserLanguage(currentLanguage.lng);\n};\n\nexport const getLanguage = () => currentLanguage;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (var i = 0; i < parts.length; ++i) {\n    const part = parts[i];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (path: string, replacement?: { [key: string]: string }) => {\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLanguageData, parts) ||\n    findPartsForData(fallbackLanguageData, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (var key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n};\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (lng: string) => lng,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { FlooredNumber } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n): ScrollBars => {\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n): {\n  isOverEither: boolean;\n  isOverHorizontal: boolean;\n  isOverVertical: boolean;\n} => {\n  const [isOverHorizontal, isOverVertical] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar != null &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n  const isOverEither = isOverHorizontal || isOverVertical;\n  return { isOverEither, isOverHorizontal, isOverVertical };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean => {\n  return elements.some((element) => appState.selectedElementIds[element.id]);\n};\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return elements.filter((element) => appState.selectedElementIds[element.id]);\n};\n\nexport const getTargetElement = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  return appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n};\n","import { AppState, FlooredNumber } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds, getClosestElementBounds } from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nexport const normalizeScroll = (pos: number) =>\n  Math.floor(pos) as FlooredNumber;\n\nfunction isOutsideViewPort(\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n    canvas,\n    window.devicePixelRatio,\n  );\n  return (\n    viewportX2 - viewportX1 > appState.width ||\n    viewportY2 - viewportY1 > appState.height\n  );\n}\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: FlooredNumber; scrollY: FlooredNumber } => {\n  if (!elements.length) {\n    return {\n      scrollX: normalizeScroll(0),\n      scrollY: normalizeScroll(0),\n    };\n  }\n  const scale = window.devicePixelRatio;\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n        canvas,\n        scale,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return {\n    scrollX: normalizeScroll(appState.width / 2 - centerX),\n    scrollY: normalizeScroll(appState.height / 2 - centerY),\n  };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords, hitTest } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasStroke = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"draw\" ||\n  type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    if (hitTest(elements[i], appState, x, y, zoom)) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementContainingPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let i = elements.length - 1; i >= 0; --i) {\n    if (elements[i].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[i]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[i];\n      break;\n    }\n  }\n  return hitElement;\n};\n","export const getZoomOrigin = (\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  if (canvas === null) {\n    return { x: 0, y: 0 };\n  }\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    return { x: 0, y: 0 };\n  }\n\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  return {\n    x: normalizedCanvasWidth / 2,\n    y: normalizedCanvasHeight / 2,\n  };\n};\n\nexport const getNormalizedZoom = (zoom: number): number => {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 2));\n  return clampedZoom;\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport {\n  getNonDeletedElements,\n  isNonDeletedElement,\n  getElementMap,\n} from \"../element\";\n\nexport interface SceneStateCallback {\n  (): void;\n}\n\nexport interface SceneStateCallbackRemover {\n  (): void;\n}\n\nclass GlobalScene {\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap: {\n    [id: string]: ExcalidrawElement;\n  } = {};\n\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap[id] || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap = getElementMap(nextElements);\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n}\n\nexport const globalSceneState = new GlobalScene();\n","import { FlooredNumber } from \"./types\";\nimport { getZoomOrigin } from \"./scene\";\nimport { CURSOR_TYPE, FONT_FAMILY } from \"./constants\";\nimport { FontFamily, FontString } from \"./element/types\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamily;\n}) => {\n  return FONT_FAMILY[fontFamily];\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamily;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  line.innerText = text\n    .split(\"\\n\")\n    // replace empty lines with single space because leading/trailing empty\n    //  lines would be stripped from computation\n    .map((x) => x || \" \")\n    .join(\"\\n\");\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => fn(...args), timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    fn(...lastArgs);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = () => {\n  document.documentElement.style.cursor = \"\";\n};\n\nexport const setCursorForShape = (shape: string) => {\n  if (shape === \"selection\") {\n    resetCursor();\n  } else {\n    document.documentElement.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  const isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n  if (isMac) {\n    return `${shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\")\n      .replace(/\\bDel\\b/i, \"Delete\")\n      .replace(/\\b(Enter|Return)\\b/i, \"Enter\")}`;\n  }\n  return `${shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\")}`;\n};\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const clientXWithZoom = zoomOrigin.x + (clientX - zoomOrigin.x) / zoom;\n  const clientYWithZoom = zoomOrigin.y + (clientY - zoomOrigin.y) / zoom;\n\n  const x = clientXWithZoom - scrollX;\n  const y = clientYWithZoom - scrollY;\n\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n  canvas: HTMLCanvasElement | null,\n  scale: number,\n) => {\n  const zoomOrigin = getZoomOrigin(canvas, scale);\n  const x = zoomOrigin.x - (zoomOrigin.x - sceneX - scrollX) * zoom;\n  const y = zoomOrigin.y - (zoomOrigin.y - sceneY - scrollY) * zoom;\n\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => {\n  return RE_RTL_CHECK.test(text);\n};\n\nexport function tupleToCoors(\n  xyTuple: [number, number],\n): { x: number; y: number } {\n  const [x, y] = xyTuple;\n  return { x, y };\n}\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { resetCursor } from \"../utils\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    resetCursor();\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (await import(\"../bug-issue-template\")).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{\"Loading scene...\"}</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { setLanguageFirstTime } from \"../i18n\";\n\nexport class InitializeApp extends React.Component<\n  any,\n  { isLoading: boolean }\n> {\n  public state: { isLoading: boolean } = {\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    await setLanguageFirstTime();\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  public render() {\n    return this.state.isLoading ? <LoadingMessage /> : this.props.children;\n  }\n}\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nconst context = React.createContext(false);\n\nexport const IsMobileProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const query = useRef<MediaQueryList>();\n  if (!query.current) {\n    query.current = window.matchMedia\n      ? window.matchMedia(\n          \"(max-width: 640px), (max-height: 500px) and (max-width: 1000px)\",\n        )\n      : (({\n          matches: false,\n          addListener: () => {},\n          removeListener: () => {},\n        } as any) as MediaQueryList);\n  }\n  const [isMobile, setMobile] = useState(query.current.matches);\n\n  useEffect(() => {\n    const handler = () => setMobile(query.current!.matches);\n    query.current!.addListener(handler);\n    return () => query.current!.removeListener(handler);\n  }, []);\n\n  return <context.Provider value={isMobile}>{children}</context.Provider>;\n};\n\nexport default function useIsMobile() {\n  return useContext(context);\n}\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './Save.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolderOpen,faPenSquare,faTrash,faSave,faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { windowFuncs } from './App'\nimport { CloudDocInfo } from './App';\n\n\n// now the odd thing about this is that because the current reload mechanism\n// involves forcing a page refresh I actually, strictly speaking; only need the open\n// button, since the other endpoints aren't implemented yet.\n// to a large extent this is just a throwaway component, however it can have the list of docs\n// passed to it as a prop, which is what we're going to do. \n\n/** To export this into a component that will be usable in excalidraw\n * we first need to: 1) Wrap it in a file.  2) Give it an export parameter. 3) Import it into excalidraw's app.tsx; \n * 4) Give it a prop that sets whether it is visible or not. 5) Give excalidraw toolbar a reference to set that visibility. \n * 6) Change the references slightly so it can handle the excalidrawStore items 7) add a filter. 8)                                                      \n * \n * 7) Need a button that will dismiss this UI\n * */\n\n\n\nconst handleRename = (id:number,e:any) => {\n  // call the rename API\n  console.log(\"tried to handle rename\")\n}\n\nconst handleDelete = (id:number,e:any) => {\n // call the delete API\n}\n\nconst handleLoad = (id:number,e:any) => {\n // call the load API\n (window as windowFuncs).loadDoc(id);\n}\n\nconst Save = (props:any) => {\n  const [show,setShow] = useState(false);\n\n  let sorted;\n  if(typeof props.docs !== \"undefined\"){\n    sorted = [...props.docs]\n    sorted.sort((a,b) => a.dateLastSaved.localeCompare(b.dateLastSaved))\n  }\n\n  return (\n    <div className=\"Save-fixed-right-positioner\">\n    <div className={show?\"Save-hidden-save\":\"Save-collapsed-save\"} onClick={()=>{setShow(true)}}>\n      <FontAwesomeIcon className=\"Save-button-icon\" icon={faSave}/>\n    </div>  \n    <div className={show?\"Save-container-pane\":\"Save-hidden-save\"}>\n        <div className=\"Save-pane-content-container\">\n          <div className=\"Save-pane-header-container\">\n            <h3 className=\"Save-pane-header\">Cloud docs</h3>\n            <FontAwesomeIcon className=\"Save-sbutton-icon Save-close-icon\" icon={faTimes} onClick={()=>{setShow(false)}}></FontAwesomeIcon>\n          </div>\n\n            <div>\n            {\n              (typeof sorted === \"undefined\")?\"\":sorted.map((entry:CloudDocInfo) => {\n                return (\n                <div className=\"Save-entry-container\" key={entry.id}>\n                <p className=\"Save-entry-name\">{entry.name}</p>\n                {/* <div className = \"pane-button\" onClick={(e) => handleRename(entry.id,e)}> <FontAwesomeIcon className=\"Save-button-icon\" icon={faPenSquare}/> </div>  */}\n                <div className=\"Save-pane-button\" onClick={(e) => handleLoad(entry.id,e)}> <FontAwesomeIcon className=\"Save-button-icon\" icon={faFolderOpen}/> </div>\n                {/* <div className = \"pane-button\"> <FontAwesomeIcon className=\"Save-button-icon\" icon={faTrash} /></div> */}\n                </div>\n                )\n              })\n            }\n            </div>\n        </div>\n    </div>\n</div>\n  );\n}\n\nexport default Save;\n","import oc from \"open-color\";\nimport { AppState, FlooredNumber } from \"./types\";\nimport { getDateTime } from \"./utils\";\nimport { t } from \"./i18n\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"./constants\";\n\nexport const getDefaultAppState = (): AppState => {\n  return {\n    isLoading: false,\n    errorMessage: null,\n    draggingElement: null,\n    resizingElement: null,\n    multiElement: null,\n    editingElement: null,\n    editingLinearElement: null,\n    elementType: \"selection\",\n    elementLocked: false,\n    exportBackground: true,\n    shouldAddWatermark: false,\n    currentItemStrokeColor: oc.black,\n    currentItemBackgroundColor: \"transparent\",\n    currentItemFillStyle: \"hachure\",\n    currentItemStrokeWidth: 1,\n    currentItemStrokeStyle: \"solid\",\n    currentItemRoughness: 1,\n    currentItemOpacity: 100,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    viewBackgroundColor: oc.white,\n    scrollX: 0 as FlooredNumber,\n    scrollY: 0 as FlooredNumber,\n    cursorX: 0,\n    cursorY: 0,\n    cursorButton: \"up\",\n    scrolledOutside: false,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    username: \"\",\n    isCollaborating: false,\n    isResizing: false,\n    isRotating: false,\n    selectionElement: null,\n    zoom: 1,\n    openMenu: null,\n    lastPointerDownWith: \"mouse\",\n    selectedElementIds: {},\n    previousSelectedElementIds: {},\n    collaborators: new Map(),\n    shouldCacheIgnoreZoom: false,\n    showShortcutsDialog: false,\n    zenModeEnabled: false,\n    gridSize: null,\n    editingGroupId: null,\n    selectedGroupIds: {},\n    width: window.innerWidth,\n    height: window.innerHeight,\n    isLibraryOpen: false,\n  };\n};\n\nexport const clearAppStateForLocalStorage = (appState: AppState) => {\n  const {\n    draggingElement,\n    resizingElement,\n    multiElement,\n    editingElement,\n    selectionElement,\n    isResizing,\n    isRotating,\n    collaborators,\n    isCollaborating,\n    isLoading,\n    errorMessage,\n    showShortcutsDialog,\n    editingLinearElement,\n    isLibraryOpen,\n    ...exportedState\n  } = appState;\n  return exportedState;\n};\n\nexport const cleanAppStateForExport = (appState: AppState) => {\n  return {\n    viewBackgroundColor: appState.viewBackgroundColor,\n    gridSize: appState.gridSize,\n  };\n};\n","import oc from \"open-color\";\n\nconst shades = (i: number) => [\n  oc.red[i],\n  oc.pink[i],\n  oc.grape[i],\n  oc.violet[i],\n  oc.indigo[i],\n  oc.blue[i],\n  oc.cyan[i],\n  oc.teal[i],\n  oc.green[i],\n  oc.lime[i],\n  oc.yellow[i],\n  oc.orange[i],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","import colors from \"./colors\";\n\nexport const getClientColors = (clientId: string) => {\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nexport const getClientInitials = (username?: string | null) => {\n  if (!username) {\n    return \"?\";\n  }\n  const names = username.trim().split(\" \");\n\n  if (names.length < 2) {\n    return names[0].substring(0, 2).toUpperCase();\n  }\n\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n\n  return (firstName[0] + lastName[0]).toUpperCase();\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { SceneHistory } from \"../history\";\nimport { globalSceneState } from \"../scene\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"];\n  public activePointIndex: number | null;\n  public draggingElementPointIndex: number | null;\n  public lastUncommittedPoint: Point | null;\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>) {\n    LinearElementEditor.normalizePoints(element);\n\n    this.elementId = element.id;\n    this.activePointIndex = null;\n    this.lastUncommittedPoint = null;\n    this.draggingElementPointIndex = null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  static getElement(id: ExcalidrawElement[\"id\"]) {\n    const element = globalSceneState.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    lastX: number,\n    lastY: number,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    let { draggingElementPointIndex, elementId } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    const clickedPointIndex =\n      draggingElementPointIndex ??\n      LinearElementEditor.getPointIndexUnderCursor(\n        element,\n        appState.zoom,\n        scenePointerX,\n        scenePointerY,\n      );\n\n    draggingElementPointIndex = draggingElementPointIndex ?? clickedPointIndex;\n    if (draggingElementPointIndex > -1) {\n      if (\n        editingLinearElement.draggingElementPointIndex !==\n          draggingElementPointIndex ||\n        editingLinearElement.activePointIndex !== clickedPointIndex\n      ) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            draggingElementPointIndex,\n            activePointIndex: clickedPointIndex,\n          },\n        });\n      }\n\n      const [deltaX, deltaY] = rotate(\n        scenePointerX - lastX,\n        scenePointerY - lastY,\n        0,\n        0,\n        -element.angle,\n      );\n      const targetPoint = element.points[clickedPointIndex];\n      LinearElementEditor.movePoint(element, clickedPointIndex, [\n        targetPoint[0] + deltaX,\n        targetPoint[1] + deltaY,\n      ]);\n      return true;\n    }\n    return false;\n  }\n\n  static handlePointerUp(\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, draggingElementPointIndex } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    if (\n      draggingElementPointIndex !== null &&\n      (draggingElementPointIndex === 0 ||\n        draggingElementPointIndex === element.points.length - 1) &&\n      isPathALoop(element.points)\n    ) {\n      LinearElementEditor.movePoint(\n        element,\n        draggingElementPointIndex,\n        draggingElementPointIndex === 0\n          ? element.points[element.points.length - 1]\n          : element.points[0],\n      );\n    }\n    if (draggingElementPointIndex !== null) {\n      return {\n        ...editingLinearElement,\n        draggingElementPointIndex: null,\n      };\n    }\n    return editingLinearElement;\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: SceneHistory,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): {\n    didAddPoint: boolean;\n    hitElement: ExcalidrawElement | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (!appState.editingLinearElement.lastUncommittedPoint) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointerX,\n              scenePointerY,\n            ),\n          ],\n        });\n      }\n      history.resumeRecording();\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          activePointIndex: element.points.length - 1,\n          lastUncommittedPoint: null,\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    //  it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    }\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        activePointIndex: clickedPointIndex > -1 ? clickedPointIndex : null,\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.movePoint(element, points.length - 1, \"delete\");\n      }\n      return editingLinearElement;\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX,\n      scenePointerY,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoint(\n        element,\n        element.points.length - 1,\n        newPoint,\n      );\n    } else {\n      LinearElementEditor.movePoint(element, \"new\", newPoint);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    //  points on the left, thus should take precedence when clicking, if they\n    //  overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      scenePointerX,\n      scenePointerY,\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   *  expected in various parts of the codebase.\n   */\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    mutateElement(element, {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    });\n  }\n\n  static movePoint(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number | \"new\",\n    targetPosition: Point | \"delete\",\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    //  which would break the invariant of it being at [0,0], we move\n    //  all the other points in the opposite direction by delta to\n    //  offset it. We do the same with actual element.x/y position, so\n    //  this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let nextPoints: (readonly [number, number])[];\n    if (targetPosition === \"delete\") {\n      // remove point\n      if (pointIndex === \"new\") {\n        throw new Error(\"invalid args in movePoint\");\n      }\n      nextPoints = points.slice();\n      nextPoints.splice(pointIndex, 1);\n      if (pointIndex === 0) {\n        // if deleting first point, make the next to be [0,0] and recalculate\n        //  positions of the rest with respect to it\n        offsetX = nextPoints[0][0];\n        offsetY = nextPoints[0][1];\n        nextPoints = nextPoints.map((point, idx) => {\n          if (idx === 0) {\n            return [0, 0];\n          }\n          return [point[0] - offsetX, point[1] - offsetY];\n        });\n      }\n    } else if (pointIndex === \"new\") {\n      nextPoints = [...points, targetPosition];\n    } else {\n      const deltaX = targetPosition[0] - points[pointIndex][0];\n      const deltaY = targetPosition[1] - points[pointIndex][1];\n      nextPoints = points.map((point, idx) => {\n        if (idx === pointIndex) {\n          if (idx === 0) {\n            offsetX = deltaX;\n            offsetY = deltaY;\n            return point;\n          }\n          offsetX = 0;\n          offsetY = 0;\n\n          return [point[0] + deltaX, point[1] + deltaY] as const;\n        }\n        return offsetX || offsetY\n          ? ([point[0] - offsetX, point[1] - offsetY] as const)\n          : point;\n      });\n    }\n\n    const nextCoords = getElementPointsCoords(element, nextPoints);\n    const prevCoords = getElementPointsCoords(element, points);\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { FlooredNumber, AppState } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  handlerRectanglesFromCoords,\n  handlerRectangles,\n  getElementBounds,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport { getClientColors } from \"../clients\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\n\ntype HandlerRectanglesRet = keyof ReturnType<typeof handlerRectangles>;\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill?: boolean,\n) => {\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.rotate(-angle);\n  context.translate(-cx, -cy);\n};\n\nconst strokeCircle = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n) => {\n  context.beginPath();\n  context.arc(x + width / 2, y + height / 2, width / 2, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst strokeGrid = (\n  context: CanvasRenderingContext2D,\n  gridSize: number,\n  offsetX: number,\n  offsetY: number,\n  width: number,\n  height: number,\n) => {\n  const origStrokeStyle = context.strokeStyle;\n  context.strokeStyle = \"rgba(0,0,0,0.1)\";\n  context.beginPath();\n  for (let x = offsetX; x < offsetX + width + gridSize * 2; x += gridSize) {\n    context.moveTo(x, offsetY - gridSize);\n    context.lineTo(x, offsetY + height + gridSize * 2);\n  }\n  for (let y = offsetY; y < offsetY + height + gridSize * 2; y += gridSize) {\n    context.moveTo(offsetX - gridSize, y);\n    context.lineTo(offsetX + width + gridSize * 2, y);\n  }\n  context.stroke();\n  context.strokeStyle = origStrokeStyle;\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  sceneState: SceneState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  const origStrokeStyle = context.strokeStyle;\n  const lineWidth = context.lineWidth;\n  context.lineWidth = 1 / sceneState.zoom;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.activePointIndex === idx\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      strokeCircle(\n        context,\n        point[0] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        point[1] - POINT_HANDLE_SIZE / 2 / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n        POINT_HANDLE_SIZE / sceneState.zoom,\n      );\n    },\n  );\n  context.setLineDash([]);\n  context.lineWidth = lineWidth;\n  context.translate(-sceneState.scrollX, -sceneState.scrollY);\n  context.strokeStyle = origStrokeStyle;\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    //  doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n    renderGrid = true,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n    renderGrid?: boolean;\n  } = {},\n) => {\n  if (!canvas) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    const fillStyle = context.fillStyle;\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.fillStyle = fillStyle;\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = (-normalizedCanvasWidth * (sceneState.zoom - 1)) / 2;\n  const zoomTranslationY =\n    (-normalizedCanvasHeight * (sceneState.zoom - 1)) / 2;\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom, sceneState.zoom);\n\n  // Grid\n  if (renderGrid && appState.gridSize) {\n    strokeGrid(\n      context,\n      appState.gridSize,\n      -Math.ceil(zoomTranslationX / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollX % appState.gridSize),\n      -Math.ceil(zoomTranslationY / sceneState.zoom / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollY % appState.gridSize),\n      normalizedCanvasWidth / sceneState.zoom,\n      normalizedCanvasHeight / sceneState.zoom,\n    );\n  }\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(\n      element,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    ),\n  );\n\n  visibleElements.forEach((element) => {\n    renderElement(element, rc, context, renderOptimizations, sceneState);\n    if (\n      isLinearElement(element) &&\n      appState.editingLinearElement &&\n      appState.editingLinearElement.elementId === element.id\n    ) {\n      renderLinearPointHandles(context, appState, sceneState, element);\n    }\n  });\n\n  // Paint selection element\n  if (selectionElement) {\n    renderElement(\n      selectionElement,\n      rc,\n      context,\n      renderOptimizations,\n      sceneState,\n    );\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = getClientColors(socketId);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        const [\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n        ] = getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    function addSelectionForGroupId(groupId: GroupId) {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] = getCommonBounds(\n        groupElements,\n      );\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    }\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach(\n      ({\n        angle,\n        elementX1,\n        elementY1,\n        elementX2,\n        elementY2,\n        selectionColors,\n      }) => {\n        const elementWidth = elementX2 - elementX1;\n        const elementHeight = elementY2 - elementY1;\n\n        const initialLineDash = context.getLineDash();\n        const lineWidth = context.lineWidth;\n        const lineDashOffset = context.lineDashOffset;\n        const strokeStyle = context.strokeStyle;\n\n        const dashedLinePadding = 4 / sceneState.zoom;\n        const dashWidth = 8 / sceneState.zoom;\n        const spaceWidth = 4 / sceneState.zoom;\n\n        context.lineWidth = 1 / sceneState.zoom;\n\n        const count = selectionColors.length;\n        for (var i = 0; i < count; ++i) {\n          context.strokeStyle = selectionColors[i];\n          context.setLineDash([\n            dashWidth,\n            spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n          ]);\n          context.lineDashOffset = (dashWidth + spaceWidth) * i;\n          strokeRectWithRotation(\n            context,\n            elementX1 - dashedLinePadding,\n            elementY1 - dashedLinePadding,\n            elementWidth + dashedLinePadding * 2,\n            elementHeight + dashedLinePadding * 2,\n            elementX1 + elementWidth / 2,\n            elementY1 + elementHeight / 2,\n            angle,\n          );\n        }\n        context.lineDashOffset = lineDashOffset;\n        context.strokeStyle = strokeStyle;\n        context.lineWidth = lineWidth;\n        context.setLineDash(initialLineDash);\n      },\n    );\n    context.translate(-sceneState.scrollX, -sceneState.scrollY);\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize handlers\n    if (locallySelectedElements.length === 1) {\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const handlers = handlerRectangles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          if (key === \"rotation\") {\n            strokeCircle(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n            );\n          } else {\n            strokeRectWithRotation(\n              context,\n              handler[0],\n              handler[1],\n              handler[2],\n              handler[3],\n              handler[0] + handler[2] / 2,\n              handler[1] + handler[3] / 2,\n              locallySelectedElements[0].angle,\n              true, // fill before stroke\n            );\n          }\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    } else if (locallySelectedElements.length > 1) {\n      const dashedLinePadding = 4 / sceneState.zoom;\n      context.translate(sceneState.scrollX, sceneState.scrollY);\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / sceneState.zoom]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / sceneState.zoom;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const handlers = handlerRectanglesFromCoords(\n        [x1, y1, x2, y2],\n        0,\n        sceneState.zoom,\n        undefined,\n        OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n      );\n      Object.keys(handlers).forEach((key) => {\n        const handler = handlers[key as HandlerRectanglesRet];\n        if (handler !== undefined) {\n          const lineWidth = context.lineWidth;\n          context.lineWidth = 1 / sceneState.zoom;\n          strokeRectWithRotation(\n            context,\n            handler[0],\n            handler[1],\n            handler[2],\n            handler[3],\n            handler[0] + handler[2] / 2,\n            handler[1] + handler[3] / 2,\n            0,\n            true, // fill before stroke\n          );\n          context.lineWidth = lineWidth;\n        }\n      });\n      context.translate(-sceneState.scrollX, -sceneState.scrollY);\n    }\n  }\n\n  // Reset zoom\n  context.scale(1 / sceneState.zoom, 1 / sceneState.zoom);\n  context.translate(-zoomTranslationX, -zoomTranslationY);\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = getClientColors(clientId);\n\n    const strokeStyle = context.strokeStyle;\n    const fillStyle = context.fillStyle;\n    const globalAlpha = context.globalAlpha;\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n    if (isOutOfBounds) {\n      context.globalAlpha = 0.2;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    if (!isOutOfBounds && username) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(username);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.globalAlpha = globalAlpha;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n      context.fillText(\n        username,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.strokeStyle = strokeStyle;\n    context.fillStyle = fillStyle;\n    context.globalAlpha = globalAlpha;\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    const fillStyle = context.fillStyle;\n    const strokeStyle = context.strokeStyle;\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.fillStyle = fillStyle;\n    context.strokeStyle = strokeStyle;\n  }\n\n  context.scale(1 / scale, 1 / scale);\n\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n    zoom: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom;\n  const viewportHeightWithZoom = viewportHeight / zoom;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  return (\n    x2 + scrollX - viewportWidthDiff / 2 >= 0 &&\n    x1 + scrollX - viewportWidthDiff / 2 <= viewportWidthWithZoom &&\n    y2 + scrollY - viewportHeightDiff / 2 >= 0 &&\n    y1 + scrollY - viewportHeightDiff / 2 <= viewportHeightWithZoom\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      renderElementToSvg(\n        element,\n        rsvg,\n        svgRoot,\n        element.x + offsetX,\n        element.y + offsetY,\n      );\n    }\n  });\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import rough from \"roughjs/bin/rough\";\nimport oc from \"open-color\";\nimport { newTextElement } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS } from \"../utils\";\nimport { normalizeScroll } from \"./scroll\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { DEFAULT_FONT_FAMILY, DEFAULT_VERTICAL_ALIGN } from \"../constants\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    scale?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n  createCanvas: (width: number, height: number) => any = (width, height) => {\n    const tempCanvas = document.createElement(\"canvas\");\n    tempCanvas.width = width * scale;\n    tempCanvas.height = height * scale;\n    return tempCanvas;\n  },\n) => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate smallest area to fit the contents in\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  const tempCanvas: any = createCanvas(width, height);\n\n  renderScene(\n    sceneElements,\n    appState,\n    null,\n    scale,\n    rough.canvas(tempCanvas),\n    tempCanvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      scrollX: normalizeScroll(-minX + exportPadding),\n      scrollY: normalizeScroll(-minY + exportPadding),\n      zoom: 1,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n      renderGrid: false,\n    },\n  );\n\n  return tempCanvas;\n};\n\nexport const exportToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    shouldAddWatermark: boolean;\n  },\n): SVGSVGElement => {\n  let sceneElements = elements;\n  if (shouldAddWatermark) {\n    const [, , maxX, maxY] = getCommonBounds(elements);\n    sceneElements = [...sceneElements, getWatermarkElement(maxX, maxY)];\n  }\n\n  // calculate canvas dimensions\n  const [minX, minY, maxX, maxY] = getCommonBounds(sceneElements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height =\n    distance(minY, maxY) +\n    exportPadding +\n    (shouldAddWatermark ? 0 : exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/FG_Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render backgroiund rect\n  if (exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(sceneElements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n};\n\nconst getWatermarkElement = (maxX: number, maxY: number) => {\n  return newTextElement({\n    text: t(\"labels.madeWithExcalidraw\"),\n    fontSize: 16,\n    fontFamily: DEFAULT_FONT_FAMILY,\n    textAlign: \"right\",\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    x: maxX,\n    y: maxY + 16,\n    strokeColor: oc.gray[5],\n    backgroundColor: \"transparent\",\n    fillStyle: \"hachure\",\n    strokeWidth: 1,\n    strokeStyle: \"solid\",\n    roughness: 1,\n    opacity: 100,\n  });\n};\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElement, newTextElement } from \"./element\";\nimport { AppState } from \"./types\";\nimport { t } from \"./i18n\";\nimport { DEFAULT_VERTICAL_ALIGN } from \"./constants\";\n\ninterface Spreadsheet {\n  yAxisLabel: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\ntype ParseSpreadsheetResult =\n  | {\n      type: \"not a spreadsheet\";\n    }\n  | { type: \"spreadsheet\"; spreadsheet: Spreadsheet }\n  | {\n      type: \"malformed spreadsheet\";\n      error: string;\n    };\n\nfunction tryParseNumber(s: string): number | null {\n  const match = /^[$€£¥₩]?([0-9]+(\\.[0-9]+)?)$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(match[1]);\n}\n\nfunction isNumericColumn(lines: string[][], columnIndex: number) {\n  return lines\n    .slice(1)\n    .every((line) => tryParseNumber(line[columnIndex]) !== null);\n}\n\nfunction tryParseCells(cells: string[][]): ParseSpreadsheetResult {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: \"malformed spreadsheet\", error: t(\"charts.tooManyColumns\") };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: \"not a spreadsheet\" };\n    }\n\n    return {\n      type: \"spreadsheet\",\n      spreadsheet: {\n        yAxisLabel: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const valueColumnIndex = isNumericColumn(cells, 0) ? 0 : 1;\n\n  if (!isNumericColumn(cells, valueColumnIndex)) {\n    return {\n      type: \"malformed spreadsheet\",\n      error: t(\"charts.noNumericColumn\"),\n    };\n  }\n\n  const labelColumnIndex = (valueColumnIndex + 1) % 2;\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  return {\n    type: \"spreadsheet\",\n    spreadsheet: {\n      yAxisLabel: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n}\n\nfunction transposeCells(cells: string[][]) {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n\n  return nextCells;\n}\n\nexport function tryParseSpreadsheet(text: string): ParseSpreadsheetResult {\n  // copy/paste from excel, in-browser excel, and google sheets is tsv\n  // for now we only accept 2 columns with an optional header\n  const lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  if (lines.length === 0) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isASpreadsheet = lines.every(\n    (line) => line.length === numColsFirstLine,\n  );\n\n  if (!isASpreadsheet) {\n    return { type: \"not a spreadsheet\" };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== \"spreadsheet\") {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === \"spreadsheet\") {\n      return transposedResults;\n    }\n  }\n\n  return result;\n}\n\nconst BAR_WIDTH = 32;\nconst BAR_SPACING = 12;\nconst BAR_HEIGHT = 192;\nconst LABEL_SPACING = 3 * BAR_SPACING;\nconst Y_AXIS_LABEL_SPACING = LABEL_SPACING;\nconst ANGLE = 5.87;\n\nexport function renderSpreadsheet(\n  appState: AppState,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ExcalidrawElement[] {\n  const max = Math.max(...spreadsheet.values);\n  const min = Math.min(0, ...spreadsheet.values);\n  const range = max - min;\n\n  const minYLabel = newTextElement({\n    x: x,\n    y: y + BAR_HEIGHT,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: min.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n  });\n\n  const maxYLabel = newTextElement({\n    x: x,\n    y: y,\n    strokeColor: appState.currentItemStrokeColor,\n    backgroundColor: appState.currentItemBackgroundColor,\n    fillStyle: appState.currentItemFillStyle,\n    strokeWidth: appState.currentItemStrokeWidth,\n    strokeStyle: appState.currentItemStrokeStyle,\n    roughness: appState.currentItemRoughness,\n    opacity: appState.currentItemOpacity,\n    text: max.toLocaleString(),\n    fontSize: 16,\n    fontFamily: appState.currentItemFontFamily,\n    textAlign: appState.currentItemTextAlign,\n    verticalAlign: DEFAULT_VERTICAL_ALIGN,\n  });\n\n  const bars = spreadsheet.values.map((value, i) => {\n    const valueBarHeight = value - min;\n    const percentBarHeight = valueBarHeight / range;\n    const barHeight = percentBarHeight * BAR_HEIGHT;\n    const barX = i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING;\n    const barY = BAR_HEIGHT - barHeight;\n    return newElement({\n      type: \"rectangle\",\n      x: barX + x,\n      y: barY + y,\n      width: BAR_WIDTH,\n      height: barHeight,\n      strokeColor: appState.currentItemStrokeColor,\n      backgroundColor: appState.currentItemBackgroundColor,\n      fillStyle: appState.currentItemFillStyle,\n      strokeWidth: appState.currentItemStrokeWidth,\n      strokeStyle: appState.currentItemStrokeStyle,\n      roughness: appState.currentItemRoughness,\n      opacity: appState.currentItemOpacity,\n    });\n  });\n\n  const xLabels =\n    spreadsheet.labels?.map((label, i) => {\n      const labelX =\n        i * (BAR_WIDTH + BAR_SPACING) + LABEL_SPACING + BAR_SPACING;\n      const labelY = BAR_HEIGHT + BAR_SPACING;\n      return newTextElement({\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + labelX,\n        y: y + labelY,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 16,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        verticalAlign: DEFAULT_VERTICAL_ALIGN,\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      });\n    }) || [];\n\n  const yAxisLabel = spreadsheet.yAxisLabel\n    ? newTextElement({\n        text: spreadsheet.yAxisLabel,\n        x: x - Y_AXIS_LABEL_SPACING,\n        y: y + BAR_HEIGHT / 2 - 10,\n        strokeColor: appState.currentItemStrokeColor,\n        backgroundColor: appState.currentItemBackgroundColor,\n        fillStyle: appState.currentItemFillStyle,\n        strokeWidth: appState.currentItemStrokeWidth,\n        strokeStyle: appState.currentItemStrokeStyle,\n        roughness: appState.currentItemRoughness,\n        opacity: appState.currentItemOpacity,\n        fontSize: 20,\n        fontFamily: appState.currentItemFontFamily,\n        textAlign: \"center\",\n        verticalAlign: DEFAULT_VERTICAL_ALIGN,\n        width: BAR_WIDTH,\n        angle: ANGLE,\n      })\n    : null;\n\n  return [...bars, yAxisLabel, minYLabel, maxYLabel, ...xLabels].filter(\n    (element) => element !== null,\n  ) as ExcalidrawElement[];\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, renderSpreadsheet } from \"./charts\";\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nexport const copyToAppClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  CLIPBOARD = JSON.stringify(getSelectedElements(elements, appState));\n  try {\n    // when copying to in-app clipboard, clear system clipboard so that if\n    //  system clip contains text on paste we know it was copied *after* user\n    //  copied elements, and thus we should prefer the text content.\n    await copyTextToSystemClipboard(null);\n    PREFER_APP_CLIPBOARD = false;\n  } catch {\n    // if clearing system clipboard didn't work, we should prefer in-app\n    //  clipboard even if there's text in system clipboard on paste, because\n    //  we can't be sure of the order of copy operations\n    PREFER_APP_CLIPBOARD = true;\n  }\n};\n\nexport const getAppClipboard = (): {\n  elements?: readonly ExcalidrawElement[];\n} => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    const clipboardElements = JSON.parse(CLIPBOARD);\n\n    if (\n      Array.isArray(clipboardElements) &&\n      clipboardElements.length > 0 &&\n      clipboardElements[0].type // need to implement a better check here...\n    ) {\n      return { elements: clipboardElements };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {};\n};\n\nexport const getClipboardContent = async (\n  appState: AppState,\n  cursorX: number,\n  cursorY: number,\n  event: ClipboardEvent | null,\n): Promise<{\n  text?: string;\n  elements?: readonly ExcalidrawElement[];\n  error?: string;\n}> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    if (text && !PREFER_APP_CLIPBOARD && !text.includes(SVG_EXPORT_TAG)) {\n      const result = tryParseSpreadsheet(text);\n      if (result.type === \"spreadsheet\") {\n        return {\n          elements: renderSpreadsheet(\n            appState,\n            result.spreadsheet,\n            cursorX,\n            cursorY,\n          ),\n        };\n      } else if (result.type === \"malformed spreadsheet\") {\n        return { error: result.error };\n      }\n      return { text };\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return getAppClipboard();\n};\n\nexport const copyCanvasToClipboardAsPng = async (canvas: HTMLCanvasElement) =>\n  new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob(async (blob: any) => {\n        try {\n          await navigator.clipboard.write([\n            new window.ClipboardItem({ \"image/png\": blob }),\n          ]);\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n\nexport const copyCanvasToClipboardAsSvg = async (svgroot: SVGSVGElement) => {\n  try {\n    await navigator.clipboard.writeText(svgroot.outerHTML);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      //  not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  //  clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import {\n  ExcalidrawElement,\n  FontFamily,\n  ExcalidrawSelectionElement,\n} from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { DataState } from \"./types\";\nimport { isInvisiblySmallElement, getNormalizedDimensions } from \"../element\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { randomId } from \"../random\";\nimport {\n  FONT_FAMILY,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n  DEFAULT_VERTICAL_ALIGN,\n} from \"../constants\";\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamily => {\n  for (const [id, fontFamilyString] of Object.entries(FONT_FAMILY)) {\n    if (fontFamilyString.includes(fontFamilyName)) {\n      return parseInt(id) as FontFamily;\n    }\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nfunction migrateElementWithProperties<T extends ExcalidrawElement>(\n  element: T,\n  extra: Omit<T, keyof ExcalidrawElement>,\n): T {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: element.type,\n    // all elements must have version > 0 so getDrawingVersion() will pick up\n    //  newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: element.x || 0,\n    y: element.y || 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds || [],\n  };\n\n  return {\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as T;\n}\n\nconst migrateElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [\n          string,\n          string,\n        ] = (element as any).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return migrateElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign || DEFAULT_TEXT_ALIGN,\n        verticalAlign: element.verticalAlign || DEFAULT_VERTICAL_ALIGN,\n      });\n    case \"draw\":\n    case \"line\":\n    case \"arrow\": {\n      return migrateElementWithProperties(element, {\n        points:\n          // migrate old arrow model to new one\n          !Array.isArray(element.points) || element.points.length < 2\n            ? [\n                [0, 0],\n                [element.width, element.height],\n              ]\n            : element.points,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n    case \"rectangle\":\n    case \"diamond\":\n      return migrateElementWithProperties(element, {});\n\n    // don't use default case so as to catch a missing an element type case\n    //  (we also don't want to throw, but instead return void so we\n    //   filter out these unsupported elements from the restored array)\n  }\n};\n\nexport const restore = (\n  savedElements: readonly ExcalidrawElement[],\n  savedState: AppState | null,\n  opts?: { scrollToContent: boolean },\n): DataState => {\n  const elements = savedElements.reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    //  and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      const migratedElement = migrateElement(element);\n      console.log(migratedElement)\n      if (migratedElement) {\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n\n  if (opts?.scrollToContent && savedState) {\n    savedState = {\n      ...savedState,\n      ...calculateScrollCenter(elements, savedState, null),\n    };\n  }\n\n  return {\n    elements: elements,\n    appState: savedState,\n  };\n};\n","import { getDefaultAppState } from \"../appState\";\nimport { restore } from \"./restore\";\nimport { t } from \"../i18n\";\n\nexport const loadFromBlob = async (blob: any) => {\n  const updateAppState = (contents: string) => {\n    const defaultAppState = getDefaultAppState();\n    let elements = [];\n    let appState = defaultAppState;\n    try {\n      const data = JSON.parse(contents);\n      if (data.type !== \"excalidraw\") {\n        throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n      }\n      elements = data.elements || [];\n      appState = { ...defaultAppState, ...data.appState };\n    } catch {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    return { elements, appState };\n  };\n\n  if (blob.handle) {\n    (window as any).handle = blob.handle;\n  }\n  let contents;\n  if (\"text\" in Blob) {\n    contents = await blob.text();\n  } else {\n    contents = await new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsText(blob, \"utf8\");\n      reader.onloadend = () => {\n        if (reader.readyState === FileReader.DONE) {\n          resolve(reader.result as string);\n        }\n      };\n    });\n  }\n\n  const { elements, appState } = updateAppState(contents);\n  return restore(elements, appState, { scrollToContent: true });\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { cleanAppStateForExport } from \"../appState\";\n\nimport { fileOpen, fileSave } from \"browser-nativefs\";\nimport { loadFromBlob } from \"./blob\";\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): string =>\n  JSON.stringify(\n    {\n      type: \"excalidraw\",\n      version: 2,\n      source: window.location.origin,\n      elements: elements.filter((element) => !element.isDeleted),\n      appState: cleanAppStateForExport(appState),\n    },\n    null,\n    2,\n  );\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  fileHandle: any,\n) => {\n  const serialized = serializeAsJSON(elements, appState);\n  const blob = new Blob([serialized], {\n    type: \"application/json\",\n  });\n  const name = `${appState.name}.excalidraw`;\n  (window as any).handle = await fileSave(\n    blob,\n    {\n      fileName: name,\n      description: \"Excalidraw file\",\n      extensions: [\"excalidraw\"],\n    },\n    fileHandle || null,\n  );\n};\n\nexport const loadFromJSON = async () => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    extensions: [\"json\", \"excalidraw\"],\n    mimeTypes: [\"application/json\"],\n  });\n  return loadFromBlob(blob);\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState, LibraryItems } from \"../types\";\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { restore } from \"./restore\";\n\nconst LOCAL_STORAGE_KEY = \"excalidraw\";\nconst LOCAL_STORAGE_KEY_STATE = \"excalidraw-state\";\nconst LOCAL_STORAGE_KEY_COLLAB = \"excalidraw-collab\";\nconst LOCAL_STORAGE_KEY_LIBRARY = \"excalidraw-library\";\n\nlet _LATEST_LIBRARY_ITEMS: LibraryItems | null = null;\nexport const loadLibrary = (): Promise<LibraryItems> => {\n  return new Promise(async (resolve) => {\n    if (_LATEST_LIBRARY_ITEMS) {\n      return resolve(JSON.parse(JSON.stringify(_LATEST_LIBRARY_ITEMS)));\n    }\n\n    try {\n      const data = localStorage.getItem(LOCAL_STORAGE_KEY_LIBRARY);\n      if (!data) {\n        return resolve([]);\n      }\n\n      const items = (JSON.parse(data) as ExcalidrawElement[][]).map(\n        (elements) => restore(elements, null).elements,\n      ) as Mutable<LibraryItems>;\n\n      // clone to ensure we don't mutate the cached library elements in the app\n      _LATEST_LIBRARY_ITEMS = JSON.parse(JSON.stringify(items));\n\n      resolve(items);\n    } catch (e) {\n      console.error(e);\n      resolve([]);\n    }\n  });\n};\n\nexport const saveLibrary = (items: LibraryItems) => {\n  const prevLibraryItems = _LATEST_LIBRARY_ITEMS;\n  try {\n    const serializedItems = JSON.stringify(items);\n    // cache optimistically so that consumers have access to the latest\n    //  immediately\n    _LATEST_LIBRARY_ITEMS = JSON.parse(serializedItems);\n    localStorage.setItem(LOCAL_STORAGE_KEY_LIBRARY, serializedItems);\n  } catch (e) {\n    _LATEST_LIBRARY_ITEMS = prevLibraryItems;\n    console.error(e);\n  }\n};\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(LOCAL_STORAGE_KEY_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY,\n      JSON.stringify(elements.filter((element) => !element.isDeleted)),\n    );\n    localStorage.setItem(\n      LOCAL_STORAGE_KEY_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const restoreFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(LOCAL_STORAGE_KEY);\n    savedState = localStorage.getItem(LOCAL_STORAGE_KEY_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements = [];\n  if (savedElements) {\n    try {\n      elements = JSON.parse(savedElements);\n    } catch {\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = JSON.parse(savedState) as AppState;\n      // If we're retrieving from local storage, we should not be collaborating\n      appState.isCollaborating = false;\n      appState.collaborators = new Map();\n      delete appState.width;\n      delete appState.height;\n    } catch {\n      // Do nothing because appState is already null\n    }\n  }\n  return restore(elements, appState);\n};\n","import { AppState, LibraryItems } from \"../types\";\nimport { restore } from \"./restore\";\nimport { getDefaultAppState } from \"../appState\";\nimport Window from \"../components/App\"\nconst axios = require('axios');\n\n/*\n\n      __      __  __  __         ______ _          _     _______                              _       _                    _   _               _       _                 _ \n     / /     / / |  \\/  |       |  ____(_)        | |   |__   __|                            (_)     | |                  | | | |             | |     | |               | |\n    / /     / /  | \\  / |_   _  | |__   _ _ __ ___| |_     | |_   _ _ __   ___  ___  ___ _ __ _ _ __ | |_   _ __ ___   ___| |_| |__   ___   __| |  ___| |_ ___  _ __ ___| |\n   / /     / /   | |\\/| | | | | |  __| | | '__/ __| __|    | | | | | '_ \\ / _ \\/ __|/ __| '__| | '_ \\| __| | '_ ` _ \\ / _ \\ __| '_ \\ / _ \\ / _` | / __| __/ _ \\| '__/ _ \\ |\n  / /     / /    | |  | | |_| | | |    | | |  \\__ \\ |_     | | |_| | |_) |  __/\\__ \\ (__| |  | | |_) | |_  | | | | | |  __/ |_| | | | (_) | (_| | \\__ \\ || (_) | | |  __/_|\n /_/     /_/     |_|  |_|\\__, | |_|    |_|_|  |___/\\__|    |_|\\__, | .__/ \\___||___/\\___|_|  |_| .__/ \\__| |_| |_| |_|\\___|\\__|_| |_|\\___/ \\__,_| |___/\\__\\___/|_|  \\___(_)\n                          __/ |                                __/ | |                         | |                                                                         \n                         |___/                                |___/|_|                         |_|                                                                         \n\n*/\n\n\n\nexport const restoreFromUrl = async (url:String):Promise<any> => {\n\n    let savedElements = null;\n    let savedState = null;\n\n    // Future me's problem .. this should probably live in a try catch block.\n    let response\n    try {\n    response = await axios.get(url)\n        savedElements = response.data.elements\n        savedState = response.data.state\n    } catch {\n        console.log(\"Restore from URL failed.\")\n    }\n    \n      let elements = [];\n      if (savedElements) {\n        try {\n          elements = JSON.parse(savedElements);\n        } catch {\n          console.log(\"could not parse elements\")\n        }\n      }\n    \n      let appState = null;\n      let defaultAppState = getDefaultAppState();\n\n      if (savedState) {\n        try {\n          appState = JSON.parse(savedState) as AppState;\n          // If we're retrieving from local storage, we should not be collaborating\n          appState.isCollaborating = false;\n          appState.collaborators = new Map();\n          delete appState.width;\n          delete appState.height;\n\n          appState = {...appState,...defaultAppState}\n        } catch {\n          console.log(\"could not parse state\")\n        }\n      }\n      console.log(elements)\n      console.log(appState)\n\n      window.lastHttpStatus = response.status+\"\"\n      let leadingDigit = window.lastHttpStatus.substr(0,1);\n      if(leadingDigit === \"2\"){\n        window.lastSuccessfulPut = new Date();\n      }\n    \n      return restore(elements, appState);\n    \n  };\n  \n\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getDefaultAppState } from \"../appState\";\n\nimport { AppState } from \"../types\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { fileSave } from \"browser-nativefs\";\n\nimport { t } from \"../i18n\";\nimport {\n  copyCanvasToClipboardAsPng,\n  copyCanvasToClipboardAsSvg,\n} from \"../clipboard\";\nimport { serializeAsJSON } from \"./json\";\n\nimport { ExportType } from \"../scene/types\";\nimport { restore } from \"./restore\";\nimport { restoreFromLocalStorage } from \"./localStorage\";\nimport { restoreFromUrl } from \"./urlStorage\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { saveAsJSON, loadFromJSON } from \"./json\";\nexport { saveToLocalStorage  } from \"./localStorage\";\n\nconst BACKEND_GET = process.env.REACT_APP_BACKEND_V1_GET_URL;\n\nconst BACKEND_V2_POST = process.env.REACT_APP_BACKEND_V2_POST_URL;\nconst BACKEND_V2_GET = process.env.REACT_APP_BACKEND_V2_GET_URL;\n\nexport const SOCKET_SERVER = process.env.REACT_APP_SOCKET_SERVER_URL;\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketID: string;\n      pointerCoords: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\n// TODO: Defined globally, since file handles aren't yet serializable.\n// Once `FileSystemFileHandle` can be serialized, make this\n// part of `AppState`.\n(window as any).handle = null;\n\nconst byteToHex = (byte: number): string => `0${byte.toString(16)}`.slice(-2);\n\nconst generateRandomID = async () => {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n};\n\nconst generateEncryptionKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n};\n\nconst createIV = () => {\n  const arr = new Uint8Array(12);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  if (link.length === 0) {\n    return;\n  }\n  const hash = new URL(link).hash;\n  return hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n};\n\nexport const generateCollaborationLink = async () => {\n  const id = await generateRandomID();\n  const key = await generateEncryptionKey();\n  return `${window.location.origin}${window.location.pathname}#room=${id},${key}`;\n};\n\nconst getImportedKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const encryptAESGEM = async (\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n};\n\nexport const decryptAESGEM = async (\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> => {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv: iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  // The iv is set to 0. We are never going to reuse the same key so we don't\n  // need to have an iv. (I hope that's correct...)\n  const iv = new Uint8Array(12);\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv: iv,\n    },\n    key,\n    encoded,\n  );\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: encrypted,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n\nexport const importFromBackend = async (\n  id: string | null,\n  privateKey: string | undefined,\n) => {\n  let elements: readonly ExcalidrawElement[] = [];\n  let appState: AppState = getDefaultAppState();\n\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return restore(elements, appState, { scrollToContent: true });\n    }\n    let data;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n      const key = await getImportedKey(privateKey, \"decrypt\");\n      const iv = new Uint8Array(12);\n      const decrypted = await window.crypto.subtle.decrypt(\n        {\n          name: \"AES-GCM\",\n          iv: iv,\n        },\n        key,\n        buffer,\n      );\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    elements = data.elements || elements;\n    appState = { ...appState, ...data.appState };\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n  } finally {\n    return restore(elements, appState, { scrollToContent: true });\n  }\n};\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement,\n  {\n    exportBackground,\n    exportPadding = 10,\n    viewBackgroundColor,\n    name,\n    scale = 1,\n    shouldAddWatermark,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    scale?: number;\n    shouldAddWatermark: boolean;\n  },\n) => {\n  if (elements.length === 0) {\n    return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = exportToSvg(elements, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      shouldAddWatermark,\n    });\n    if (type === \"svg\") {\n      await fileSave(new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }), {\n        fileName: `${name}.svg`,\n      });\n      return;\n    } else if (type === \"clipboard-svg\") {\n      copyCanvasToClipboardAsSvg(tempSvg);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n    scale,\n    shouldAddWatermark,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    tempCanvas.toBlob(async (blob: any) => {\n      if (blob) {\n        await fileSave(blob, {\n          fileName: fileName,\n        });\n      }\n    });\n  } else if (type === \"clipboard\") {\n    try {\n      copyCanvasToClipboardAsPng(tempCanvas);\n    } catch {\n      window.alert(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  } else if (type === \"backend\") {\n    exportToBackend(elements, {\n      ...appState,\n      viewBackgroundColor: exportBackground\n        ? appState.viewBackgroundColor\n        : getDefaultAppState().viewBackgroundColor,\n    });\n  }\n\n  // clean up the DOM\n  if (tempCanvas !== canvas) {\n    tempCanvas.remove();\n  }\n};\n\nexport const loadScene = async (id: string | null, privateKey?: string) => {\n  let data;\n\n  if (id && (id.indexOf(':')!== -1)){\n    data = await restoreFromUrl(\"\"+id)\n  } else if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = await importFromBackend(id, privateKey);\n  } else {\n    data = restoreFromLocalStorage();\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState && { ...data.appState },\n    commitToHistory: false,\n  };\n};\n","import { encryptAESGEM } from \"../data\";\n\nimport { SocketUpdateData } from \"../types\";\nimport { BROADCAST, SCENE } from \"../constants\";\nimport App from \"./App\";\n\nclass Portal {\n  app: App;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomID: string | null = null;\n  roomKey: string | null = null;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomID = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners (moving from App)\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomID);\n\n        this.app.restoreUserName();\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketID: string) => {\n      this.app.broadcastScene(SCENE.INIT, /* syncAll */ true);\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.app.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomID = null;\n    this.roomKey = null;\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomID &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomID,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n}\nexport default Portal;\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: \"s\",\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: \"r\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: \"d\",\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: \"e\",\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: \"a\",\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke={oc.black}\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: \"l\",\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"draw\",\n    key: \"x\",\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: \"t\",\n  },\n] as const;\n\nexport const shapesShortcutKeys = SHAPES.map((shape, index) => [\n  shape.key,\n  (index + 1).toString(),\n]).flat(1);\n\nexport const findShapeByKey = (key: string) =>\n  SHAPES.find((shape, index) => {\n    return shape.key === key.toLowerCase() || key === (index + 1).toString();\n  })?.value || \"selection\";\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nexport class SceneHistory {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport const createHistory: () => { history: SceneHistory } = () => {\n  const history = new SceneHistory();\n  return { history };\n};\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.css\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top: top, left: left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\n\nimport \"./ContextMenu.scss\";\n\ntype ContextMenuOption = {\n  label: string;\n  action(): void;\n};\n\ntype Props = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n};\n\nconst ContextMenu = ({ options, onCloseRequest, top, left }: Props) => (\n  <Popover\n    onCloseRequest={onCloseRequest}\n    top={top}\n    left={left}\n    fitInViewport={true}\n  >\n    <ul\n      className=\"context-menu\"\n      onContextMenu={(event) => event.preventDefault()}\n    >\n      {options.map((option, idx) => (\n        <li key={idx} onClick={onCloseRequest}>\n          <ContextMenuOption {...option} />\n        </li>\n      ))}\n    </ul>\n  </Popover>\n);\n\nconst ContextMenuOption = ({ label, action }: ContextMenuOption) => (\n  <button className=\"context-menu-option\" onClick={action}>\n    {label}\n  </button>\n);\n\nlet contextMenuNode: HTMLDivElement;\nconst getContextMenuNode = (): HTMLDivElement => {\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  return (contextMenuNode = div);\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: number;\n  left: number;\n};\n\nconst handleClose = () => {\n  unmountComponentAtNode(getContextMenuNode());\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={handleClose}\n        />,\n        getContextMenuNode(),\n      );\n    }\n  },\n};\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionFilterFn,\n  ActionName,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { t } from \"../i18n\";\nimport { globalSceneState } from \"../scene\";\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: UpdaterFn;\n\n  getAppState: () => AppState;\n\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => ReturnType<\n      typeof globalSceneState[\"getElementsIncludingDeleted\"]\n    >,\n  ) {\n    this.updater = updater;\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n      ),\n    );\n  }\n\n  getContextMenuItems(actionFilter: ActionFilterFn = (action) => action) {\n    return Object.values(this.actions)\n      .filter(actionFilter)\n      .filter((action) => \"contextItemLabel\" in action)\n      .filter((action) =>\n        action.contextItemPredicate\n          ? action.contextItemPredicate(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n            )\n          : true,\n      )\n      .sort(\n        (a, b) =>\n          (a.contextMenuOrder !== undefined ? a.contextMenuOrder : 999) -\n          (b.contextMenuOrder !== undefined ? b.contextMenuOrder : 999),\n      )\n      .map((action) => ({\n        label: action.contextItemLabel ? t(action.contextItemLabel) : \"\",\n        action: () => {\n          this.updater(\n            action.perform(\n              this.getElementsIncludingDeleted(),\n              this.getAppState(),\n              null,\n            ),\n          );\n        },\n      }));\n  }\n\n  // Id is an attribute that we can use to pass in data like keys.\n  // This is needed for dynamically generated action components\n  // like the user list. We can use this key to extract more\n  // data from app state. This is an alternative to generic prop hell!\n  renderAction = (name: ActionName, id?: string) => {\n    if (this.actions[name] && \"PanelComponent\" in this.actions[name]) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          id={id}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype ToolIconSize = \"s\" | \"m\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolIconSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n\n      checked: boolean;\n      onChange?(): void;\n    });\n\nconst DEFAULT_SIZE: ToolIconSize = \"m\";\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  if (props.type === \"button\") {\n    return (\n      <button\n        className={`ToolIcon_type_button ${\n          !props.hidden ? \"ToolIcon\" : \"\"\n        } ${sizeCn}${props.selected ? \" ToolIcon--selected\" : \"\"} ${\n          props.className\n        } ${\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\"\n        }`}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n          {props.icon || props.label}\n          {props.keyBindingLabel && (\n            <span className=\"ToolIcon__keybinding\">\n              {props.keyBindingLabel}\n            </span>\n          )}\n        </div>\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className=\"ToolIcon\" title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\n\nconst ACTIVE_ELEMENT_COLOR = oc.orange[4];\ntype Opts = { width?: number; height?: number; mirror?: true } & React.SVGProps<\n  SVGSVGElement\n>;\n\nconst createIcon = (d: string | React.ReactNode, opts: number | Opts = 512) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={mirror && \"rtl-mirror\"}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const saveAs = createIcon(\n  \"M252 54L203 8a28 27 0 00-20-8H28C12 0 0 12 0 27v195c0 15 12 26 28 26h204c15 0 28-11 28-26V73a28 27 0 00-8-19zM130 213c-21 0-37-16-37-36 0-19 16-35 37-35 20 0 37 16 37 35 0 20-17 36-37 36zm56-169v56c0 4-4 6-7 6H44c-4 0-7-2-7-6V42c0-4 3-7 7-7h133l4 2 3 2a7 7 0 012 5z M296 201l87 95-188 205-78 9c-10 1-19-8-18-20l9-84zm141-14l-41-44a31 31 0 00-46 0l-38 41 87 95 38-42c13-14 13-36 0-50z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n  { mirror: true },\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const bringForward = createIcon(\n  <>\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendBackward = createIcon(\n  <>\n    <path\n      d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const bringToFront = createIcon(\n  <>\n    <path\n      d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n      stroke={oc.black}\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const sendToBack = createIcon(\n  <>\n    <path\n      d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n      fill={ACTIVE_ELEMENT_COLOR}\n      stroke={ACTIVE_ELEMENT_COLOR}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n    <path\n      d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n      stroke={oc.black}\n      strokeLinejoin=\"round\"\n      strokeWidth=\"2\"\n    />\n  </>,\n  { width: 24 },\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = (action: Action): Action => {\n  actions = actions.concat(action);\n  return action;\n};\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nfunction handleGroupEditingState(\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n}\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const { elementId, activePointIndex } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (!element) {\n        return false;\n      }\n      if (\n        // case: no point selected → delete whole element\n        activePointIndex == null ||\n        activePointIndex === -1 ||\n        // case: deleting last point\n        element.points.length < 2\n      ) {\n        const nextElements = elements.filter((el) => el.id !== element.id);\n        const nextAppState = handleGroupEditingState(appState, nextElements);\n\n        return {\n          elements: nextElements,\n          appState: {\n            ...nextAppState,\n            editingLinearElement: null,\n          },\n          commitToHistory: false,\n        };\n      }\n\n      LinearElementEditor.movePoint(element, activePointIndex, \"delete\");\n\n      return {\n        elements: elements,\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            activePointIndex: activePointIndex > 0 ? activePointIndex - 1 : 0,\n          },\n        },\n        commitToHistory: true,\n      };\n    }\n\n    let {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  contextMenuOrder: 3,\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","const swap = <T>(elements: T[], indexA: number, indexB: number) => {\n  const element = elements[indexA];\n  elements[indexA] = elements[indexB];\n  elements[indexB] = element;\n};\n\nexport const moveOneLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n  let isSorted = true;\n  // We go from left to right to avoid overriding the wrong elements\n  indicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === i;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index - 1, index);\n  });\n\n  return elements;\n};\n\nexport const moveOneRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n  let isSorted = true;\n\n  // We go from right to left to avoid overriding the wrong elements\n  reversedIndicesToMove.forEach((index, i) => {\n    // We don't want to bubble the first elements that are sorted as they are\n    // already in their correct position\n    isSorted = isSorted && index === elements.length - i - 1;\n    if (isSorted) {\n      return;\n    }\n    swap(elements, index + 1, index);\n  });\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [c, f, a, b, d, e, g]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the right.\n//\n//        |1       |0\n// [a, b, _, d, e, _, g]\n//          -> ->\n//\n// which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//\n// Now, we need to move all the elements from marker 1 to the beginning by two (not one)\n// slots to the right, which gives us\n//\n//        |1       |0\n// [a, b, _, _, d, e, g]\n//  ---|--^  ^\n//     ------|\n//\n// which gives us\n//\n//        |1       |0\n// [_, _, a, b, d, e, g]\n//\n// At this point, we can fill back the leftmost elements with the array we saved at\n// the beginning\n//\n//        |1       |0\n// [c, f, a, b, d, e, g]\n//\n// And we are done!\nexport const moveAllLeft = <T>(elements: T[], indicesToMove: number[]) => {\n  indicesToMove.sort((a: number, b: number) => a - b);\n\n  // Copy the elements to move\n  const leftMostElements = indicesToMove.map((index) => elements[index]);\n\n  const reversedIndicesToMove = indicesToMove\n    // We go from right to left to avoid overriding elements.\n    .reverse()\n    // We add 0 for the final marker\n    .concat([0]);\n\n  reversedIndicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the right (i - 1) to the current one (index)\n    for (let pos = reversedIndicesToMove[i - 1] - 1; pos >= index; --pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos + i] = elements[pos];\n    }\n  });\n\n  // The final step\n  leftMostElements.forEach((element, i) => {\n    elements[i] = element;\n  });\n\n  return elements;\n};\n\n// Let's go through an example\n//        |        |\n// [a, b, c, d, e, f, g]\n// -->\n// [a, b, d, e, g, c, f]\n//\n// We are going to override all the elements we want to move, so we keep them in an array\n// that we will restore at the end.\n// [c, f]\n//\n// From now on, we'll never read those values from the array anymore\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//\n// The idea is that we want to shift all the elements between the marker 0 and 1\n// by one slot to the left.\n//\n//        |0       |1\n// [a, b, _, d, e, _, g]\n//          <- <-\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//\n// Now, we need to move all the elements from marker 1 to the end by two (not one)\n// slots to the left, which gives us\n//\n//        |0       |1\n// [a, b, d, e, _, _, g]\n//              ^------\n//\n// which gives us\n//\n//        |0       |1\n// [a, b, d, e, g, _, _]\n//\n// At this point, we can fill back the rightmost elements with the array we saved at\n// the beginning\n//\n//        |0       |1\n// [a, b, d, e, g, c, f]\n//\n// And we are done!\nexport const moveAllRight = <T>(elements: T[], indicesToMove: number[]) => {\n  const reversedIndicesToMove = indicesToMove.sort(\n    (a: number, b: number) => b - a,\n  );\n\n  // Copy the elements to move\n  const rightMostElements = reversedIndicesToMove.map(\n    (index) => elements[index],\n  );\n\n  indicesToMove = reversedIndicesToMove\n    // We go from left to right to avoid overriding elements.\n    .reverse()\n    // We last element index for the final marker\n    .concat([elements.length]);\n\n  indicesToMove.forEach((index, i) => {\n    // We skip the first one as it is not paired with anything else\n    if (i === 0) {\n      return;\n    }\n\n    // We go from the next marker to the left (i - 1) to the current one (index)\n    for (let pos = indicesToMove[i - 1] + 1; pos < index; ++pos) {\n      // We move by 1 the first time, 2 the second... So we can use the index i in the array\n      elements[pos - i] = elements[pos];\n    }\n  });\n\n  // The final step\n  rightMostElements.forEach((element, i) => {\n    elements[elements.length - i - 1] = element;\n  });\n\n  return elements;\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  sendBackward,\n  bringToFront,\n  sendToBack,\n  bringForward,\n} from \"../components/icons\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst getElementIndices = (\n  direction: \"left\" | \"right\",\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedIndices: number[] = [];\n  let deletedIndicesCache: number[] = [];\n\n  const cb = (element: ExcalidrawElement, index: number) => {\n    if (element.isDeleted) {\n      // we want to build an array of deleted elements that are preceeding\n      //  a selected element so that we move them together\n      deletedIndicesCache.push(index);\n    } else {\n      if (appState.selectedElementIds[element.id]) {\n        selectedIndices.push(...deletedIndicesCache, index);\n      }\n      // always empty cache of deleted elements after either pushing a group\n      //  of selected/deleted elements, of after encountering non-deleted elem\n      deletedIndicesCache = [];\n    }\n  };\n\n  // sending back → select contiguous deleted elements that are to the left of\n  //  selected element(s)\n  if (direction === \"left\") {\n    let i = -1;\n    const len = elements.length;\n    while (++i < len) {\n      cb(elements[i], i);\n    }\n    // moving to front → loop from right to left so that we don't need to\n    //  backtrack when gathering deleted elements\n  } else {\n    let i = elements.length;\n    while (--i > -1) {\n      cb(elements[i], i);\n    }\n  }\n  // sort in case we were gathering indexes from right to left\n  return selectedIndices.sort();\n};\n\nconst moveElements = (\n  func: typeof moveOneLeft,\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const _elements = elements.slice();\n  const direction =\n    func === moveOneLeft || func === moveAllLeft ? \"left\" : \"right\";\n  const indices = getElementIndices(direction, _elements, appState);\n  return func(_elements, indices);\n};\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketLeft\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      {sendBackward}\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveOneRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && !event.shiftKey && event.code === \"BracketRight\",\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      {bringForward}\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllLeft, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketLeft\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketLeft\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      {sendToBack}\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveElements(moveAllRight, elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) => {\n    return isDarwin\n      ? event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === \"BracketRight\"\n      : event[KEYS.CTRL_OR_CMD] &&\n          event.shiftKey &&\n          event.code === \"BracketRight\";\n  },\n  PanelComponent: ({ updateData }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      {bringToFront}\n    </button>\n  ),\n});\n","import React from \"react\";\n\nexport const ButtonSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={value === option.value ? \"active\" : \"\"}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value ? true : false}\n        />\n        {option.text}\n      </label>\n    ))}\n  </div>\n);\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"a\",\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { mutateElement } from \"../element/mutateElement\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    // duplicate point if selected while editing multi-point element\n    if (appState.editingLinearElement) {\n      const { activePointIndex, elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (!element || activePointIndex === null) {\n        return false;\n      }\n      const { points } = element;\n      const selectedPoint = points[activePointIndex];\n      const nextPoint = points[activePointIndex + 1];\n      mutateElement(element, {\n        points: [\n          ...points.slice(0, activePointIndex + 1),\n          nextPoint\n            ? [\n                (selectedPoint[0] + nextPoint[0]) / 2,\n                (selectedPoint[1] + nextPoint[1]) / 2,\n              ]\n            : [selectedPoint[0] + 30, selectedPoint[1] + 30],\n          ...points.slice(activePointIndex + 1),\n        ],\n      });\n      return {\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            activePointIndex: activePointIndex + 1,\n          },\n        },\n        elements,\n        commitToHistory: true,\n      };\n    }\n\n    const groupIdMap = new Map();\n    return {\n      appState,\n      elements: elements.reduce(\n        (acc: Array<ExcalidrawElement>, element: ExcalidrawElement) => {\n          if (appState.selectedElementIds[element.id]) {\n            const newElement = duplicateElement(\n              appState.editingGroupId,\n              groupIdMap,\n              element,\n              {\n                x: element.x + 10,\n                y: element.y + 10,\n              },\n            );\n            appState.selectedElementIds[newElement.id] = true;\n            delete appState.selectedElementIds[element.id];\n            return acc.concat([element, newElement]);\n          }\n          return acc.concat(element);\n        },\n        [],\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === \"d\",\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./ColorPicker.scss\";\nimport { KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (color === \"transparent\") {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted\n    // focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (activeElement === colorInput.current) {\n          firstItem.current?.focus();\n          event.preventDefault();\n        }\n      }\n    } else if (\n      event.key === KEYS.ARROW_RIGHT ||\n      event.key === KEYS.ARROW_LEFT ||\n      event.key === KEYS.ARROW_UP ||\n      event.key === KEYS.ARROW_DOWN\n    ) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n  };\n\n  return (\n    <div\n      className=\"color-picker\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n      >\n        {colors.map((_color, i) => (\n          <button\n            className=\"color-picker-swatch\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(_color);\n            }}\n            title={`${_color} — ${keyBindings[i].toUpperCase()}`}\n            aria-label={_color}\n            aria-keyshortcuts={keyBindings[i]}\n            style={{ color: _color }}\n            key={_color}\n            ref={(el) => {\n              if (el && i === 0) {\n                firstItem.current = el;\n              }\n              if (el && _color === color) {\n                activeItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(_color);\n            }}\n          >\n            {_color === \"transparent\" ? (\n              <div className=\"color-picker-transparent\"></div>\n            ) : undefined}\n            <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n          </button>\n        ))}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n}) => {\n  const [isActive, setActive] = React.useState(false);\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={\n            color\n              ? ({ \"--swatch-color\": color } as React.CSSProperties)\n              : undefined\n          }\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  TextAlign,\n  FontFamily,\n} from \"../element/types\";\nimport {\n  getCommonAttributeOfSelectedElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { ButtonSelect } from \"../components/ButtonSelect\";\nimport {\n  isTextElement,\n  redrawTextBoundingBox,\n  getNonDeletedElements,\n} from \"../element\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { AppState } from \"../../src/types\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { DEFAULT_FONT_SIZE, DEFAULT_FONT_FAMILY } from \"../constants\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          backgroundColor: value,\n        }),\n      ),\n      appState: { ...appState, currentItemBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={updateData}\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonSelect\n        options={[\n          { value: \"hachure\", text: t(\"labels.hachure\") },\n          { value: \"cross-hatch\", text: t(\"labels.crossHatch\") },\n          { value: \"solid\", text: t(\"labels.solid\") },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonSelect\n        group=\"stroke-width\"\n        options={[\n          { value: 1, text: t(\"labels.thin\") },\n          { value: 2, text: t(\"labels.bold\") },\n          { value: 4, text: t(\"labels.extraBold\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonSelect\n        group=\"sloppiness\"\n        options={[\n          { value: 0, text: t(\"labels.architect\") },\n          { value: 1, text: t(\"labels.artist\") },\n          { value: 2, text: t(\"labels.cartoonist\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonSelect\n        group=\"strokeStyle\"\n        options={[\n          { value: \"solid\", text: t(\"labels.strokeStyle_solid\") },\n          { value: \"dashed\", text: t(\"labels.strokeStyle_dashed\") },\n          { value: \"dotted\", text: t(\"labels.strokeStyle_dotted\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontSize: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontSize: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonSelect\n        group=\"font-size\"\n        options={[\n          { value: 16, text: t(\"labels.small\") },\n          { value: 20, text: t(\"labels.medium\") },\n          { value: 28, text: t(\"labels.large\") },\n          { value: 36, text: t(\"labels.veryLarge\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.fontSize,\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontFamily: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: { value: FontFamily; text: string }[] = [\n      { value: 1, text: t(\"labels.handDrawn\") },\n      { value: 2, text: t(\"labels.normal\") },\n      { value: 3, text: t(\"labels.code\") },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonSelect<FontFamily | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => isTextElement(element) && element.fontFamily,\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          { value: \"left\", text: t(\"labels.left\") },\n          { value: \"center\", text: t(\"labels.center\") },\n          { value: \"right\", text: t(\"labels.right\") },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n","import React from \"react\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { getDefaultAppState } from \"../appState\";\nimport { trash, zoomIn, zoomOut, resetZoom } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { getNormalizedZoom, normalizeScroll } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { AppState, FlooredNumber } from \"../types\";\nimport { getCommonBounds } from \"../element\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, viewBackgroundColor: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData(color)}\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        username: appState.username,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          // TODO: Make this part of `AppState`.\n          (window as any).handle = null;\n          updateData(null);\n        }\n      }}\n    />\n  ),\n});\n\nconst ZOOM_STEP = 0.1;\n\nconst KEY_CODES = {\n  MINUS: \"Minus\",\n  EQUAL: \"Equal\",\n  ONE: \"Digit1\",\n  ZERO: \"Digit0\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_ZERO: \"Numpad0\",\n};\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom + ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.EQUAL || event.code === KEY_CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNormalizedZoom(appState.zoom - ZOOM_STEP),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.MINUS || event.code === KEY_CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: 1,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={resetZoom}\n      title={t(\"buttons.resetZoom\")}\n      aria-label={t(\"buttons.resetZoom\")}\n      onClick={() => {\n        updateData(null);\n      }}\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === KEY_CODES.ZERO || event.code === KEY_CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst calculateZoom = (\n  commonBounds: number[],\n  currentZoom: number,\n  {\n    scrollX,\n    scrollY,\n  }: {\n    scrollX: FlooredNumber;\n    scrollY: FlooredNumber;\n  },\n): number => {\n  const { innerWidth, innerHeight } = window;\n  const [x, y] = commonBounds;\n  const zoomX = -innerWidth / (2 * scrollX + 2 * x - innerWidth);\n  const zoomY = -innerHeight / (2 * scrollY + 2 * y - innerHeight);\n  const margin = 0.01;\n  let newZoom;\n\n  if (zoomX < zoomY) {\n    newZoom = zoomX - margin;\n  } else if (zoomY <= zoomX) {\n    newZoom = zoomY - margin;\n  } else {\n    newZoom = currentZoom;\n  }\n\n  if (newZoom <= 0.1) {\n    return 0.1;\n  }\n  if (newZoom >= 1) {\n    return 1;\n  }\n\n  return newZoom;\n};\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => {\n    const nonDeletedElements = elements.filter((element) => !element.isDeleted);\n    const commonBounds = getCommonBounds(nonDeletedElements);\n    const [x1, y1, x2, y2] = commonBounds;\n    const centerX = (x1 + x2) / 2;\n    const centerY = (y1 + y2) / 2;\n    const scrollX = normalizeScroll(appState.width / 2 - centerX);\n    const scrollY = normalizeScroll(appState.height / 2 - centerY);\n    const zoom = calculateZoom(commonBounds, appState.zoom, {\n      scrollX,\n      scrollY,\n    });\n\n    return {\n      appState: {\n        ...appState,\n        scrollX,\n        scrollY,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) =>\n    event.code === KEY_CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const { elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      window.document.activeElement.blur();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"draw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"draw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"draw\"\n      ) {\n        if (isPathALoop(multiPointElement.points)) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, i) =>\n              i === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (!appState.elementLocked) {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n    if (!appState.elementLocked || !multiPointElement) {\n      resetCursor();\n    }\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          appState.elementLocked && multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        selectedElementIds:\n          multiPointElement && !appState.elementLocked\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"draw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { Component } from \"react\";\nimport { selectNode, removeSelection } from \"../utils\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n};\n\nexport class ProjectName extends Component<Props> {\n  private handleFocus = (event: React.FocusEvent<HTMLElement>) => {\n    selectNode(event.currentTarget);\n  };\n\n  private handleBlur = (event: React.FocusEvent<HTMLElement>) => {\n    const value = event.currentTarget.innerText.trim();\n    if (value !== this.props.value) {\n      this.props.onChange(value);\n    }\n    removeSelection();\n  };\n\n  private handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n  private makeEditable = (editable: HTMLSpanElement | null) => {\n    if (!editable) {\n      return;\n    }\n    try {\n      editable.contentEditable = \"plaintext-only\";\n    } catch {\n      editable.contentEditable = \"true\";\n    }\n  };\n\n  public render() {\n    return (\n      <span\n        suppressContentEditableWarning\n        ref={this.makeEditable}\n        data-type=\"wysiwyg\"\n        className=\"TextInput\"\n        role=\"textbox\"\n        aria-label={this.props.label}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        onFocus={this.handleFocus}\n      >\n        {this.props.value}\n      </span>\n    );\n  }\n}\n","import React from \"react\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { saveAsJSON, loadFromJSON } from \"../data\";\nimport { load, save, saveAs } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { register } from \"./register\";\nimport { KEYS } from \"../keys\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n    />\n  ),\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.exportBackground}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.withBackground\")}\n    </label>\n  ),\n});\n\nexport const actionChangeShouldAddWatermark = register({\n  name: \"changeShouldAddWatermark\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, shouldAddWatermark: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <label>\n      <input\n        type=\"checkbox\"\n        checked={appState.shouldAddWatermark}\n        onChange={(event) => updateData(event.target.checked)}\n      />{\" \"}\n      {t(\"labels.addWatermark\")}\n    </label>\n  ),\n});\n\nexport const actionSaveScene = register({\n  name: \"saveScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, (window as any).handle).catch((error) =>\n      console.error(error),\n    );\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event[KEYS.CTRL_OR_CMD] && !event.shiftKey;\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionSaveAsScene = register({\n  name: \"saveAsScene\",\n  perform: (elements, appState, value) => {\n    saveAsJSON(elements, appState, null).catch((error) => console.error(error));\n    return { commitToHistory: false };\n  },\n  keyTest: (event) => {\n    return event.key === \"s\" && event.shiftKey && event[KEYS.CTRL_OR_CMD];\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useIsMobile()}\n      hidden={!(\"chooseFileSystemEntries\" in window)}\n      onClick={() => updateData(null)}\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: (\n    elements,\n    appState,\n    { elements: loadedElements, appState: loadedAppState, error },\n  ) => {\n    return {\n      elements: loadedElements,\n      appState: {\n        ...loadedAppState,\n        errorMessage: error,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        loadFromJSON()\n          .then(({ elements, appState }) => {\n            updateData({ elements: elements, appState: appState });\n          })\n          .catch((error) => {\n            // if user cancels, ignore the error\n            if (error.name === \"AbortError\") {\n              return;\n            }\n            updateData({ error: error.message });\n          });\n      }}\n    />\n  ),\n});\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../constants\";\n\nlet copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    event.altKey &&\n    event.keyCode === KEYS.C_KEY_CODE,\n  contextMenuOrder: 0,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            strokeStyle: pastedElement?.strokeStyle,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    event.altKey &&\n    event.keyCode === KEYS.V_KEY_CODE,\n  contextMenuOrder: 1,\n});\n","import React from \"react\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nconst ICON = (\n  <svg\n    width=\"30\"\n    height=\"22\"\n    viewBox=\"0 0 512 512\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M528 448H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h480c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48zM128 180v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm-336 96v-40c0-6.627-5.373-12-12-12H76c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12zm288 0v-40c0-6.627-5.373-12-12-12H172c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h232c6.627 0 12-5.373 12-12zm96 0v-40c0-6.627-5.373-12-12-12h-40c-6.627 0-12 5.373-12 12v40c0 6.627 5.373 12 12 12h40c6.627 0 12-5.373 12-12z\" />\n  </svg>\n);\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <label title={`${props.title} — ?`} className=\"help-icon\">\n    <div onClick={props.onClick}>{ICON}</div>\n  </label>\n);\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.keyCode === KEYS.F_KEY_CODE,\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        showShortcutsDialog: true,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"shortcutsDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const updatedElements = elements.map((element) => {\n      if (!appState.selectedElementIds[element.id]) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = updatedElements.lastIndexOf(\n      lastElementInGroup,\n    );\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextMenuOrder: 4,\n  contextItemLabel: \"labels.group\",\n  contextItemPredicate: (elements, appState) =>\n    getSelectedElements(getNonDeletedElements(elements), appState).length > 1,\n  keyTest: (event) => {\n    return (\n      !event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n    const nextElements = elements.map((element) => {\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n    return {\n      appState: selectGroupsForSelectedElements(\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => {\n    return (\n      event.shiftKey &&\n      event[KEYS.CTRL_OR_CMD] &&\n      event.keyCode === KEYS.G_KEY_CODE\n    );\n  },\n  contextMenuOrder: 5,\n  contextItemLabel: \"labels.ungroup\",\n  contextItemPredicate: (elements, appState) =>\n    getSelectedGroupIds(appState).length > 0,\n});\n","import \"./Avatar.scss\";\n\nimport React from \"react\";\n\ntype AvatarProps = {\n  children: string;\n  className?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n};\n\nexport const Avatar = ({\n  children,\n  className,\n  color,\n  onClick,\n}: AvatarProps) => (\n  <div\n    className={`Avatar ${className}`}\n    style={{ background: color }}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import { PointerCoords } from \"./types\";\nimport { normalizeScroll } from \"./scene\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: normalizeScroll(sum(allCoords, (coords) => coords.x) / allCoords.length),\n    y: normalizeScroll(sum(allCoords, (coords) => coords.y) / allCoords.length),\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import React from \"react\";\nimport { Avatar } from \"../components/Avatar\";\nimport { register } from \"./register\";\nimport { getClientColors, getClientInitials } from \"../clients\";\nimport { Collaborator } from \"../types\";\nimport { normalizeScroll } from \"../scene\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        scrollX: normalizeScroll(appState.width / 2 - point.x),\n        scrollY: normalizeScroll(appState.height / 2 - point.y),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData, id }) => {\n    const clientId = id;\n\n    if (!clientId) {\n      return null;\n    }\n\n    const collaborator = appState.collaborators.get(clientId);\n\n    if (!collaborator) {\n      return null;\n    }\n\n    const { background } = getClientColors(clientId);\n    const shortName = getClientInitials(collaborator.username);\n\n    return (\n      <Avatar\n        color={background}\n        onClick={() => updateData(collaborator.pointer)}\n      >\n        {shortName}\n      </Avatar>\n    );\n  },\n});\n","import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { deepCopyElement } from \"../element/newElement\";\nimport { loadLibrary, saveLibrary } from \"../data/localStorage\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n\n    loadLibrary().then((items) => {\n      saveLibrary([...items, selectedElements.map(deepCopyElement)]);\n    });\n\n    return false;\n  },\n  contextMenuOrder: 6,\n  contextItemLabel: \"labels.addToLibrary\",\n});\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { SceneHistory, HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap[nextElement.id] || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        prevElements\n          .filter(\n            (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n          )\n          .map((prevElement) =>\n            newElementWith(prevElement, { isDeleted: true }),\n          ),\n      );\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\nconst testUndo = (shift: boolean) => (event: KeyboardEvent) =>\n  event[KEYS.CTRL_OR_CMD] && /z/i.test(event.key) && event.shiftKey === shift;\n\ntype ActionCreator = (history: SceneHistory) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: testUndo(false),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: testUndo(true),\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import \"./Island.scss\";\n\nimport React from \"react\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={`${className ?? \"\"} Island`}\n      style={{ \"--padding\": padding, ...style } as React.CSSProperties}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import \"./Stack.css\";\n\nimport React from \"react\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_horizontal ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          alignItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={`Stack Stack_vertical ${className || \"\"}`}\n      style={\n        {\n          \"--gap\": gap,\n          justifyItems: align,\n          justifyContent,\n        } as React.CSSProperties\n      }\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import \"./FixedSideContainer.css\";\n\nimport React from \"react\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={`FixedSideContainer FixedSideContainer_side_${side} ${className}`}\n  >\n    {children}\n  </div>\n);\n","import \"./UserList.css\";\n\nimport React from \"react\";\n\ntype UserListProps = {\n  children: React.ReactNode;\n  className?: string;\n  mobile?: boolean;\n};\n\nexport const UserList = ({ children, className, mobile }: UserListProps) => {\n  let compClassName = \"UserList\";\n\n  if (className) {\n    compClassName += ` ${className}`;\n  }\n\n  if (mobile) {\n    compClassName += \" UserList_mobile\";\n  }\n\n  return <div className={compClassName}>{children}</div>;\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\n\ntype LockIconSize = \"s\" | \"m\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  checked: boolean;\n  onChange?(): void;\n  size?: LockIconSize;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: LockIconSize = \"m\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockIcon = (props: LockIconProps) => {\n  const sizeCn = `ToolIcon_size_${props.size || DEFAULT_SIZE}`;\n\n  return (\n    <label\n      className={`ToolIcon ToolIcon__lock ToolIcon_type_floating ${sizeCn} zen-mode-visibility ${\n        props.zenModeEnabled && \"zen-mode-visibility--hidden\"\n      }`}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        id={props.id}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import \"./Modal.scss\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { KEYS } from \"../keys\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n}) => {\n  const modalRoot = useBodyRoot();\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      props.onCloseRequest();\n    }\n  };\n  return createPortal(\n    <div\n      className={`Modal ${props.className ?? \"\"}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={\n          {\n            \"--max-width\": `${props.maxWidth}px`,\n            maxHeight: \"100%\",\n            overflowY: \"scroll\",\n          } as any\n        }\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = () => {\n  const createDiv = () => {\n    const div = document.createElement(\"div\");\n    document.body.appendChild(div);\n    return div;\n  };\n  const [div] = useState(createDiv);\n  useEffect(() => {\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [div]);\n  return div;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { Island } from \"./Island\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { back, close } from \"./icons\";\nimport { KEYS } from \"../keys\";\n\nimport \"./Dialog.scss\";\n\nexport const Dialog = (props: {\n  children: React.ReactNode;\n  className?: string;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n}) => {\n  const islandRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const focusableElements = queryFocusableElements();\n\n    if (focusableElements.length > 0) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!islandRef.current) {\n      return;\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements();\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    const node = islandRef.current;\n    node.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => node.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  const queryFocusableElements = () => {\n    const focusableElements = islandRef.current?.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  return (\n    <Modal\n      className={`${props.className ?? \"\"} Dialog`}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.maxWidth}\n      onCloseRequest={props.onCloseRequest}\n    >\n      <Island padding={4} ref={islandRef}>\n        <h2 id=\"dialog-title\" className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={props.onCloseRequest}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        {props.children}\n      </Island>\n    </Modal>\n  );\n};\n","import \"./ExportDialog.scss\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport { ToolButton } from \"./ToolButton\";\nimport { clipboard, exportFile, link } from \"./icons\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport Stack from \"./Stack\";\nimport { t } from \"../i18n\";\n\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport useIsMobile from \"../is-mobile\";\nimport { Dialog } from \"./Dialog\";\n\nconst scales = [1, 2, 3];\nconst defaultScale = scales.includes(devicePixelRatio) ? devicePixelRatio : 1;\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportModal = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [scale, setScale] = useState(defaultScale);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const {\n    exportBackground,\n    viewBackgroundColor,\n    shouldAddWatermark,\n  } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    const canvas = exportToCanvas(exportedElements, appState, {\n      exportBackground,\n      viewBackgroundColor,\n      exportPadding,\n      scale,\n      shouldAddWatermark,\n    });\n    previewNode?.appendChild(canvas);\n    return () => {\n      previewNode?.removeChild(canvas);\n    };\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n    scale,\n    shouldAddWatermark,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef}></div>\n      <Stack.Col gap={2} align=\"center\">\n        <div className=\"ExportDialog__actions\">\n          <Stack.Row gap={2}>\n            <ToolButton\n              type=\"button\"\n              label=\"PNG\"\n              title={t(\"buttons.exportToPng\")}\n              aria-label={t(\"buttons.exportToPng\")}\n              onClick={() => onExportToPng(exportedElements, scale)}\n            />\n            <ToolButton\n              type=\"button\"\n              label=\"SVG\"\n              title={t(\"buttons.exportToSvg\")}\n              aria-label={t(\"buttons.exportToSvg\")}\n              onClick={() => onExportToSvg(exportedElements, scale)}\n            />\n            {probablySupportsClipboardBlob && (\n              <ToolButton\n                type=\"button\"\n                icon={clipboard}\n                title={t(\"buttons.copyPngToClipboard\")}\n                aria-label={t(\"buttons.copyPngToClipboard\")}\n                onClick={() => onExportToClipboard(exportedElements, scale)}\n              />\n            )}\n            <ToolButton\n              type=\"button\"\n              icon={link}\n              title={t(\"buttons.getShareableLink\")}\n              aria-label={t(\"buttons.getShareableLink\")}\n              onClick={() => onExportToBackend(exportedElements)}\n            />\n          </Stack.Row>\n          <div className=\"ExportDialog__name\">\n            {actionManager.renderAction(\"changeProjectName\")}\n          </div>\n          <Stack.Row gap={2}>\n            {scales.map((s) => (\n              <ToolButton\n                key={s}\n                size=\"s\"\n                type=\"radio\"\n                icon={`x${s}`}\n                name=\"export-canvas-scale\"\n                aria-label={`Scale ${s} x`}\n                id=\"export-canvas-scale\"\n                checked={s === scale}\n                onChange={() => setScale(s)}\n              />\n            ))}\n          </Stack.Row>\n        </div>\n        {actionManager.renderAction(\"changeExportBackground\")}\n        {someElementIsSelected && (\n          <div>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={exportSelected}\n                onChange={(event) =>\n                  setExportSelected(event.currentTarget.checked)\n                }\n              />{\" \"}\n              {t(\"labels.onlySelected\")}\n            </label>\n          </div>\n        )}\n        {actionManager.renderAction(\"changeShouldAddWatermark\")}\n      </Stack.Col>\n    </div>\n  );\n};\n\nexport const ExportDialog = ({\n  elements,\n  appState,\n  exportPadding = 10,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n  onExportToBackend,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onExportToBackend: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => setModalIsShown(true)}\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n        ref={triggerButton}\n      />\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"buttons.export\")}\n        >\n          <ExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onExportToBackend={onExportToBackend}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as i18n from \"../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLanguage = i18n.getLanguage().lng,\n  floating,\n}: {\n  languages?: { lng: string; label: string }[];\n  onChange: (value: string) => void;\n  currentLanguage?: string;\n  floating?: boolean;\n}) => (\n  <React.Fragment>\n    <select\n      className={`dropdown-select dropdown-select__language${\n        floating ? \" dropdown-select--floating\" : \"\"\n      }`}\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLanguage}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      {languages.map((language) => (\n        <option key={language.lng} value={language.lng}>\n          {language.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"draw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length > 2) {\n      return null;\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n    if (appState.editingLinearElement) {\n      return appState.editingLinearElement.activePointIndex\n        ? t(\"hints.lineEditor_pointSelected\")\n        : t(\"hints.lineEditor_nothingSelected\");\n    }\n    return t(\"hints.lineEditor_info\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  let hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { hasBackground, hasStroke, hasText, getTargetElement } from \"../scene\";\nimport { t } from \"../i18n\";\nimport { SHAPES } from \"../shapes\";\nimport { ToolButton } from \"./ToolButton\";\nimport { capitalizeString, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport useIsMobile from \"../is-mobile\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElement(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {(hasBackground(elementType) ||\n        targetElements.some((element) => hasBackground(element.type))) && (\n        <>\n          {renderAction(\"changeBackgroundColor\")}\n\n          {renderAction(\"changeFillStyle\")}\n        </>\n      )}\n\n      {(hasStroke(elementType) ||\n        targetElements.some((element) => hasStroke(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeWidth\")}\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nconst LIBRARY_ICON = (\n  // fa-th-large\n  <svg viewBox=\"0 0 512 512\">\n    <path d=\"M296 32h192c13.255 0 24 10.745 24 24v160c0 13.255-10.745 24-24 24H296c-13.255 0-24-10.745-24-24V56c0-13.255 10.745-24 24-24zm-80 0H24C10.745 32 0 42.745 0 56v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V56c0-13.255-10.745-24-24-24zM0 296v160c0 13.255 10.745 24 24 24h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H24c-13.255 0-24 10.745-24 24zm296 184h192c13.255 0 24-10.745 24-24V296c0-13.255-10.745-24-24-24H296c-13.255 0-24 10.745-24 24v160c0 13.255 10.745 24 24 24z\" />\n  </svg>\n);\n\nexport const ShapesSwitcher = ({\n  elementType,\n  setAppState,\n  isLibraryOpen,\n}: {\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: (appState: Partial<AppState>) => void;\n  isLibraryOpen: boolean;\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const shortcut = `${capitalizeString(key)} ${t(\"shortcutsDialog.or\")} ${\n        index + 1\n      }`;\n      return (\n        <ToolButton\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={`${key} ${index + 1}`}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(value);\n            setAppState({});\n          }}\n        />\n      );\n    })}\n    <ToolButton\n      type=\"button\"\n      icon={LIBRARY_ICON}\n      name=\"editor-library\"\n      keyBindingLabel=\"9\"\n      aria-keyshortcuts=\"9\"\n      title={`${capitalizeString(t(\"toolBar.library\"))} — 9`}\n      aria-label={capitalizeString(t(\"toolBar.library\"))}\n      onClick={() => {\n        setAppState({ isLibraryOpen: !isLibraryOpen });\n      }}\n    />\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: number;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"resetZoom\")}\n      <div style={{ marginInlineStart: 4 }}>{(zoom * 100).toFixed(0)}%</div>\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport useIsMobile from \"../is-mobile\";\nimport { users, clipboard, start, stop } from \"./icons\";\n\nimport \"./RoomDialog.scss\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\nimport { Dialog } from \"./Dialog\";\nimport { AppState } from \"../types\";\n\nconst RoomModal = ({\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  onPressingEnter,\n}: {\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  onPressingEnter: () => void;\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = () => {\n    copyTextToSystemClipboard(activeRoomLink);\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  return (\n    <div className=\"RoomDialog-modal\">\n      {!activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_intro\")}</p>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-startSession\"\n              type=\"button\"\n              icon={start}\n              title={t(\"roomDialog.button_startSession\")}\n              aria-label={t(\"roomDialog.button_startSession\")}\n              showAriaLabel={true}\n              onClick={onRoomCreate}\n            />\n          </div>\n        </>\n      )}\n      {activeRoomLink && (\n        <>\n          <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n          <p>{t(\"roomDialog.desc_shareLink\")}</p>\n          <div className=\"RoomDialog-linkContainer\">\n            <ToolButton\n              type=\"button\"\n              icon={clipboard}\n              title={t(\"labels.copy\")}\n              aria-label={t(\"labels.copy\")}\n              onClick={copyRoomLink}\n            />\n            <input\n              value={activeRoomLink}\n              readOnly={true}\n              className=\"RoomDialog-link\"\n              ref={roomLinkInput}\n              onPointerDown={selectInput}\n            />\n          </div>\n          <div className=\"RoomDialog-usernameContainer\">\n            <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n              {t(\"labels.yourName\")}\n            </label>\n            <input\n              id=\"username\"\n              value={username || \"\"}\n              className=\"RoomDialog-username TextInput\"\n              onChange={(event) => onUsernameChange(event.target.value)}\n              onKeyPress={(event) => event.key === \"Enter\" && onPressingEnter()}\n            />\n          </div>\n          <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n          <p>\n            <span role=\"img\" aria-hidden=\"true\">\n              ⚠️\n            </span>{\" \"}\n            {t(\"roomDialog.desc_persistenceWarning\")}\n          </p>\n          <p>{t(\"roomDialog.desc_exitSession\")}</p>\n          <div className=\"RoomDialog-sessionStartButtonContainer\">\n            <ToolButton\n              className=\"RoomDialog-stopSession\"\n              type=\"button\"\n              icon={stop}\n              title={t(\"roomDialog.button_stopSession\")}\n              aria-label={t(\"roomDialog.button_stopSession\")}\n              showAriaLabel={true}\n              onClick={onRoomDestroy}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const RoomDialog = ({\n  isCollaborating,\n  collaboratorCount,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n}: {\n  isCollaborating: AppState[\"isCollaborating\"];\n  collaboratorCount: number;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n  const [activeRoomLink, setActiveRoomLink] = useState(\"\");\n\n  const triggerButton = useRef<HTMLButtonElement>(null);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n    triggerButton.current?.focus();\n  }, []);\n\n  useEffect(() => {\n    setActiveRoomLink(isCollaborating ? window.location.href : \"\");\n  }, [isCollaborating]);\n\n  return (\n    <>\n      <ToolButton\n        className={`RoomDialog-modalButton ${\n          isCollaborating ? \"is-collaborating\" : \"\"\n        }`}\n        onClick={() => setModalIsShown(true)}\n        icon={users}\n        type=\"button\"\n        title={t(\"buttons.roomDialog\")}\n        aria-label={t(\"buttons.roomDialog\")}\n        showAriaLabel={useIsMobile()}\n        ref={triggerButton}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"RoomDialog-modalButton-collaborators\">\n            {collaboratorCount}\n          </div>\n        )}\n      </ToolButton>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={800}\n          onCloseRequest={handleClose}\n          title={t(\"labels.createRoom\")}\n        >\n          <RoomModal\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={onUsernameChange}\n            onRoomCreate={onRoomCreate}\n            onRoomDestroy={onRoomDestroy}\n            onPressingEnter={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t, setLanguage } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { LanguageList } from \"./LanguageList\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockIcon } from \"./LockIcon\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { UserList } from \"./UserList\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  exportButton: React.ReactNode;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  actionManager,\n  exportButton,\n  setAppState,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  canvas,\n}: MobileMenuProps) => (\n  <>\n    {appState.isLoading && <LoadingMessage />}\n    <FixedSideContainer side=\"top\">\n      <Section heading=\"shapes\">\n        {(heading) => (\n          <Stack.Col gap={4} align=\"center\">\n            <Stack.Row gap={1}>\n              <Island padding={1}>\n                {heading}\n                <Stack.Row gap={1}>\n                  <ShapesSwitcher\n                    elementType={appState.elementType}\n                    setAppState={setAppState}\n                    isLibraryOpen={appState.isLibraryOpen}\n                  />\n                </Stack.Row>\n              </Island>\n              <LockIcon\n                checked={appState.elementLocked}\n                onChange={onLockToggle}\n                title={t(\"toolBar.lock\")}\n              />\n            </Stack.Row>\n          </Stack.Col>\n        )}\n      </Section>\n      <HintViewer appState={appState} elements={elements} />\n    </FixedSideContainer>\n    <div\n      className=\"App-bottom-bar\"\n      style={{\n        marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n      }}\n    >\n      <Island padding={3}>\n        {appState.openMenu === \"canvas\" ? (\n          <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n            <div className=\"panelColumn\">\n              <Stack.Col gap={4}>\n                {actionManager.renderAction(\"loadScene\")}\n                {actionManager.renderAction(\"saveScene\")}\n                {actionManager.renderAction(\"saveAsScene\")}\n                {exportButton}\n                {actionManager.renderAction(\"clearCanvas\")}\n                <RoomDialog\n                  isCollaborating={appState.isCollaborating}\n                  collaboratorCount={appState.collaborators.size}\n                  username={appState.username}\n                  onUsernameChange={onUsernameChange}\n                  onRoomCreate={onRoomCreate}\n                  onRoomDestroy={onRoomDestroy}\n                />\n                {actionManager.renderAction(\"changeViewBackgroundColor\")}\n                <fieldset>\n                  <legend>{t(\"labels.language\")}</legend>\n                  <LanguageList\n                    onChange={async (lng) => {\n                      await setLanguage(lng);\n                      setAppState({});\n                    }}\n                  />\n                </fieldset>\n                <fieldset>\n                  <legend>{t(\"labels.collaborators\")}</legend>\n                  <UserList mobile>\n                    {Array.from(appState.collaborators)\n                      // Collaborator is either not initialized or is actually the current user.\n                      .filter(([_, client]) => Object.keys(client).length !== 0)\n                      .map(([clientId, client]) => (\n                        <React.Fragment key={clientId}>\n                          {actionManager.renderAction(\n                            \"goToCollaborator\",\n                            clientId,\n                          )}\n                        </React.Fragment>\n                      ))}\n                  </UserList>\n                </fieldset>\n              </Stack.Col>\n            </div>\n          </Section>\n        ) : appState.openMenu === \"shape\" &&\n          showSelectedShapeActions(appState, elements) ? (\n          <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n            <SelectedShapeActions\n              appState={appState}\n              elements={elements}\n              renderAction={actionManager.renderAction}\n              elementType={appState.elementType}\n            />\n          </Section>\n        ) : null}\n        <footer className=\"App-toolbar\">\n          <div className=\"App-toolbar-content\">\n            {actionManager.renderAction(\"toggleCanvasMenu\")}\n            {actionManager.renderAction(\"toggleEditMenu\")}\n            {actionManager.renderAction(\"undo\")}\n            {actionManager.renderAction(\"redo\")}\n            {actionManager.renderAction(\n              appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n            )}\n            {actionManager.renderAction(\"deleteSelectedElements\")}\n          </div>\n          {appState.scrolledOutside && (\n            <button\n              className=\"scroll-back-to-content\"\n              onClick={() => {\n                setAppState({\n                  ...calculateScrollCenter(elements, appState, canvas),\n                });\n              }}\n            >\n              {t(\"buttons.scrollBackToContent\")}\n            </button>\n          )}\n        </footer>\n      </Island>\n    </div>\n  </>\n);\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          maxWidth={500}\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\nimport { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      width: \"49%\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div\n    style={{\n      border: `1px solid ${oc.gray[4]}`,\n      marginBottom: \"16px\",\n    }}\n  >\n    <h3\n      style={{\n        margin: \"0\",\n        padding: \"4px\",\n        backgroundColor: oc.gray[2],\n        textAlign: \"center\",\n      }}\n    >\n      {props.caption}\n    </h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n  return (\n    <div\n      style={{\n        borderTop: `1px solid ${oc.gray[4]}`,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginLeft: isRTL ? \"0em\" : \"auto\",\n            marginRight: isRTL ? \"auto\" : \"0em\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"shortcutsDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <span\n    style={{\n      wordBreak: \"keep-all\",\n      border: `1px solid ${oc.gray[4]}`,\n      padding: \"2px 8px\",\n      margin: \"auto 4px\",\n      backgroundColor: oc.gray[2],\n      borderRadius: \"2px\",\n      fontSize: \"0.8em\",\n      minHeight: \"26px\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      alignItems: \"center\",\n    }}\n    {...props}\n  />\n);\n\nconst Footer = () => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      borderTop: `1px solid ${oc.gray[4]}`,\n      marginTop: 8,\n      paddingTop: 16,\n    }}\n  >\n    <a\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.blog\")}\n    </a>\n    <a\n      href=\"https://howto.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.howto\")}\n    </a>\n    <a\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"shortcutsDialog.github\")}\n    </a>\n  </div>\n);\n\nexport const ShortcutsDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        maxWidth={900}\n        onCloseRequest={handleClose}\n        title={t(\"shortcutsDialog.title\")}\n      >\n        <Columns>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.shapes\")}>\n              <Shortcut label={t(\"toolBar.selection\")} shortcuts={[\"S\", \"1\"]} />\n              <Shortcut label={t(\"toolBar.rectangle\")} shortcuts={[\"R\", \"2\"]} />\n              <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n              <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n              <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n              <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"L\", \"6\"]} />\n              <Shortcut label={t(\"toolBar.draw\")} shortcuts={[\"X\", \"7\"]} />\n              <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n              <Shortcut\n                label={t(\"shortcutsDialog.textNewLine\")}\n                shortcuts={[\n                  getShortcutKey(\"Enter\"),\n                  getShortcutKey(\"Shift+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.textFinish\")}\n                shortcuts={[\n                  getShortcutKey(\"Esc\"),\n                  getShortcutKey(\"CtrlOrCmd+Enter\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedArrow\")}\n                shortcuts={[\n                  \"A\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.curvedLine\")}\n                shortcuts={[\n                  \"L\",\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                  t(\"shortcutsDialog.click\"),\n                ]}\n                isOr={false}\n              />\n              <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n            </ShortcutIsland>\n            <ShortcutIsland caption={t(\"shortcutsDialog.view\")}>\n              <Shortcut\n                label={t(\"buttons.zoomIn\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.zoomOut\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.resetZoom\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n              />\n              <Shortcut\n                label={t(\"shortcutsDialog.zoomToFit\")}\n                shortcuts={[\"Shift+1\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleFullScreen\")}\n                shortcuts={[\"F\"]}\n              />\n              <Shortcut\n                label={t(\"buttons.toggleZenMode\")}\n                shortcuts={[getShortcutKey(\"Alt+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.toggleGridMode\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n          <Column>\n            <ShortcutIsland caption={t(\"shortcutsDialog.editor\")}>\n              <Shortcut\n                label={t(\"labels.selectAll\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n              />\n              <Shortcut\n                label={t(\"labels.multiSelect\")}\n                shortcuts={[\n                  getShortcutKey(`Shift+${t(\"shortcutsDialog.click\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.moveCanvas\")}\n                shortcuts={[\n                  getShortcutKey(`Space+${t(\"shortcutsDialog.drag\")}`),\n                  getShortcutKey(`Wheel+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n                isOr={true}\n              />\n              <Shortcut\n                label={t(\"labels.copy\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.paste\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyAsPng\")}\n                shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.copyStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+C\")]}\n              />\n              <Shortcut\n                label={t(\"labels.pasteStyles\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+V\")]}\n              />\n              <Shortcut\n                label={t(\"labels.delete\")}\n                shortcuts={[getShortcutKey(\"Del\")]}\n              />\n              <Shortcut\n                label={t(\"labels.sendToBack\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.bringToFront\")}\n                shortcuts={[\n                  isDarwin\n                    ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                    : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                ]}\n              />\n              <Shortcut\n                label={t(\"labels.sendBackward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n              />\n              <Shortcut\n                label={t(\"labels.bringForward\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n              />\n              <Shortcut\n                label={t(\"labels.duplicateSelection\")}\n                shortcuts={[\n                  getShortcutKey(\"CtrlOrCmd+D\"),\n                  getShortcutKey(`Alt+${t(\"shortcutsDialog.drag\")}`),\n                ]}\n              />\n              <Shortcut\n                label={t(\"buttons.undo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n              />\n              <Shortcut\n                label={t(\"buttons.redo\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Z\")]}\n              />\n              <Shortcut\n                label={t(\"labels.group\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n              />\n              <Shortcut\n                label={t(\"labels.ungroup\")}\n                shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n              />\n            </ShortcutIsland>\n          </Column>\n        </Columns>\n        <Footer />\n      </Dialog>\n    </>\n  );\n};\n","import React from \"react\";\nimport oc from \"open-color\";\n\n// https://github.com/tholman/github-corners\nexport const GitHubCorner = React.memo(() => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 250 250\"\n    className=\"github-corner rtl-mirror\"\n  >\n    <a\n      href=\"https://github.com/excalidraw/excalidraw\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      aria-label=\"GitHub repository\"\n    >\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill={oc.gray[6]} />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n        fill={oc.white}\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n        fill={oc.white}\n      />\n    </a>\n  </svg>\n));\n","import \"./Tooltip.scss\";\n\nimport React from \"react\";\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n};\n\nexport const Tooltip = ({ children, label }: TooltipProps) => (\n  <div className=\"Tooltip\">\n    <span className=\"Tooltip__label\">{label}</span>\n    {children}\n  </div>\n);\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { exportToSvg } from \"../scene/export\";\nimport { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport { close } from \"../components/icons\";\n\nimport \"./LibraryUnit.scss\";\nimport { t } from \"../i18n\";\n\n// fa-plus\nconst PLUS_ICON = (\n  <svg viewBox=\"0 0 1792 1792\">\n    <path d=\"M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\" />\n  </svg>\n);\n\nexport const LibraryUnit = ({\n  elements,\n  pendingElements,\n  onRemoveFromLibrary,\n  onClick,\n}: {\n  elements?: NonDeleted<ExcalidrawElement>[];\n  pendingElements?: NonDeleted<ExcalidrawElement>[];\n  onRemoveFromLibrary: () => void;\n  onClick: () => void;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    const elementsToRender = elements || pendingElements;\n    if (!elementsToRender) {\n      return;\n    }\n    const svg = exportToSvg(elementsToRender, {\n      exportBackground: false,\n      viewBackgroundColor: \"#fff\",\n      shouldAddWatermark: false,\n    });\n    for (const child of ref.current!.children) {\n      if (child.tagName !== \"svg\") {\n        continue;\n      }\n      ref.current!.removeChild(child);\n    }\n    ref.current!.appendChild(svg);\n\n    const current = ref.current!;\n    return () => {\n      current.removeChild(svg);\n    };\n  }, [elements, pendingElements]);\n\n  const [isHovered, setIsHovered] = useState(false);\n\n  const adder = isHovered && pendingElements && (\n    <div className=\"library-unit__adder\">{PLUS_ICON}</div>\n  );\n\n  return (\n    <div\n      className={`library-unit ${\n        elements || pendingElements ? \"library-unit__active\" : \"\"\n      }`}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div\n        className={`library-unit__dragger ${\n          !!pendingElements ? \"library-unit__pulse\" : \"\"\n        }`}\n        ref={ref}\n        draggable={!!elements}\n        onClick={!!elements || !!pendingElements ? onClick : undefined}\n        onDragStart={(event) => {\n          setIsHovered(false);\n          event.dataTransfer.setData(\n            \"application/vnd.excalidraw.json\",\n            JSON.stringify(elements),\n          );\n        }}\n      />\n      {adder}\n      {elements && isHovered && (\n        <button\n          className=\"library-unit__removeFromLibrary\"\n          aria-label={t(\"labels.removeFromLibrary\")}\n          onClick={onRemoveFromLibrary}\n        >\n          {close}\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useRef,\n  useState,\n  RefObject,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { calculateScrollCenter, getSelectedElements } from \"../scene\";\nimport { exportCanvas } from \"../data\";\n\nimport { AppState, LibraryItems } from \"../types\";\nimport {\n  NonDeletedExcalidrawElement,\n  ExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport { Island } from \"./Island\";\nimport Stack from \"./Stack\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { UserList } from \"./UserList\";\nimport { LockIcon } from \"./LockIcon\";\nimport { ExportDialog, ExportCB } from \"./ExportDialog\";\nimport { LanguageList } from \"./LanguageList\";\nimport { t, languages, setLanguage } from \"../i18n\";\nimport { HintViewer } from \"./HintViewer\";\nimport useIsMobile from \"../is-mobile\";\n\nimport { ExportType } from \"../scene/types\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { ZoomActions, SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport { RoomDialog } from \"./RoomDialog\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ShortcutsDialog } from \"./ShortcutsDialog\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { CLASSES } from \"../constants\";\nimport { shield } from \"./icons\";\nimport { GitHubCorner } from \"./GitHubCorner\";\nimport { Tooltip } from \"./Tooltip\";\n\nimport \"./LayerUI.scss\";\nimport { LibraryUnit } from \"./LibraryUnit\";\nimport { loadLibrary, saveLibrary } from \"../data/localStorage\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: any;\n  elements: readonly NonDeletedExcalidrawElement[];\n  onRoomCreate: () => void;\n  onUsernameChange: (username: string) => void;\n  onRoomDestroy: () => void;\n  onLockToggle: () => void;\n  onInsertShape: (elements: readonly NonDeleted<ExcalidrawElement>[]) => void;\n  zenModeEnabled: boolean;\n  toggleZenMode: () => void;\n  lng: string;\n}\n\nfunction useOnClickOutside(\n  ref: RefObject<HTMLElement>,\n  cb: (event: MouseEvent) => void,\n) {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (\n        event.target instanceof Element &&\n        (ref.current.contains(event.target) ||\n          !document.body.contains(event.target))\n      ) {\n        return;\n      }\n\n      cb(event);\n    };\n    document.addEventListener(\"pointerdown\", listener, false);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", listener);\n    };\n  }, [ref, cb]);\n}\n\nconst LibraryMenuItems = ({\n  library,\n  onRemoveFromLibrary,\n  onAddToLibrary,\n  onInsertShape,\n  pendingElements,\n}: {\n  library: LibraryItems;\n  pendingElements: NonDeleted<ExcalidrawElement>[];\n  onClickOutside: (event: MouseEvent) => void;\n  onRemoveFromLibrary: (index: number) => void;\n  onInsertShape: (elements: readonly NonDeleted<ExcalidrawElement>[]) => void;\n  onAddToLibrary: (elements: NonDeleted<ExcalidrawElement>[]) => void;\n}) => {\n  const numCells = library.length + (pendingElements.length > 0 ? 1 : 0);\n  const CELLS_PER_ROW = 3;\n  const numRows = Math.max(1, Math.ceil(numCells / CELLS_PER_ROW));\n  const rows = [];\n  let addedPendingElements = false;\n\n  for (let row = 0; row < numRows; row++) {\n    const i = CELLS_PER_ROW * row;\n    const children = [];\n    for (let j = 0; j < 3; j++) {\n      const shouldAddPendingElements: boolean =\n        pendingElements.length > 0 &&\n        !addedPendingElements &&\n        i + j >= library.length;\n      addedPendingElements = addedPendingElements || shouldAddPendingElements;\n\n      children.push(\n        <Stack.Col key={j}>\n          <LibraryUnit\n            elements={library[i + j]}\n            pendingElements={\n              shouldAddPendingElements ? pendingElements : undefined\n            }\n            onRemoveFromLibrary={onRemoveFromLibrary.bind(null, i + j)}\n            onClick={\n              shouldAddPendingElements\n                ? onAddToLibrary.bind(null, pendingElements)\n                : onInsertShape.bind(null, library[i + j])\n            }\n          />\n        </Stack.Col>,\n      );\n    }\n    rows.push(\n      <Stack.Row align=\"center\" gap={1} key={row}>\n        {children}\n      </Stack.Row>,\n    );\n  }\n\n  return (\n    <Stack.Col align=\"center\" gap={1} className=\"layer-ui__library-items\">\n      {rows}\n    </Stack.Col>\n  );\n};\n\nconst LibraryMenu = ({\n  onClickOutside,\n  onInsertShape,\n  pendingElements,\n  onAddToLibrary,\n}: {\n  pendingElements: NonDeleted<ExcalidrawElement>[];\n  onClickOutside: (event: MouseEvent) => void;\n  onInsertShape: (elements: readonly NonDeleted<ExcalidrawElement>[]) => void;\n  onAddToLibrary: () => void;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useOnClickOutside(ref, onClickOutside);\n\n  const [libraryItems, setLibraryItems] = useState<LibraryItems>([]);\n\n  const [loadingState, setIsLoading] = useState<\n    \"preloading\" | \"loading\" | \"ready\"\n  >(\"preloading\");\n\n  const loadingTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    Promise.race([\n      new Promise((resolve) => {\n        loadingTimerRef.current = setTimeout(() => {\n          resolve(\"loading\");\n        }, 100);\n      }),\n      loadLibrary().then((items) => {\n        setLibraryItems(items);\n        setIsLoading(\"ready\");\n      }),\n    ]).then((data) => {\n      if (data === \"loading\") {\n        setIsLoading(\"loading\");\n      }\n    });\n    return () => {\n      clearTimeout(loadingTimerRef.current!);\n    };\n  }, []);\n\n  const removeFromLibrary = useCallback(async (indexToRemove) => {\n    const items = await loadLibrary();\n    const nextItems = items.filter((_, index) => index !== indexToRemove);\n    saveLibrary(nextItems);\n    setLibraryItems(nextItems);\n  }, []);\n\n  const addToLibrary = useCallback(\n    async (elements: NonDeleted<ExcalidrawElement>[]) => {\n      const items = await loadLibrary();\n      const nextItems = [...items, elements];\n      onAddToLibrary();\n      saveLibrary(nextItems);\n      setLibraryItems(nextItems);\n    },\n    [onAddToLibrary],\n  );\n\n  return loadingState === \"preloading\" ? null : (\n    <Island padding={1} ref={ref} className=\"layer-ui__library\">\n      {loadingState === \"loading\" ? (\n        <div className=\"layer-ui__library-message\">\n          {t(\"labels.libraryLoadingMessage\")}\n        </div>\n      ) : (\n        <LibraryMenuItems\n          library={libraryItems}\n          onClickOutside={onClickOutside}\n          onRemoveFromLibrary={removeFromLibrary}\n          onAddToLibrary={addToLibrary}\n          onInsertShape={onInsertShape}\n          pendingElements={pendingElements}\n        />\n      )}\n    </Island>\n  );\n};\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onRoomCreate,\n  onUsernameChange,\n  onRoomDestroy,\n  onLockToggle,\n  onInsertShape,\n  zenModeEnabled,\n  toggleZenMode,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  // TODO: Extend tooltip component and use here.\n  const renderEncryptedIcon = () => (\n    <a\n      className={`encrypted-icon tooltip zen-mode-visibility ${\n        zenModeEnabled ? \"zen-mode-visibility--hidden\" : \"\"\n      }`}\n      href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span className=\"tooltip-text\" dir=\"auto\">\n        {t(\"encrypted.tooltip\")}\n      </span>\n      {shield}\n    </a>\n  );\n\n  const renderExportDialog = () => {\n    const createExporter = (type: ExportType): ExportCB => (\n      exportedElements,\n      scale,\n    ) => {\n      if (canvas) {\n        exportCanvas(type, exportedElements, appState, canvas, {\n          exportBackground: appState.exportBackground,\n          name: appState.name,\n          viewBackgroundColor: appState.viewBackgroundColor,\n          scale,\n          shouldAddWatermark: appState.shouldAddWatermark,\n        });\n      }\n    };\n    return (\n      <ExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n        onExportToBackend={(exportedElements) => {\n          if (canvas) {\n            exportCanvas(\n              \"backend\",\n              exportedElements,\n              {\n                ...appState,\n                selectedElementIds: {},\n              },\n              canvas,\n              appState,\n            );\n          }\n        }}\n      />\n    );\n  };\n\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={4} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"loadScene\")}\n            {actionManager.renderAction(\"saveScene\")}\n            {actionManager.renderAction(\"saveAsScene\")}\n            {renderExportDialog()}\n            {actionManager.renderAction(\"clearCanvas\")}\n            <RoomDialog\n              isCollaborating={appState.isCollaborating}\n              collaboratorCount={appState.collaborators.size}\n              username={appState.username}\n              onUsernameChange={onUsernameChange}\n              onRoomCreate={onRoomCreate}\n              onRoomDestroy={onRoomDestroy}\n            />\n          </Stack.Row>\n          {actionManager.renderAction(\"changeViewBackgroundColor\")}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={`zen-mode-transition ${zenModeEnabled && \"transition-left\"}`}\n    >\n      <Island className={CLASSES.SHAPE_ACTIONS_MENU} padding={4}>\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const closeLibrary = useCallback(\n    (event) => {\n      setAppState({ isLibraryOpen: false });\n    },\n    [setAppState],\n  );\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n    });\n  }, [setAppState]);\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n    const libraryMenu = appState.isLibraryOpen ? (\n      <LibraryMenu\n        pendingElements={getSelectedElements(elements, appState)}\n        onClickOutside={closeLibrary}\n        onInsertShape={onInsertShape}\n        onAddToLibrary={deselectItems}\n      />\n    ) : null;\n    return (\n      <FixedSideContainer side=\"top\">\n        <HintViewer appState={appState} elements={elements} />\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={zenModeEnabled && \"disable-pointerEvents\"}\n          >\n            {renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          <Section heading=\"shapes\">\n            {(heading) => (\n              <Stack.Col gap={4} align=\"start\">\n                <Stack.Row gap={1}>\n                  <Island padding={1} className={zenModeEnabled && \"zen-mode\"}>\n                    {heading}\n                    <Stack.Row gap={1}>\n                      <ShapesSwitcher\n                        elementType={appState.elementType}\n                        setAppState={setAppState}\n                        isLibraryOpen={appState.isLibraryOpen}\n                      />\n                    </Stack.Row>\n                  </Island>\n                  <LockIcon\n                    zenModeEnabled={zenModeEnabled}\n                    checked={appState.elementLocked}\n                    onChange={onLockToggle}\n                    title={t(\"toolBar.lock\")}\n                  />\n                </Stack.Row>\n                {libraryMenu}\n              </Stack.Col>\n            )}\n          </Section>\n          <UserList\n            className={`zen-mode-transition ${\n              zenModeEnabled && \"transition-right\"\n            }`}\n          >\n            {Array.from(appState.collaborators)\n              // Collaborator is either not initialized or is actually the current user.\n              .filter(([_, client]) => Object.keys(client).length !== 0)\n              .map(([clientId, client]) => (\n                <Tooltip\n                  label={client.username || \"Unknown user\"}\n                  key={clientId}\n                >\n                  {actionManager.renderAction(\"goToCollaborator\", clientId)}\n                </Tooltip>\n              ))}\n          </UserList>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderBottomAppMenu = () => {\n    return (\n      <div\n        className={`App-menu App-menu_bottom zen-mode-transition ${\n          zenModeEnabled && \"App-menu_bottom--transition-left\"\n        }`}\n      >\n        <Stack.Col gap={2}>\n          <Section heading=\"canvasActions\">\n            <Island padding={1}>\n              <ZoomActions\n                renderAction={actionManager.renderAction}\n                zoom={appState.zoom}\n              />\n            </Island>\n            {renderEncryptedIcon()}\n          </Section>\n        </Stack.Col>\n      </div>\n    );\n  };\n\n  const renderFooter = () => (\n    <footer role=\"contentinfo\" className=\"layer-ui__wrapper__footer\">\n      <div\n        className={`zen-mode-transition ${\n          zenModeEnabled && \"transition-right disable-pointerEvents\"\n        }`}\n      >\n        <LanguageList\n          onChange={async (lng) => {\n            await setLanguage(lng);\n            setAppState({});\n          }}\n          languages={languages}\n          floating\n        />\n        {actionManager.renderAction(\"toggleShortcuts\")}\n      </div>\n      <button\n        className={`disable-zen-mode ${\n          zenModeEnabled && \"disable-zen-mode--visible\"\n        }`}\n        onClick={toggleZenMode}\n      >\n        {t(\"buttons.exitZenMode\")}\n      </button>\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </footer>\n  );\n\n  return isMobile ? (\n    <MobileMenu\n      appState={appState}\n      elements={elements}\n      actionManager={actionManager}\n      exportButton={renderExportDialog()}\n      setAppState={setAppState}\n      onUsernameChange={onUsernameChange}\n      onRoomCreate={onRoomCreate}\n      onRoomDestroy={onRoomDestroy}\n      onLockToggle={onLockToggle}\n      canvas={canvas}\n    />\n  ) : (\n    <div className=\"layer-ui__wrapper\">\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showShortcutsDialog && (\n        <ShortcutsDialog\n          onClose={() => setAppState({ showShortcutsDialog: null })}\n        />\n      )}\n      {renderFixedSideContainer()}\n      {renderBottomAppMenu()}\n      {\n        <aside\n          className={`layer-ui__wrapper__github-corner zen-mode-transition ${\n            zenModeEnabled && \"transition-right\"\n          }`}\n        >\n          <GitHubCorner />\n        </aside>\n      }\n      {renderFooter()}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      draggingElement,\n      resizingElement,\n      multiElement,\n      editingElement,\n      isResizing,\n      cursorX,\n      cursorY,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n\n  return (\n    prev.lng === next.lng &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\n\nimport rough from \"roughjs/bin/rough\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { simplify, Point } from \"points-on-curve\";\nimport { FlooredNumber, SocketUpdateData } from \"../types\";\nimport Save from \"./Save\"\n\nimport {\n  newElement,\n  newTextElement,\n  duplicateElement,\n  resizeTest,\n  isInvisiblySmallElement,\n  isTextElement,\n  textWysiwyg,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getPerfectElementSize,\n  getNormalizedDimensions,\n  getElementMap,\n  getDrawingVersion,\n  getSyncableElements,\n  newLinearElement,\n  resizeElements,\n  getElementWithResizeHandler,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n  getResizeHandlerFromCoords,\n  isNonDeletedElement,\n  updateTextElement,\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"../element\";\nimport {\n  getElementsWithinSelection,\n  isOverScrollBars,\n  getElementAtPosition,\n  getElementContainingPosition,\n  getNormalizedZoom,\n  getSelectedElements,\n  globalSceneState,\n  isSomeElementSelected,\n  calculateScrollCenter,\n} from \"../scene\";\nimport {\n  decryptAESGEM,\n  saveToLocalStorage,\n  loadScene,\n  loadFromBlob,\n  SOCKET_SERVER,\n  SocketUpdateDataSource,\n  exportCanvas,\n} from \"../data\";\nimport Portal from \"./Portal\";\n\nimport { renderScene } from \"../renderer\";\nimport { AppState, GestureEvent, Gesture } from \"../types\";\nimport {\n  ExcalidrawElement,\n  ExcalidrawProps,\n  ExcalidrawTextElement,\n  NonDeleted,\n  ExcalidrawGenericElement,\n} from \"../element/types\";\n\nimport { distance2d, isPathALoop, getGridPoint } from \"../math\";\n\nimport {\n  isWritableElement,\n  isInputLike,\n  isToolIcon,\n  debounce,\n  distance,\n  resetCursor,\n  viewportCoordsToSceneCoords,\n  sceneCoordsToViewportCoords,\n  setCursorForShape,\n  tupleToCoors,\n} from \"../utils\";\nimport {\n  KEYS,\n  isArrowKey,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n  getRotateWithDiscreteAngleKey,\n} from \"../keys\";\n\nimport { findShapeByKey, shapesShortcutKeys } from \"../shapes\";\nimport { createHistory, SceneHistory } from \"../history\";\n\nimport ContextMenu from \"./ContextMenu\";\n\nimport { ActionManager } from \"../actions/manager\";\nimport \"../actions\";\nimport { actions } from \"../actions/register\";\n\nimport { ActionResult } from \"../actions/types\";\nimport { getDefaultAppState } from \"../appState\";\nimport { t, getLanguage } from \"../i18n\";\n\nimport {\n  copyToAppClipboard,\n  getClipboardContent,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport { normalizeScroll } from \"../scene\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport { createUndoAction, createRedoAction } from \"../actions/actionHistory\";\n\nimport {\n  CURSOR_TYPE,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  POINTER_BUTTON,\n  DRAGGING_THRESHOLD,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  LINE_CONFIRM_THRESHOLD,\n  SCENE,\n  EVENT,\n  ENV,\n  CANVAS_ONLY_ACTIONS,\n  DEFAULT_VERTICAL_ALIGN,\n  GRID_SIZE,\n  LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG,\n} from \"../constants\";\nimport {\n  INITAL_SCENE_UPDATE_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n  TOUCH_CTX_MENU_TIMEOUT,\n} from \"../time_constants\";\n\nimport LayerUI from \"./LayerUI\";\nimport { ScrollBars, SceneState } from \"../scene/types\";\nimport { generateCollaborationLink, getCollaborationLinkData } from \"../data\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { SceneStateCallbackRemover } from \"../scene/globalScene\";\nimport { isLinearElement } from \"../element/typeChecks\";\nimport { actionFinalize, actionDeleteSelected } from \"../actions\";\nimport {\n  restoreUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n} from \"../data/localStorage\";\n\nimport throttle from \"lodash.throttle\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  getSelectedGroupIds,\n  selectGroupsForSelectedElements,\n  isElementInGroup,\n  getSelectedGroupIdForElement,\n} from \"../groups\";\n\nimport axios from 'axios';\nimport { clearAppStateForLocalStorage } from \"../appState\";\nimport { resolveModuleNameFromCache } from \"typescript\";\n\n\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nconst withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\nconst { history } = createHistory();\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\nlet touchTimeout = 0;\nlet touchMoving = false;\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\n\ninterface windowFuncs {   // It may be that the functions should be declared here instead\n  // of the body of typescript.\n// TS linter may be helpful here.\nrestoreFromURL(name: string): any; // implemented\nSaveToURL(url:string,name: string): any; // implemented\nlistDocs():any; // lists cached docs - complains if there's no server\nfetchDocs():any; // populates docs cache , depends on activcate cloud lists docs.\nloadDoc(id:number,isRefresh?:boolean):any; // loads a doc by index from the server\ngetVersions(id:number):any; // lists version for a given ID - not implemented servderside\nsaveAlt(id:number):any;\nactivateCloud(URL:string):any; // should set the server URL, then fetch + list the docs.\nsaveActiveDoc():any;\nsaveNewDoc(name:string):any;\nactiveDocIndex:number;\nactiveDocName:String;\nisOnOldVersion:boolean;\nisCloudConnected:boolean;\nserverURL:string;\nSaveDoc():any;\ncloudDocs:CloudDocInfo[];\ndocsUpToDate:boolean;\nOverwriteDoc():any;\nlastHttpStatus:string;\nlastSuccessfulPut:Date;\nreloadDoc():any;\nfirstReload:boolean;\n}\n\n\n// All this to add a function to the window?   .. OOF!\ndeclare global {\n  interface Window extends windowFuncs{\n\n    }\n}\n\n\ninterface CloudDocInfo{\n  id:number;\n  name:string;\n  dateLastSaved:Date;\n}\n\nexport type {CloudDocInfo as CloudDocInfo}; // type safe way to do this. \nexport type {windowFuncs as windowFuncs};\n\n// ------ OOF!!\n\n\ntype PointerDownState = Readonly<{\n  // The first position at which pointerDown happened\n  origin: Readonly<{ x: number; y: number }>;\n  // Same as \"origin\" but snapped to the grid, if grid is on\n  originInGrid: Readonly<{ x: number; y: number }>;\n  // Scrollbar checks\n  scrollbars: ReturnType<typeof isOverScrollBars>;\n  // The previous pointer position\n  lastCoords: { x: number; y: number };\n  resize: {\n    // Handle when resizing, might change during the pointer interaction\n    handle: ReturnType<typeof resizeTest>;\n    // This is determined on the initial pointer down event\n    isResizing: boolean;\n    // This is determined on the initial pointer down event\n    offset: { x: number; y: number };\n    // This is determined on the initial pointer down event\n    arrowDirection: \"origin\" | \"end\";\n  };\n  hit: {\n    // The element the pointer is \"hitting\", is determined on the initial\n    // pointer down event\n    element: ExcalidrawElement | null;\n    // This is determined on the initial pointer down event\n    wasAddedToSelection: boolean;\n    // Whether selected element(s) were duplicated, might change during the\n    // pointer interation\n    hasBeenDuplicated: boolean;\n  };\n  drag: {\n    // Might change during the pointer interation\n    hasOccurred: boolean;\n    // Might change during the pointer interation\n    offset: { x: number; y: number } | null;\n  };\n  // We need to have these in the state so that we can unsubscribe them\n  eventListeners: {\n    // It's defined on the initial pointer down event\n    onMove: null | ((event: PointerEvent) => void);\n    // It's defined on the initial pointer down event\n    onUp: null | ((event: PointerEvent) => void);\n  };\n}>;\n\nclass App extends React.Component<ExcalidrawProps, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  portal: Portal = new Portal(this);\n  lastBroadcastedOrReceivedSceneVersion: number = -1;\n  broadcastedElementVersions: Map<string, number> = new Map();\n  removeSceneCallback: SceneStateCallbackRemover | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n\n  public static defaultProps: Partial<ExcalidrawProps> = {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n\n\n\n  constructor(props: any) {\n    super(props);\n    const defaultAppState = getDefaultAppState();\n\n    const { width, height } = props;\n    this.state = {\n      ...defaultAppState,\n      isLoading: true,\n      width,\n      height,\n    };\n\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => globalSceneState.getElementsIncludingDeleted(),\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(history));\n    this.actionManager.registerAction(createRedoAction(history));\n\n\n    // I PUT IT HERE!\n    // window.OverwriteDoc = (id:number) => {  WILL IMPLEMENT EVENTUALLY BUT RN THERE's A WORKAROUND!\n    //     if (!window.isCloudConnected){\n    //       console.log(\"Can't do this if you aren't connected\");\n    //       return;\n    //     }\n    //     window.activeDocIndex = id;\n    //     window.saveActiveDoc();\n    // }\n\n    /*\n       Dotnet is still far from ideal in terms of a development language\n       There are definately very helpful things about it, but the developer\n       culture of accepting the barriers to intuitive understanding\n       can be somewhat detrimental to actually getting things done\n       quickly and effectively.\n    */\n\n\n    window.SaveToURL = async (url:string,name?:string) => {\n\n      // This method is synchronous up until the post request.\n\n      let appState = clearAppStateForLocalStorage(this.state);\n      let elements = globalSceneState.getElements();\n\n      let appStateJSON = JSON.stringify(appState)\n      let elementsJSON = JSON.stringify(elements)\n      let update = false;\n\n      let statCodeString\n      let codeLeadingDigit\n\n      if(name == \"\" || name == undefined){ // this is hacky AF\n        update = true;\n       }\n\n       if (elements.length == 0 && update == true){\n        console.log(\"aborting save, elements array was empty.\");\n       return;\n     }\n\n       let reqData =  {\n        elements:elementsJSON,\n        state:appStateJSON,\n        lastSaved:window.lastSuccessfulPut.toISOString(),\n      }\n\n      let result =  await axios({ // hopefully this returns the ID.\n        method: update?'put':'post',\n        url: url,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type':'application/json'\n        },\n        // add the ID only if this is an update and the activeDocIndex isn't -1\n        data:((update && window.activeDocIndex !=-1)?{...reqData,id:window.activeDocIndex,name:window.activeDocName}:{...reqData,name:name,}),\n        }\n      );\n      //  Blatent violation of dry :)  here twice because one is broken, I don't know which though.\n      window.lastHttpStatus = result.status+\"\"\n      let leadingDigit = window.lastHttpStatus.substr(0,1);\n      if(leadingDigit === \"2\"){\n        window.lastSuccessfulPut = new Date();\n      }\n\n       statCodeString = result.status+\"\"\n       codeLeadingDigit = statCodeString.substr(0,1)\n      if(codeLeadingDigit == \"2\"){\n        window.lastSuccessfulPut = new Date();\n      }\n\n\n      return result;\n    };\n    //\n\n      window.restoreFromURL = async (url: string) => {\n        this.setState({\n          isLoading: true\n        });\n\n        let scene = await loadScene(url);\n        this.syncActionResult(scene);\n\n        this.setState({\n          isLoading: false\n        });\n    };\n\n      window.fetchDocs = async () => {\n        // needs to fetch the docs list from the server,\n        // but that hasn't been set yet so.\n        let response = await axios.get(window.serverURL+\"/names\")\n        // should auto map\n        window.cloudDocs = response.data;\n        return response.data;\n    };\n\n    window.listDocs = async () => {\n      if(window.cloudDocs){\n          window.cloudDocs.forEach((e) =>\n        {console.log(`${e.id} ${e.name} ${e.dateLastSaved}`)});\n      }\n    }\n\n    window.activateCloud = async (url: string) => {\n     // needs to set the serverURL value.\n     console.log(\"Cloud server is now\" + url);\n     window.serverURL = url;\n     let docList = await window.fetchDocs();\n     await window.listDocs();\n     window.isCloudConnected = true;\n     window.activeDocIndex = -1;\n     window.lastSuccessfulPut = new Date(1970,1,1);\n     let href = window.location.href\n     \n     // query parameter handling \n     if (href.indexOf('?') != -1){\n      const urlParams = new URLSearchParams(window.location.search);\n      \n       if(href.indexOf('docId') != -1)\n        {\n          const docToLoad =  Number.parseInt(urlParams.get('docId')+\"\")\n          await window.loadDoc(docToLoad);\n        }\n     \n      if(href.indexOf('newDoc') != -1)\n        {\n          const newDocName =  urlParams.get('newDoc')+\"\"\n          await window.saveNewDoc(newDocName);\n        }\n\n       if((href.indexOf('docName') != -1) && (href.indexOf('docId') == -1))\n       {\n        const docName =  urlParams.get('docName')+\"\".replace('+',' ')\n        let id = docList.filter((d:CloudDocInfo) => {return d.name == docName})\n        if(typeof id[0] !== undefined)\n          {\n            window.loadDoc(id.id);\n          }\n       }\n      }\n    };\n\n    window.saveActiveDoc = async () => {\n      let response;\n      if(window.activeDocIndex>0){\n        response = await window.SaveToURL(window.serverURL+\"/\"+window.activeDocIndex,\"\")\n        } else {\n          console.log(\"save failed, no active doc\")\n        }\n        if(response.status == 400){\n          console.log(\"Doc is out of date, fetching latest version\")\n          window.loadDoc(window.activeDocIndex,true);\n        }\n\n        return response; // Hack to ensure things are executed in order, find a better way to do this.\n    }\n\n\n\n    window.loadDoc = async (id:number,isRefresh?:boolean) => {\n      if(window.isCloudConnected && window.activeDocIndex>0 && (isRefresh == undefined || isRefresh == false)){\n        let s = await window.saveActiveDoc();\n        window.activeDocIndex = -1;\n      }\n\n      try {\n      let req = await window.restoreFromURL(window.serverURL+\"/\"+id);\n      window.activeDocIndex = id;\n      window.isCloudConnected = true;\n\n      await window.fetchDocs();\n\n      window.activeDocName = window.cloudDocs.filter(e => {return e.id==id})[0].name;\n\n      console.log(`document number ${id} restored! from cloud.`)\n\n      \n        let params = new URLSearchParams(window.location.search)\n        params.set(\"docId\",id+\"\")\n        params.set(\"docName\",window.activeDocName+\"\")\n        let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname +\"?\"+ params.toString();\n        window.history.pushState({path:newurl},'',newurl);\n      \n\n    }\n      catch {\n        console.log(\" I'm sorryworry senpai, I couldn't fetch the document ~UwU\")\n      }\n    }\n\n    window.reloadDoc = () => {\n      if(window.activeDocIndex == -1){\n        console.log(\"there is no loaded doc!\")\n        return\n    }\n\n    window.loadDoc(window.activeDocIndex);\n  }\n\n    window.saveNewDoc = async (name:string) => {\n        let prevDocName = window.activeDocName;\n        let prevDocNo = window.activeDocIndex;\n        if(name == \"\"){\n          console.log(\"can't save document without a name\")\n          return\n        }\n        try{\n          window.activeDocName = name;\n        let l = await window.SaveToURL(window.serverURL,name);\n\n        window.activeDocIndex = -1;\n        await window.loadDoc(l.data.id);  // name collision?\n        console.log(`new doc saved with id: ${l.data.id}`)\n        }\n        catch(e){\n          console.log(\"unable to save doc\");\n          window.activeDocIndex = prevDocNo;\n          window.activeDocName = prevDocName;\n          if (e) console.log(e);\n      }\n    }\n   window.activateCloud(\"http://\"+window.location.host + \"/excalidrawapi/Excalidraw\");\n}\n\n\n  public render() {\n    const {\n      zenModeEnabled,\n      width: canvasDOMWidth,\n      height: canvasDOMHeight,\n    } = this.state;\n\n    const canvasScale = window.devicePixelRatio;\n\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n\n    return (\n      <div className=\"excalidraw\">\n        <LayerUI\n          canvas={this.canvas}\n          appState={this.state}\n          setAppState={this.setAppState}\n          actionManager={this.actionManager}\n          elements={globalSceneState.getElements()}\n          onRoomCreate={this.openPortal}\n          onRoomDestroy={this.closePortal}\n          onUsernameChange={(username) => {\n            saveUsernameToLocalStorage(username);\n            this.setState({\n              username,\n            });\n          }}\n          onLockToggle={this.toggleLock}\n          onInsertShape={(elements) =>\n            this.addElementsFromPasteOrLibrary(elements)\n          }\n          zenModeEnabled={zenModeEnabled}\n          toggleZenMode={this.toggleZenMode}\n          lng={getLanguage().lng}\n        />\n        <Save docs={window.cloudDocs}></Save>\n        <main>\n          <canvas\n            id=\"canvas\"\n            style={{\n              width: canvasDOMWidth,\n              height: canvasDOMHeight,\n            }}\n            width={canvasWidth}\n            height={canvasHeight}\n            ref={this.handleCanvasRef}\n            onContextMenu={this.handleCanvasContextMenu}\n            onPointerDown={this.handleCanvasPointerDown}\n            onDoubleClick={this.handleCanvasDoubleClick}\n            onPointerMove={this.handleCanvasPointerMove}\n            onPointerUp={this.removePointer}\n            onPointerCancel={this.removePointer}\n            onTouchMove={this.handleTouchMove}\n            onDrop={this.handleCanvasOnDrop}\n          >\n            {t(\"labels.drawingCanvas\")}\n          </canvas>\n        </main>\n      </div>\n    );\n  }\n\n  private syncActionResult = withBatchedUpdates(\n    (actionResult: ActionResult) => {\n      if (this.unmounted || actionResult === false) {\n        return;\n      }\n\n      let editingElement: AppState[\"editingElement\"] | null = null;\n      if (actionResult.elements) {\n        actionResult.elements.forEach((element) => {\n          if (\n            this.state.editingElement?.id === element.id &&\n            this.state.editingElement !== element &&\n            isNonDeletedElement(element)\n          ) {\n            editingElement = element;\n          }\n        });\n        globalSceneState.replaceAllElements(actionResult.elements);\n        if (actionResult.commitToHistory) {\n          history.resumeRecording();\n        }\n      }\n\n      if (actionResult.appState || editingElement) {\n        if (actionResult.commitToHistory) {\n          history.resumeRecording();\n        }\n        this.setState(\n          (state) => ({\n            ...actionResult.appState,\n            editingElement:\n              editingElement || actionResult.appState?.editingElement || null,\n            isCollaborating: state.isCollaborating,\n            collaborators: state.collaborators,\n          }),\n          () => {\n            if (actionResult.syncHistory) {\n              history.setCurrentState(\n                this.state,\n                globalSceneState.getElementsIncludingDeleted(),\n              );\n            }\n          },\n        );\n      }\n    },\n  );\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.saveDebounced();\n    this.saveDebounced.flush();\n  });\n\n  private onUnload = () => {\n    this.destroySocketClient();\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    globalSceneState.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private shouldForceLoadScene(\n    scene: ResolutionType<typeof loadScene>,\n  ): boolean {\n    if (!scene.elements.length) {\n      return true;\n    }\n\n    const roomMatch = getCollaborationLinkData(window.location.href);\n\n    if (!roomMatch) {\n      return false;\n    }\n    const collabForceLoadFlag = localStorage.getItem(\n      LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG,\n    );\n    if (collabForceLoadFlag) {\n      try {\n        const {\n          room: previousRoom,\n          timestamp,\n        }: { room: string; timestamp: number } = JSON.parse(\n          collabForceLoadFlag,\n        );\n        // if loading same room as the one previously unloaded within 15sec\n        //  force reload without prompting\n        if (previousRoom === roomMatch[1] && Date.now() - timestamp < 15000) {\n          return true;\n        }\n      } catch {}\n    }\n    return false;\n  }\n\n  private initializeScene = async () => {\n    const searchParams = new URLSearchParams(window.location.search);\n    const id = searchParams.get(\"id\");\n    const jsonMatch = window.location.hash.match(\n      /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n    );\n\n    if (!this.state.isLoading) {\n      this.setState({ isLoading: true });\n    }\n\n    let scene = await loadScene(null);\n\n    let isCollaborationScene = !!getCollaborationLinkData(window.location.href);\n    const isExternalScene = !!(id || jsonMatch || isCollaborationScene);\n\n    if (isExternalScene) {\n      if (\n        this.shouldForceLoadScene(scene) ||\n        window.confirm(t(\"alerts.loadSceneOverridePrompt\"))\n      ) {\n        // Backwards compatibility with legacy url format\n        if (id) {\n          scene = await loadScene(id);\n        } else if (jsonMatch) {\n          scene = await loadScene(jsonMatch[1], jsonMatch[2]);\n        }\n        if (!isCollaborationScene) {\n          window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n        }\n      } else {\n        isCollaborationScene = false;\n        window.history.replaceState({}, \"Excalidraw\", window.location.origin);\n      }\n    }\n\n    if (this.state.isLoading) {\n      this.setState({ isLoading: false });\n    }\n\n    if (isCollaborationScene) {\n      this.initializeSocketClient({ showLoadingState: true });\n    } else if (scene) {\n      this.syncActionResult(scene);\n    }\n  };\n\n  public async componentDidMount() {\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n\n    this.removeSceneCallback = globalSceneState.addCallback(\n      this.onSceneUpdated,\n    );\n\n    this.addEventListeners();\n    this.initializeScene();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n    this.removeSceneCallback!();\n    this.removeEventListeners();\n\n    clearTimeout(touchTimeout);\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    globalSceneState\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private onHashChange = (event: HashChangeEvent) => {\n    if (window.location.hash.length > 1) {\n      this.initializeScene();\n    }\n  };\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n    window.removeEventListener(EVENT.HASHCHANGE, this.onHashChange, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private addEventListeners() {\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n\n    document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n    window.addEventListener(EVENT.HASHCHANGE, this.onHashChange, false);\n\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n  }\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    if (this.state.isCollaborating && this.portal.roomID) {\n      localStorage.setItem(\n        LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG,\n        JSON.stringify({\n          timestamp: Date.now(),\n          room: this.portal.roomID,\n        }),\n      );\n    }\n    if (\n      this.state.isCollaborating &&\n      globalSceneState.getElements().length > 0\n    ) {\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n  });\n\n  queueBroadcastAllElements = throttle(() => {\n    this.broadcastScene(SCENE.UPDATE, /* syncAll */ true);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  componentDidUpdate(prevProps: ExcalidrawProps) {\n    const { width: prevWidth, height: prevHeight } = prevProps;\n    const { width: currentWidth, height: currentHeight } = this.props;\n    if (prevWidth !== currentWidth || prevHeight !== currentHeight) {\n      this.setState({\n        width: currentWidth,\n        height: currentHeight,\n      });\n    }\n\n    if (this.state.isCollaborating && !this.portal.socket) {\n      this.initializeSocketClient({ showLoadingState: true });\n    }\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketID) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketID);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketID] = user.username;\n      }\n      pointerViewportCoords[socketID] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      cursorButton[socketID] = user.button;\n    });\n    const elements = globalSceneState.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        //  rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds: remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside =\n      // hide when editing text\n      this.state.editingElement?.type === \"text\"\n        ? false\n        : !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside: scrolledOutside });\n    }\n    this.saveDebounced();\n\n    if (\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()) >\n      this.lastBroadcastedOrReceivedSceneVersion\n    ) {\n      this.broadcastScene(SCENE.UPDATE, /* syncAll */ false);\n      this.queueBroadcastAllElements();\n    }\n\n    history.record(this.state, globalSceneState.getElementsIncludingDeleted());\n  }\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    if (isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private copyAll = () => {\n    copyToAppClipboard(globalSceneState.getElements(), this.state);\n  };\n\n  private copyToClipboardAsPng = () => {\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    exportCanvas(\n      \"clipboard\",\n      selectedElements.length ? selectedElements : elements,\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private copyToClipboardAsSvg = () => {\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n    exportCanvas(\n      \"clipboard-svg\",\n      selectedElements.length\n        ? selectedElements\n        : globalSceneState.getElements(),\n      this.state,\n      this.canvas!,\n      this.state,\n    );\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private onTapEnd = (event: TouchEvent) => {\n    event.preventDefault();\n    if (event.touches.length > 0) {\n      const { previousSelectedElementIds } = this.state;\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: previousSelectedElementIds,\n      });\n    }\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        //  thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await getClipboardContent(\n        this.state,\n        cursorX,\n        cursorY,\n        event,\n      );\n      if (data.error) {\n        alert(data.error);\n      } else if (data.elements) {\n        this.addElementsFromPasteOrLibrary(data.elements);\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPasteOrLibrary = (\n    clipboardElements: readonly ExcalidrawElement[],\n    clientX = cursorX,\n    clientY = cursorY,\n  ) => {\n    const [minX, minY, maxX, maxY] = getCommonBounds(clipboardElements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const newElements = clipboardElements.map((element) =>\n      duplicateElement(this.state.editingGroupId, groupIdMap, element, {\n        x: element.x + dx - minX,\n        y: element.y + dy - minY,\n      }),\n    );\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      ...newElements,\n    ]);\n    history.resumeRecording();\n    this.setState({\n      isLibraryOpen: false,\n      selectedElementIds: newElements.reduce((map, element) => {\n        map[element.id] = true;\n        return map;\n      }, {} as any),\n    });\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const element = newTextElement({\n      x: x,\n      y: y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      text: text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n      verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    });\n\n    globalSceneState.replaceAllElements([\n      ...globalSceneState.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement>) => {\n    // remove touch handler for context menu on touch devices\n    if (event.pointerType === \"touch\" && touchTimeout) {\n      clearTimeout(touchTimeout);\n      touchMoving = false;\n    }\n\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  openPortal = async () => {\n    window.history.pushState(\n      {},\n      \"Excalidraw\",\n      await generateCollaborationLink(),\n    );\n    this.initializeSocketClient({ showLoadingState: false });\n  };\n\n  closePortal = () => {\n    window.history.pushState({}, \"Excalidraw\", window.location.origin);\n    this.destroySocketClient();\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => ({\n      elementLocked: !prevState.elementLocked,\n      elementType: prevState.elementLocked\n        ? \"selection\"\n        : prevState.elementType,\n    }));\n  };\n\n  toggleZenMode = () => {\n    this.setState({\n      zenModeEnabled: !this.state.zenModeEnabled,\n    });\n  };\n\n  toggleGridMode = () => {\n    this.setState({\n      gridSize: this.state.gridSize ? null : GRID_SIZE,\n    });\n  };\n\n  private destroySocketClient = () => {\n    this.setState({\n      isCollaborating: false,\n      collaborators: new Map(),\n    });\n    this.portal.close();\n  };\n\n  private initializeSocketClient = async (opts: {\n    showLoadingState: boolean;\n  }) => {\n    if (this.portal.socket) {\n      return;\n    }\n    const roomMatch = getCollaborationLinkData(window.location.href);\n    if (roomMatch) {\n      const initialize = () => {\n        this.portal.socketInitialized = true;\n        clearTimeout(initializationTimer);\n        if (this.state.isLoading && !this.unmounted) {\n          this.setState({ isLoading: false });\n        }\n      };\n      // fallback in case you're not alone in the room but still don't receive\n      //  initial SCENE_UPDATE message\n      const initializationTimer = setTimeout(\n        initialize,\n        INITAL_SCENE_UPDATE_TIMEOUT,\n      );\n\n      const updateScene = (\n        decryptedData: SocketUpdateDataSource[SCENE.INIT | SCENE.UPDATE],\n        { scrollToContent = false }: { scrollToContent?: boolean } = {},\n      ) => {\n        const { elements: remoteElements } = decryptedData.payload;\n\n        if (scrollToContent) {\n          this.setState({\n            ...this.state,\n            ...calculateScrollCenter(\n              remoteElements.filter((element: { isDeleted: boolean }) => {\n                return !element.isDeleted;\n              }),\n              this.state,\n              this.canvas,\n            ),\n          });\n        }\n\n        // Perform reconciliation - in collaboration, if we encounter\n        // elements with more staler versions than ours, ignore them\n        // and keep ours.\n        if (\n          globalSceneState.getElementsIncludingDeleted() == null ||\n          globalSceneState.getElementsIncludingDeleted().length === 0\n        ) {\n          globalSceneState.replaceAllElements(remoteElements);\n        } else {\n          // create a map of ids so we don't have to iterate\n          // over the array more than once.\n          const localElementMap = getElementMap(\n            globalSceneState.getElementsIncludingDeleted(),\n          );\n\n          // Reconcile\n          const newElements = remoteElements\n            .reduce((elements, element) => {\n              // if the remote element references one that's currently\n              //  edited on local, skip it (it'll be added in the next\n              //  step)\n              if (\n                element.id === this.state.editingElement?.id ||\n                element.id === this.state.resizingElement?.id ||\n                element.id === this.state.draggingElement?.id\n              ) {\n                return elements;\n              }\n\n              if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version > element.version\n              ) {\n                elements.push(localElementMap[element.id]);\n                delete localElementMap[element.id];\n              } else if (\n                localElementMap.hasOwnProperty(element.id) &&\n                localElementMap[element.id].version === element.version &&\n                localElementMap[element.id].versionNonce !==\n                  element.versionNonce\n              ) {\n                // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n                if (\n                  localElementMap[element.id].versionNonce <\n                  element.versionNonce\n                ) {\n                  elements.push(localElementMap[element.id]);\n                } else {\n                  // it should be highly unlikely that the two versionNonces are the same. if we are\n                  // really worried about this, we can replace the versionNonce with the socket id.\n                  elements.push(element);\n                }\n                delete localElementMap[element.id];\n              } else {\n                elements.push(element);\n                delete localElementMap[element.id];\n              }\n\n              return elements;\n            }, [] as Mutable<typeof remoteElements>)\n            // add local elements that weren't deleted or on remote\n            .concat(...Object.values(localElementMap));\n\n          // Avoid broadcasting to the rest of the collaborators the scene\n          // we just received!\n          // Note: this needs to be set before replaceAllElements as it\n          // syncronously calls render.\n          this.lastBroadcastedOrReceivedSceneVersion = getDrawingVersion(\n            newElements,\n          );\n\n          globalSceneState.replaceAllElements(newElements);\n        }\n\n        // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n        // when we receive any messages from another peer. This UX can be pretty rough -- if you\n        // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n        // right now we think this is the right tradeoff.\n        history.clear();\n        if (!this.portal.socketInitialized) {\n          initialize();\n        }\n      };\n\n      const { default: socketIOClient }: any = await import(\n        /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n      );\n\n      this.portal.open(\n        socketIOClient(SOCKET_SERVER),\n        roomMatch[1],\n        roomMatch[2],\n      );\n\n      // All socket listeners are moving to Portal\n      this.portal.socket!.on(\n        \"client-broadcast\",\n        async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n          if (!this.portal.roomKey) {\n            return;\n          }\n          const decryptedData = await decryptAESGEM(\n            encryptedData,\n            this.portal.roomKey,\n            iv,\n          );\n\n          switch (decryptedData.type) {\n            case \"INVALID_RESPONSE\":\n              return;\n            case SCENE.INIT: {\n              if (!this.portal.socketInitialized) {\n                updateScene(decryptedData, { scrollToContent: true });\n              }\n              break;\n            }\n            case SCENE.UPDATE:\n              updateScene(decryptedData);\n              break;\n            case \"MOUSE_LOCATION\": {\n              const {\n                socketID,\n                pointerCoords,\n                button,\n                username,\n                selectedElementIds,\n              } = decryptedData.payload;\n              this.setState((state) => {\n                if (!state.collaborators.has(socketID)) {\n                  state.collaborators.set(socketID, {});\n                }\n                const user = state.collaborators.get(socketID)!;\n                user.pointer = pointerCoords;\n                user.button = button;\n                user.selectedElementIds = selectedElementIds;\n                user.username = username;\n                state.collaborators.set(socketID, user);\n                return state;\n              });\n              break;\n            }\n          }\n        },\n      );\n      this.portal.socket!.on(\"first-in-room\", () => {\n        if (this.portal.socket) {\n          this.portal.socket.off(\"first-in-room\");\n        }\n        initialize();\n      });\n\n      this.setState({\n        isCollaborating: true,\n        isLoading: opts.showLoadingState ? true : this.state.isLoading,\n      });\n    }\n  };\n\n  // Portal-only\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: typeof state.collaborators = new Map();\n      for (const socketID of sockets) {\n        if (state.collaborators.has(socketID)) {\n          collaborators.set(socketID, state.collaborators.get(socketID)!);\n        } else {\n          collaborators.set(socketID, {});\n        }\n      }\n      return {\n        ...state,\n        collaborators,\n      };\n    });\n  }\n\n  private broadcastMouseLocation = (payload: {\n    pointerCoords: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointerCoords\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.portal.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketID: this.portal.socket.id,\n          pointerCoords: payload.pointerCoords,\n          button: payload.button || \"up\",\n          selectedElementIds: this.state.selectedElementIds,\n          username: this.state.username,\n        },\n      };\n      return this.portal._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  // maybe should move to Portal\n  broadcastScene = (sceneType: SCENE.INIT | SCENE.UPDATE, syncAll: boolean) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    let syncableElements = getSyncableElements(\n      globalSceneState.getElementsIncludingDeleted(),\n    );\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n    this.lastBroadcastedOrReceivedSceneVersion = Math.max(\n      this.lastBroadcastedOrReceivedSceneVersion,\n      getDrawingVersion(globalSceneState.getElementsIncludingDeleted()),\n    );\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n    return this.portal._broadcastSocketData(data as SocketUpdateData);\n  };\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.x;\n      cursorY = event.y;\n    },\n  );\n\n  restoreUserName() {\n    const username = restoreUsernameFromLocalStorage();\n\n    if (username !== null) {\n      this.setState({\n        username,\n      });\n    }\n  }\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates((event: KeyboardEvent) => {\n    // ensures we don't prevent devTools select-element feature\n    if (event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === \"C\") {\n      return;\n    }\n\n    if (\n      (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n      // case: using arrows to move between buttons\n      (isArrowKey(event.key) && isInputLike(event.target))\n    ) {\n      return;\n    }\n\n    if (event.key === KEYS.QUESTION_MARK) {\n      this.setState({\n        showShortcutsDialog: true,\n      });\n    }\n\n    if (\n      !event[KEYS.CTRL_OR_CMD] &&\n      event.altKey &&\n      event.keyCode === KEYS.Z_KEY_CODE\n    ) {\n      this.toggleZenMode();\n    }\n\n    if (event[KEYS.CTRL_OR_CMD] && event.keyCode === KEYS.GRID_KEY_CODE) {\n      this.toggleGridMode();\n    }\n\n    if (event.code === \"KeyC\" && event.altKey && event.shiftKey) {\n      this.copyToClipboardAsPng();\n      event.preventDefault();\n      return;\n    }\n\n    if (this.actionManager.handleKeyDown(event)) {\n      return;\n    }\n\n    if (event.code === \"Digit9\") {\n      this.setState({ isLibraryOpen: !this.state.isLibraryOpen });\n    }\n\n    const shape = findShapeByKey(event.key);\n\n    if (isArrowKey(event.key)) {\n      const step =\n        (this.state.gridSize &&\n          (event.shiftKey ? ELEMENT_TRANSLATE_AMOUNT : this.state.gridSize)) ||\n        (event.shiftKey\n          ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n          : ELEMENT_TRANSLATE_AMOUNT);\n      globalSceneState.replaceAllElements(\n        globalSceneState.getElementsIncludingDeleted().map((el) => {\n          if (this.state.selectedElementIds[el.id]) {\n            const update: { x?: number; y?: number } = {};\n            if (event.key === KEYS.ARROW_LEFT) {\n              update.x = el.x - step;\n            } else if (event.key === KEYS.ARROW_RIGHT) {\n              update.x = el.x + step;\n            } else if (event.key === KEYS.ARROW_UP) {\n              update.y = el.y - step;\n            } else if (event.key === KEYS.ARROW_DOWN) {\n              update.y = el.y + step;\n            }\n            return newElementWith(el, update);\n          }\n          return el;\n        }),\n      );\n      event.preventDefault();\n    } else if (event.key === KEYS.ENTER) {\n      const selectedElements = getSelectedElements(\n        globalSceneState.getElements(),\n        this.state,\n      );\n\n      if (\n        selectedElements.length === 1 &&\n        isLinearElement(selectedElements[0])\n      ) {\n        if (\n          !this.state.editingLinearElement ||\n          this.state.editingLinearElement.elementId !== selectedElements[0].id\n        ) {\n          history.resumeRecording();\n          this.setState({\n            editingLinearElement: new LinearElementEditor(selectedElements[0]),\n          });\n        }\n      } else if (\n        selectedElements.length === 1 &&\n        !isLinearElement(selectedElements[0])\n      ) {\n        const selectedElement = selectedElements[0];\n        this.startTextEditing({\n          sceneX: selectedElement.x + selectedElement.width / 2,\n          sceneY: selectedElement.y + selectedElement.height / 2,\n        });\n        event.preventDefault();\n        return;\n      }\n    } else if (\n      !event.ctrlKey &&\n      !event.altKey &&\n      !event.metaKey &&\n      this.state.draggingElement === null\n    ) {\n      if (shapesShortcutKeys.includes(event.key.toLowerCase())) {\n        this.selectShapeTool(shape);\n      } else if (event.key === \"q\") {\n        this.toggleLock();\n      }\n    }\n    if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n      isHoldingSpace = true;\n      document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    }\n  });\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.elementType === \"selection\") {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      selectedElementIds: {},\n    });\n    gesture.initialScale = this.state.zoom;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      zoom: getNormalizedZoom(gesture.initialScale! * event.scale),\n    });\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    const { previousSelectedElementIds } = this.state;\n    this.setState({\n      previousSelectedElementIds: {},\n      selectedElementIds: previousSelectedElementIds,\n    });\n    gesture.initialScale = null;\n  });\n\n  private setElements = (elements: readonly ExcalidrawElement[]) => {\n    globalSceneState.replaceAllElements(elements);\n  };\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      isExistingElement = false,\n    }: {\n      isExistingElement?: boolean;\n    },\n  ) {\n    const resetSelection = () => {\n      this.setState({\n        draggingElement: null,\n        editingElement: null,\n      });\n    };\n\n    const updateElement = (text: string) => {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id && isTextElement(_element)) {\n            return updateTextElement(_element, {\n              text,\n              isDeleted: !text.trim(),\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      zoom: this.state.zoom,\n      getViewportCoords: (x, y) => {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: x, sceneY: y },\n          this.state,\n          this.canvas,\n          window.devicePixelRatio,\n        );\n        return [viewportX, viewportY];\n      },\n      onChange: withBatchedUpdates((text) => {\n        updateElement(text);\n      }),\n      onSubmit: withBatchedUpdates((text) => {\n        updateElement(text);\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [element.id]: true,\n          },\n        }));\n        if (this.state.elementLocked) {\n          setCursorForShape(this.state.elementType);\n        }\n        history.resumeRecording();\n        resetSelection();\n      }),\n      onCancel: withBatchedUpdates(() => {\n        updateElement(\"\");\n        if (isExistingElement) {\n          history.resumeRecording();\n        }\n        resetSelection();\n      }),\n    });\n    // deselect all other elements when inserting text\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n\n    // do an initial update to re-initialize element position since we were\n    //  modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private getTextElementAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawTextElement> | null {\n    const element = getElementAtPosition(\n      globalSceneState.getElements(),\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n\n    if (element && isTextElement(element) && !element.isDeleted) {\n      return element;\n    }\n    return null;\n  }\n\n  private startTextEditing = ({\n    sceneX,\n    sceneY,\n    insertAtParentCenter = true,\n  }: {\n    /** X position to insert text at */\n    sceneX: number;\n    /** Y position to insert text at */\n    sceneY: number;\n    /** whether to attempt to insert at element center if applicable */\n    insertAtParentCenter?: boolean;\n  }) => {\n    const existingTextElement = this.getTextElementAtPosition(sceneX, sceneY);\n\n    const parentCenterPosition =\n      insertAtParentCenter &&\n      this.getTextWysiwygSnappedToCenterPosition(\n        sceneX,\n        sceneY,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n    const element = existingTextElement\n      ? existingTextElement\n      : newTextElement({\n          x: parentCenterPosition\n            ? parentCenterPosition.elementCenterX\n            : sceneX,\n          y: parentCenterPosition\n            ? parentCenterPosition.elementCenterY\n            : sceneY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n          text: \"\",\n          fontSize: this.state.currentItemFontSize,\n          fontFamily: this.state.currentItemFontFamily,\n          textAlign: parentCenterPosition\n            ? \"center\"\n            : this.state.currentItemTextAlign,\n          verticalAlign: parentCenterPosition\n            ? \"middle\"\n            : DEFAULT_VERTICAL_ALIGN,\n        });\n\n    this.setState({ editingElement: element });\n\n    if (existingTextElement) {\n      // if text element is no longer centered to a container, reset\n      //  verticalAlign to default because it's currently internal-only\n      if (!parentCenterPosition || element.textAlign !== \"center\") {\n        mutateElement(element, { verticalAlign: DEFAULT_VERTICAL_ALIGN });\n      }\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      // case: creating new text not centered to parent elemenent → offset Y\n      //  so that the text is centered to cursor position\n      if (!parentCenterPosition) {\n        mutateElement(element, {\n          y: element.y - element.baseline / 2,\n        });\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      isExistingElement: !!existingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    //  text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      globalSceneState.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(selectedElements[0]),\n        });\n      }\n      return;\n    }\n\n    resetCursor();\n\n    const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const elements = globalSceneState.getElements();\n      const hitElement = getElementAtPosition(\n        elements,\n        this.state,\n        sceneX,\n        sceneY,\n        this.state.zoom,\n      );\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor();\n\n    this.startTextEditing({\n      sceneX,\n      sceneY,\n      insertAtParentCenter: !event.altKey,\n    });\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    if (gesture.pointers.size === 2) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter!.x;\n      const deltaY = center.y - gesture.lastCenter!.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance!;\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX + deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY + deltaY / this.state.zoom),\n        zoom: getNormalizedZoom(gesture.initialScale! * scaleFactor),\n        shouldCacheIgnoreZoom: true,\n      });\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n    const isPointerOverScrollBars = isOverScrollBars(\n      currentScrollBars,\n      event.clientX,\n      event.clientY,\n    );\n    const isOverScrollBar = isPointerOverScrollBars.isOverEither;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor();\n      } else {\n        setCursorForShape(this.state.elementType);\n      }\n    }\n\n    const { x: scenePointerX, y: scenePointerY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      this.state.editingLinearElement.draggingElementPointIndex === null\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        //  threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          // in this branch, we're inside the commit zone, and no uncommitted\n          //  point exists. Thus do nothing (don't add/remove points).\n        }\n      } else {\n        // cursor moved inside commit zone, and there's uncommitted point,\n        //  thus remove it\n        if (\n          points.length > 2 &&\n          lastCommittedPoint &&\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastCommittedPoint[0],\n            lastCommittedPoint[1],\n          ) < LINE_CONFIRM_THRESHOLD\n        ) {\n          document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          mutateElement(multiElement, {\n            points: points.slice(0, -1),\n          });\n        } else {\n          if (isPathALoop(points)) {\n            document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n          }\n          // update last uncommitted point\n          mutateElement(multiElement, {\n            points: [\n              ...points.slice(0, -1),\n              [scenePointerX - rx, scenePointerY - ry],\n            ],\n          });\n        }\n      }\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = globalSceneState.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithResizeHandler = getElementWithResizeHandler(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (elementWithResizeHandler && elementWithResizeHandler.resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement(\n          elementWithResizeHandler,\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      const resizeHandle = getResizeHandlerFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (resizeHandle) {\n        document.documentElement.style.cursor = getCursorForResizingElement({\n          resizeHandle,\n        });\n        return;\n      }\n    }\n    const hitElement = getElementAtPosition(\n      elements,\n      this.state,\n      scenePointerX,\n      scenePointerY,\n      this.state.zoom,\n    );\n    if (this.state.elementType === \"text\") {\n      document.documentElement.style.cursor = isTextElement(hitElement)\n        ? CURSOR_TYPE.TEXT\n        : CURSOR_TYPE.CROSSHAIR;\n    } else {\n      document.documentElement.style.cursor =\n        hitElement && !isOverScrollBar ? \"move\" : \"\";\n    }\n  };\n\n  // set touch moving for mobile context menu\n  private handleTouchMove = (event: React.TouchEvent<HTMLCanvasElement>) => {\n    touchMoving = true;\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.persist();\n\n    this.maybeOpenContextMenuAfterPointerDownOnTouchDevices(event);\n    this.maybeCleanupAfterMissingPointerUp(event);\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    if (this.handleCanvasPanUsingWheelOrSpaceDrag(event)) {\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    this.updateGestureOnPointerDown(event);\n\n    // fixes pointermove causing selection of UI texts #32\n    event.preventDefault();\n    // Preventing the event above disables default behavior\n    //  of defocusing potentially focused element, which is what we\n    //  want when clicking inside the canvas.\n    if (document.activeElement instanceof HTMLElement) {\n      document.activeElement.blur();\n    }\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // State for the duration of a pointer interaction, which starts with a\n    // pointerDown event, ends with a pointerUp event (or another pointerDown)\n    const pointerDownState = this.initialPointerDownState(event);\n\n    if (this.handleDraggingScrollBar(event, pointerDownState)) {\n      return;\n    }\n\n    this.clearSelectionIfNotUsingSelection();\n\n    if (this.handleSelectionOnPointerDown(event, pointerDownState)) {\n      return;\n    }\n\n    if (this.state.elementType === \"text\") {\n      this.handleTextOnPointerDown(event, pointerDownState);\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"draw\" ||\n      this.state.elementType === \"line\"\n    ) {\n      this.handleLinearElementOnPointerDown(\n        event,\n        this.state.elementType,\n        pointerDownState,\n      );\n    } else {\n      this.createGenericElementOnPointerDown(\n        this.state.elementType,\n        pointerDownState,\n      );\n    }\n\n    const onPointerMove = this.onPointerMoveFromPointerDownHandler(\n      pointerDownState,\n    );\n\n    const onPointerUp = this.onPointerUpFromPointerDownHandler(\n      pointerDownState,\n    );\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n    pointerDownState.eventListeners.onMove = onPointerMove;\n    pointerDownState.eventListeners.onUp = onPointerUp;\n  };\n\n  private maybeOpenContextMenuAfterPointerDownOnTouchDevices = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void => {\n    // deal with opening context menu on touch devices\n    if (event.pointerType === \"touch\") {\n      touchMoving = false;\n\n      // open the context menu with the first touch's clientX and clientY\n      // if the touch is not moving\n      touchTimeout = window.setTimeout(() => {\n        if (!touchMoving) {\n          this.openContextMenu({\n            clientX: event.clientX,\n            clientY: event.clientY,\n          });\n        }\n      }, TOUCH_CTX_MENU_TIMEOUT);\n    }\n  };\n\n  private maybeCleanupAfterMissingPointerUp(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n  }\n\n  // Returns whether the event is a panning\n  private handleCanvasPanUsingWheelOrSpaceDrag = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): boolean => {\n    if (\n      !(\n        gesture.pointers.size === 0 &&\n        (event.button === POINTER_BUTTON.WHEEL ||\n          (event.button === POINTER_BUTTON.MAIN && isHoldingSpace))\n      )\n    ) {\n      return false;\n    }\n    isPanning = true;\n\n    let nextPastePrevented = false;\n    const isLinux = /Linux/.test(window.navigator.platform);\n\n    document.documentElement.style.cursor = CURSOR_TYPE.GRABBING;\n    let { clientX: lastX, clientY: lastY } = event;\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      const deltaX = lastX - event.clientX;\n      const deltaY = lastY - event.clientY;\n      lastX = event.clientX;\n      lastY = event.clientY;\n\n      /*\n       * Prevent paste event if we move while middle clicking on Linux.\n       * See issue #1383.\n       */\n      if (\n        isLinux &&\n        !nextPastePrevented &&\n        (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n      ) {\n        nextPastePrevented = true;\n\n        /* Prevent the next paste event */\n        const preventNextPaste = (event: ClipboardEvent) => {\n          document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n          event.stopPropagation();\n        };\n\n        /*\n         * Reenable next paste in case of disabled middle click paste for\n         * any reason:\n         * - rigth click paste\n         * - empty clipboard\n         */\n        const enableNextPaste = () => {\n          setTimeout(() => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n          }, 100);\n        };\n\n        document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n        window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n      }\n\n      this.setState({\n        scrollX: normalizeScroll(this.state.scrollX - deltaX / this.state.zoom),\n        scrollY: normalizeScroll(this.state.scrollY - deltaY / this.state.zoom),\n      });\n    });\n    const teardown = withBatchedUpdates(\n      (lastPointerUp = () => {\n        lastPointerUp = null;\n        isPanning = false;\n        if (!isHoldingSpace) {\n          setCursorForShape(this.state.elementType);\n        }\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, teardown);\n        window.removeEventListener(EVENT.BLUR, teardown);\n      }),\n    );\n    window.addEventListener(EVENT.BLUR, teardown);\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.POINTER_UP, teardown);\n    return true;\n  };\n\n  private updateGestureOnPointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n  }\n\n  private initialPointerDownState(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): PointerDownState {\n    const origin = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    return {\n      origin,\n      originInGrid: tupleToCoors(\n        getGridPoint(origin.x, origin.y, this.state.gridSize),\n      ),\n      scrollbars: isOverScrollBars(\n        currentScrollBars,\n        event.clientX,\n        event.clientY,\n      ),\n      // we need to duplicate because we'll be updating this state\n      lastCoords: { ...origin },\n      resize: {\n        handle: false as ReturnType<typeof resizeTest>,\n        isResizing: false,\n        offset: { x: 0, y: 0 },\n        arrowDirection: \"origin\",\n      },\n      hit: {\n        element: null,\n        wasAddedToSelection: false,\n        hasBeenDuplicated: false,\n      },\n      drag: {\n        hasOccurred: false,\n        offset: null,\n      },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n      },\n    };\n  }\n\n  // Returns whether the event is a dragging a scrollbar\n  private handleDraggingScrollBar(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (\n      !(pointerDownState.scrollbars.isOverEither && !this.state.multiElement)\n    ) {\n      return false;\n    }\n    isDraggingScrollBar = true;\n    pointerDownState.lastCoords.x = event.clientX;\n    pointerDownState.lastCoords.y = event.clientY;\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (pointerDownState.scrollbars.isOverHorizontal) {\n        const x = event.clientX;\n        const dx = x - pointerDownState.lastCoords.x;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        pointerDownState.lastCoords.x = x;\n        return;\n      }\n\n      if (pointerDownState.scrollbars.isOverVertical) {\n        const y = event.clientY;\n        const dy = y - pointerDownState.lastCoords.y;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        pointerDownState.lastCoords.y = y;\n      }\n    });\n\n    const onPointerUp = withBatchedUpdates(() => {\n      isDraggingScrollBar = false;\n      setCursorForShape(this.state.elementType);\n      lastPointerUp = null;\n      this.setState({\n        cursorButton: \"up\",\n      });\n      this.savePointer(event.clientX, event.clientY, \"up\");\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n    return true;\n  }\n\n  private clearSelectionIfNotUsingSelection = (): void => {\n    if (this.state.elementType !== \"selection\") {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n  };\n\n  // Returns whether the pointer event has been completely handled\n  private handleSelectionOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean => {\n    if (this.state.elementType === \"selection\") {\n      const elements = globalSceneState.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithResizeHandler = getElementWithResizeHandler(\n          elements,\n          this.state,\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithResizeHandler != null) {\n          this.setState({\n            resizingElement: elementWithResizeHandler.element,\n          });\n          pointerDownState.resize.handle =\n            elementWithResizeHandler.resizeHandle;\n        }\n      } else if (selectedElements.length > 1) {\n        pointerDownState.resize.handle = getResizeHandlerFromCoords(\n          getCommonBounds(selectedElements),\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n        );\n      }\n      if (pointerDownState.resize.handle) {\n        document.documentElement.style.cursor = getCursorForResizingElement({\n          resizeHandle: pointerDownState.resize.handle,\n        });\n        pointerDownState.resize.isResizing = true;\n        pointerDownState.resize.offset = tupleToCoors(\n          getResizeOffsetXY(\n            pointerDownState.resize.handle,\n            selectedElements,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          pointerDownState.resize.arrowDirection = getResizeArrowDirection(\n            pointerDownState.resize.handle,\n            selectedElements[0],\n          );\n        }\n      } else {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            history,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          );\n          if (ret.hitElement) {\n            pointerDownState.hit.element = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return true;\n          }\n        }\n\n        // hitElement may already be set above, so check first\n        pointerDownState.hit.element =\n          pointerDownState.hit.element ??\n          getElementAtPosition(\n            elements,\n            this.state,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n            this.state.zoom,\n          );\n\n        this.maybeClearSelectionWhenHittingElement(\n          event,\n          pointerDownState.hit.element,\n        );\n\n        // If we click on something\n        const hitElement = pointerDownState.hit.element;\n        if (hitElement != null) {\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, treat all selections outside of the group\n            // as exiting editing mode.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n              return true;\n            }\n            this.setState((prevState) => {\n              return selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    ...prevState.selectedElementIds,\n                    [hitElement!.id]: true,\n                  },\n                },\n                globalSceneState.getElements(),\n              );\n            });\n            // TODO: this is strange...\n            globalSceneState.replaceAllElements(\n              globalSceneState.getElementsIncludingDeleted(),\n            );\n            pointerDownState.hit.wasAddedToSelection = true;\n          }\n        }\n\n        const { selectedElementIds } = this.state;\n        this.setState({\n          previousSelectedElementIds: selectedElementIds,\n        });\n      }\n    }\n    return false;\n  };\n\n  private handleTextOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): void => {\n    // if we're currently still editing text, clicking outside\n    //  should only finalize it, not create another (irrespective\n    //  of state.elementLocked)\n    if (this.state.editingElement?.type === \"text\") {\n      return;\n    }\n\n    this.startTextEditing({\n      sceneX: pointerDownState.origin.x,\n      sceneY: pointerDownState.origin.y,\n      insertAtParentCenter: !event.altKey,\n    });\n\n    resetCursor();\n    if (!this.state.elementLocked) {\n      this.setState({\n        elementType: \"selection\",\n      });\n    }\n  };\n\n  private handleLinearElementOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    elementType: \"draw\" | \"line\" | \"arrow\",\n    pointerDownState: PointerDownState,\n  ): void => {\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n\n      // finalize if completing a loop\n      if (multiElement.type === \"line\" && isPathALoop(multiElement.points)) {\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n      // clicking inside commit zone → finalize arrow\n      if (\n        multiElement.points.length > 1 &&\n        lastCommittedPoint &&\n        distance2d(\n          pointerDownState.origin.x - rx,\n          pointerDownState.origin.y - ry,\n          lastCommittedPoint[0],\n          lastCommittedPoint[1],\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [multiElement.id]: true,\n        },\n      }));\n      // clicking outside commit zone → update reference for last committed\n      //  point\n      mutateElement(multiElement, {\n        lastCommittedPoint: multiElement.points[multiElement.points.length - 1],\n      });\n      document.documentElement.style.cursor = CURSOR_TYPE.POINTER;\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        elementType === \"draw\" ? null : this.state.gridSize,\n      );\n      const element = newLinearElement({\n        type: elementType,\n        x: gridX,\n        y: gridY,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n      });\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [element.id]: false,\n        },\n      }));\n      mutateElement(element, {\n        points: [...element.points, [0, 0]],\n      });\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        draggingElement: element,\n        editingElement: element,\n      });\n    }\n  };\n\n  private createGenericElementOnPointerDown = (\n    elementType: ExcalidrawGenericElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      this.state.gridSize,\n    );\n    const element = newElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n    });\n\n    if (element.type === \"selection\") {\n      this.setState({\n        selectionElement: element,\n        draggingElement: element,\n      });\n    } else {\n      globalSceneState.replaceAllElements([\n        ...globalSceneState.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        multiElement: null,\n        draggingElement: element,\n        editingElement: element,\n      });\n    }\n  };\n\n  private onPointerMoveFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((event: PointerEvent) => {\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (pointerDownState.drag.offset === null) {\n        pointerDownState.drag.offset = tupleToCoors(\n          getDragOffsetXY(\n            getSelectedElements(globalSceneState.getElements(), this.state),\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n      }\n\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (pointerDownState.scrollbars.isOverHorizontal) {\n        const x = event.clientX;\n        const dx = x - pointerDownState.lastCoords.x;\n        this.setState({\n          scrollX: normalizeScroll(this.state.scrollX - dx / this.state.zoom),\n        });\n        pointerDownState.lastCoords.x = x;\n        return;\n      }\n\n      if (pointerDownState.scrollbars.isOverVertical) {\n        const y = event.clientY;\n        const dy = y - pointerDownState.lastCoords.y;\n        this.setState({\n          scrollY: normalizeScroll(this.state.scrollY - dy / this.state.zoom),\n        });\n        pointerDownState.lastCoords.y = y;\n        return;\n      }\n\n      const { x, y } = viewportCoordsToSceneCoords(\n        event,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n      const [gridX, gridY] = getGridPoint(x, y, this.state.gridSize);\n\n      // for arrows/lines, don't start dragging until a given threshold\n      //  to ensure we don't create a 2-point arrow by mistake when\n      //  user clicks mouse in a way that it moves a tiny bit (thus\n      //  triggering pointermove)\n      if (\n        !pointerDownState.drag.hasOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (\n          distance2d(\n            x,\n            y,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ) < DRAGGING_THRESHOLD\n        ) {\n          return;\n        }\n      }\n\n      if (pointerDownState.resize.isResizing) {\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        const resizeHandle = pointerDownState.resize.handle;\n        this.setState({\n          // TODO: rename this state field to \"isScaling\" to distinguish\n          // it from the generic \"isResizing\" which includes scaling and\n          // rotating\n          isResizing: resizeHandle && resizeHandle !== \"rotation\",\n          isRotating: resizeHandle === \"rotation\",\n        });\n        const [resizeX, resizeY] = getGridPoint(\n          x - pointerDownState.resize.offset.x,\n          y - pointerDownState.resize.offset.y,\n          this.state.gridSize,\n        );\n        if (\n          resizeElements(\n            resizeHandle,\n            (newResizeHandle) => {\n              pointerDownState.resize.handle = newResizeHandle;\n            },\n            selectedElements,\n            pointerDownState.resize.arrowDirection,\n            getRotateWithDiscreteAngleKey(event),\n            getResizeWithSidesSameLengthKey(event),\n            getResizeCenterPointKey(event),\n            resizeX,\n            resizeY,\n          )\n        ) {\n          return;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          x,\n          y,\n          pointerDownState.lastCoords.x,\n          pointerDownState.lastCoords.y,\n        );\n\n        if (didDrag) {\n          pointerDownState.lastCoords.x = x;\n          pointerDownState.lastCoords.y = y;\n          return;\n        }\n      }\n\n      const hitElement = pointerDownState.hit.element;\n      if (hitElement && this.state.selectedElementIds[hitElement.id]) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        pointerDownState.drag.hasOccurred = true;\n        const selectedElements = getSelectedElements(\n          globalSceneState.getElements(),\n          this.state,\n        );\n        if (selectedElements.length > 0) {\n          const [dragX, dragY] = getGridPoint(\n            x - pointerDownState.drag.offset.x,\n            y - pointerDownState.drag.offset.y,\n            this.state.gridSize,\n          );\n          dragSelectedElements(selectedElements, dragX, dragY);\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !pointerDownState.hit.hasBeenDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            pointerDownState.hit.hasBeenDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            for (const element of globalSceneState.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                //  updated yet by the time this mousemove event is fired\n                (element.id === hitElement.id &&\n                  pointerDownState.hit.wasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                const [originDragX, originDragY] = getGridPoint(\n                  pointerDownState.origin.x - pointerDownState.drag.offset.x,\n                  pointerDownState.origin.y - pointerDownState.drag.offset.y,\n                  this.state.gridSize,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originDragX - dragX),\n                  y: duplicatedElement.y + (originDragY - dragY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            globalSceneState.replaceAllElements([\n              ...nextElements,\n              ...elementsToAppend,\n            ]);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      if (isLinearElement(draggingElement)) {\n        pointerDownState.drag.hasOccurred = true;\n        const points = draggingElement.points;\n        let dx: number;\n        let dy: number;\n        if (draggingElement.type === \"draw\") {\n          dx = x - draggingElement.x;\n          dy = y - draggingElement.y;\n        } else {\n          dx = gridX - draggingElement.x;\n          dy = gridY - draggingElement.y;\n        }\n\n        if (getRotateWithDiscreteAngleKey(event) && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          if (draggingElement.type === \"draw\") {\n            mutateElement(draggingElement, {\n              points: simplify([...(points as Point[]), [dx, dy]], 0.7),\n            });\n          } else {\n            mutateElement(draggingElement, {\n              points: [...points.slice(0, -1), [dx, dy]],\n            });\n          }\n        }\n      } else if (draggingElement.type === \"selection\") {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          x,\n          y,\n          distance(pointerDownState.origin.x, x),\n          distance(pointerDownState.origin.y, y),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      } else {\n        dragNewElement(\n          draggingElement,\n          this.state.elementType,\n          pointerDownState.originInGrid.x,\n          pointerDownState.originInGrid.y,\n          gridX,\n          gridY,\n          distance(pointerDownState.originInGrid.x, gridX),\n          distance(pointerDownState.originInGrid.y, gridY),\n          getResizeWithSidesSameLengthKey(event),\n          getResizeCenterPointKey(event),\n        );\n      }\n\n      if (this.state.elementType === \"selection\") {\n        const elements = globalSceneState.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          this.setState({\n            selectedElementIds: {},\n            selectedGroupIds: {},\n            editingGroupId: null,\n          });\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                ...elementsWithinSelection.reduce((map, element) => {\n                  map[element.id] = true;\n                  return map;\n                }, {} as any),\n              },\n            },\n            globalSceneState.getElements(),\n          ),\n        );\n      }\n    });\n  }\n\n  private onPointerUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        // text elements are reset on finalize, and resetting on pointerup\n        //  may cause issues with double taps\n        editingElement:\n          multiElement || isTextElement(this.state.editingElement)\n            ? this.state.editingElement\n            : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // if moving start/end point towards start/end point within threshold,\n      //  close the loop\n      if (this.state.editingLinearElement) {\n        const editingLinearElement = LinearElementEditor.handlePointerUp(\n          this.state.editingLinearElement,\n        );\n        if (editingLinearElement !== this.state.editingLinearElement) {\n          this.setState({ editingLinearElement });\n        }\n      }\n\n      lastPointerUp = null;\n\n      window.removeEventListener(\n        EVENT.POINTER_MOVE,\n        pointerDownState.eventListeners.onMove!,\n      );\n      window.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerDownState.eventListeners.onUp!,\n      );\n\n      if (draggingElement?.type === \"draw\") {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          history.resumeRecording();\n        }\n        if (\n          !pointerDownState.drag.hasOccurred &&\n          draggingElement &&\n          !multiElement\n        ) {\n          const { x, y } = viewportCoordsToSceneCoords(\n            childEvent,\n            this.state,\n            this.canvas,\n            window.devicePixelRatio,\n          );\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [x - draggingElement.x, y - draggingElement.y],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (pointerDownState.drag.hasOccurred && !multiElement) {\n          if (!elementLocked) {\n            resetCursor();\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        globalSceneState.replaceAllElements(\n          globalSceneState.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        globalSceneState.replaceAllElements(\n          globalSceneState\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // If click occurred on already selected element\n      // it is needed to remove selection from other elements\n      // or if SHIFT or META key pressed remove selection\n      // from hitted element\n      //\n      // If click occurred and elements were dragged or some element\n      // was added to selection (on pointerdown phase) we need to keep\n      // selection unchanged\n      const hitElement = pointerDownState.hit.element;\n      if (\n        getSelectedGroupIds(this.state).length === 0 &&\n        hitElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !pointerDownState.hit.wasAddedToSelection\n      ) {\n        if (childEvent.shiftKey) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [hitElement!.id]: false,\n            },\n          }));\n        } else {\n          this.setState((_prevState) => ({\n            selectedElementIds: { [hitElement!.id]: true },\n          }));\n        }\n      }\n\n      if (draggingElement === null) {\n        // if no element is clicked, clear the selection and redraw\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n        return;\n      }\n\n      if (!elementLocked) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(globalSceneState.getElements(), this.state)\n      ) {\n        history.resumeRecording();\n      }\n\n      if (!elementLocked) {\n        resetCursor();\n        this.setState({\n          draggingElement: null,\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n        });\n      }\n    });\n  }\n\n  private maybeClearSelectionWhenHittingElement(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    hitElement: ExcalidrawElement | null,\n  ): void {\n    const isHittingASelectedElement =\n      hitElement != null && this.state.selectedElementIds[hitElement.id];\n\n    // clear selection if shift is not clicked\n    if (isHittingASelectedElement || event.shiftKey) {\n      return;\n    }\n    this.setState((prevState) => ({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      // Continue editing the same group if the user selected a different\n      // element from it\n      editingGroupId:\n        prevState.editingGroupId &&\n        hitElement != null &&\n        isElementInGroup(hitElement, prevState.editingGroupId)\n          ? prevState.editingGroupId\n          : null,\n    }));\n    const { selectedElementIds } = this.state;\n    this.setState({\n      selectedElementIds: {},\n      previousSelectedElementIds: selectedElementIds,\n    });\n  }\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas.addEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas?.removeEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    }\n  };\n\n  private handleCanvasOnDrop = (event: React.DragEvent<HTMLCanvasElement>) => {\n    const libraryShapes = event.dataTransfer.getData(\n      \"application/vnd.excalidraw.json\",\n    );\n    if (libraryShapes !== \"\") {\n      this.addElementsFromPasteOrLibrary(\n        JSON.parse(libraryShapes),\n        event.clientX,\n        event.clientY,\n      );\n      return;\n    }\n\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === \"application/json\" ||\n      file?.name.endsWith(\".excalidraw\")\n    ) {\n      this.setState({ isLoading: true });\n      loadFromBlob(file)\n        .then(({ elements, appState }) =>\n          this.syncActionResult({\n            elements,\n            appState: {\n              ...(appState || this.state),\n              isLoading: false,\n            },\n            commitToHistory: false,\n          }),\n        )\n        .catch((error) => {\n          this.setState({ isLoading: false, errorMessage: error.message });\n        });\n    } else {\n      this.setState({\n        isLoading: false,\n        errorMessage: t(\"alerts.couldNotLoadInvalidFile\"),\n      });\n    }\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n    this.openContextMenu(event);\n  };\n\n  private openContextMenu = ({\n    clientX,\n    clientY,\n  }: {\n    clientX: number;\n    clientY: number;\n  }) => {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    const elements = globalSceneState.getElements();\n    const element = getElementAtPosition(\n      elements,\n      this.state,\n      x,\n      y,\n      this.state.zoom,\n    );\n    if (!element) {\n      ContextMenu.push({\n        options: [\n          navigator.clipboard && {\n            label: t(\"labels.paste\"),\n            action: () => this.pasteFromClipboard(null),\n          },\n          probablySupportsClipboardBlob &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsPng\"),\n              action: this.copyToClipboardAsPng,\n            },\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 && {\n              label: t(\"labels.copyAsSvg\"),\n              action: this.copyToClipboardAsSvg,\n            },\n          ...this.actionManager.getContextMenuItems((action) =>\n            CANVAS_ONLY_ACTIONS.includes(action.name),\n          ),\n          {\n            label: t(\"labels.toggleGridMode\"),\n            action: this.toggleGridMode,\n          },\n        ],\n        top: clientY,\n        left: clientX,\n      });\n      return;\n    }\n\n    if (!this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } });\n    }\n\n    ContextMenu.push({\n      options: [\n        navigator.clipboard && {\n          label: t(\"labels.copy\"),\n          action: this.copyAll,\n        },\n        navigator.clipboard && {\n          label: t(\"labels.paste\"),\n          action: () => this.pasteFromClipboard(null),\n        },\n        probablySupportsClipboardBlob && {\n          label: t(\"labels.copyAsPng\"),\n          action: this.copyToClipboardAsPng,\n        },\n        probablySupportsClipboardWriteText && {\n          label: t(\"labels.copyAsSvg\"),\n          action: this.copyToClipboardAsSvg,\n        },\n        ...this.actionManager.getContextMenuItems(\n          (action) => !CANVAS_ONLY_ACTIONS.includes(action.name),\n        ),\n      ],\n      top: clientY,\n      left: clientX,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n    const { deltaX, deltaY } = event;\n    const { selectedElementIds, previousSelectedElementIds } = this.state;\n\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      if (Object.keys(previousSelectedElementIds).length !== 0) {\n        setTimeout(() => {\n          this.setState({\n            selectedElementIds: previousSelectedElementIds,\n            previousSelectedElementIds: {},\n          });\n        }, 1000);\n      }\n      this.setState(({ zoom }) => ({\n        zoom: getNormalizedZoom(zoom - delta / 100),\n        selectedElementIds: {},\n        previousSelectedElementIds:\n          Object.keys(selectedElementIds).length !== 0\n            ? selectedElementIds\n            : previousSelectedElementIds,\n      }));\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: normalizeScroll(scrollX - (deltaY || deltaX) / zoom),\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: normalizeScroll(scrollX - deltaX / zoom),\n      scrollY: normalizeScroll(scrollY - deltaY / zoom),\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    state: {\n      scrollX: FlooredNumber;\n      scrollY: FlooredNumber;\n      zoom: number;\n    },\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      globalSceneState\n        .getElementsIncludingDeleted()\n        .filter((element) => !isTextElement(element)),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          state,\n          canvas,\n          scale,\n        );\n        return { viewportX, viewportY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointerCoords = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n      this.canvas,\n      window.devicePixelRatio,\n    );\n\n    if (isNaN(pointerCoords.x) || isNaN(pointerCoords.y)) {\n      // sometimes the pointer goes off screen\n      return;\n    }\n    this.portal.socket &&\n      // do not broadcast when more than 1 pointer since that shows flickering on the other side\n      gesture.pointers.size < 2 &&\n      this.broadcastMouseLocation({\n        pointerCoords,\n        button,\n      });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    this.setState({ shouldCacheIgnoreZoom: false });\n  }, 300);\n\n  private saveDebounced = debounce(() => {\n    saveToLocalStorage(\n      globalSceneState.getElementsIncludingDeleted(),\n      this.state,\n    );\n      if(window.isCloudConnected && window.activeDocIndex>0){\n         window.saveActiveDoc();\n      }\n      if(window.firstReload){\n        window.firstReload = false;\n        let flurb = globalSceneState.getElements().filter(e => {return e.type == \"text\" && e.text.indexOf('$$$$') != -1})\n        if (flurb.length = 1){\n          let identityElem = flurb[0];\n          let identityTextElem:NonDeleted<ExcalidrawTextElement> = identityElem as NonDeleted<ExcalidrawTextElement>\n          let idText = identityTextElem.text.replace(\"$$$$\",\"\");\n          let id = Number.parseInt(idText.trim());\n          window.loadDoc(id);\n        }\n      }\n\n  }, 300);\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      history: SceneHistory;\n      app: InstanceType<typeof App>;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = {} as Window[\"h\"];\n\n  Object.defineProperties(window.h, {\n    elements: {\n      get() {\n        return globalSceneState.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return globalSceneState.replaceAllElements(elements);\n      },\n    },\n    history: {\n      get: () => history,\n    },\n  });\n}\n\nexport default App;\n","// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const INITAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\nexport const TOUCH_CTX_MENU_TIMEOUT = 500;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport const register = (config?: Config) => {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // console.log(\n              //   \"New content is available and will be used when all \" +\n              //     \"tabs for this page are closed.\",\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //   \"No internet connection found. App is running in offline mode.\",\n      // );\n    });\n};\n\nexport const unregister = () => {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n};\n","import React, { useState, useLayoutEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/browser\";\nimport * as SentryIntegrations from \"@sentry/integrations\";\n\nimport { EVENT } from \"./constants\";\nimport { TopErrorBoundary } from \"./components/TopErrorBoundary\";\nimport { InitializeApp } from \"./components/InitializeApp\";\nimport { IsMobileProvider } from \"./is-mobile\";\nimport App from \"./components/App\";\nimport { register as registerServiceWorker } from \"./serviceWorker\";\n\nimport \"./css/styles.scss\";\nimport { loadFromBlob } from \"./data\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (\n  /\\b(iPad|iPhone|iPod)\\b/.test(navigator.userAgent) &&\n  !matchMedia(\"(display-mode: standalone)\").matches\n) {\n  import(/* webpackChunkName: \"pwacompat\" */ \"pwacompat\");\n}\n\nconst SentryEnvHostnameMap: { [key: string]: string } = {\n  \"excalidraw.com\": \"production\",\n  \"vercel.app\": \"staging\",\n};\n\nconst REACT_APP_DISABLE_SENTRY =\n  process.env.REACT_APP_DISABLE_SENTRY === \"true\";\nconst REACT_APP_GIT_SHA = process.env.REACT_APP_GIT_SHA as string;\n\n// Disable Sentry locally or inside the Docker to avoid noise/respect privacy\nconst onlineEnv =\n  !REACT_APP_DISABLE_SENTRY &&\n  Object.keys(SentryEnvHostnameMap).find(\n    (item) => window.location.hostname.indexOf(item) >= 0,\n  );\n\nSentry.init({\n  dsn: onlineEnv\n    ? \"https://7bfc596a5bf945eda6b660d3015a5460@sentry.io/5179260\"\n    : undefined,\n  environment: onlineEnv ? SentryEnvHostnameMap[onlineEnv] : undefined,\n  release: REACT_APP_GIT_SHA,\n  ignoreErrors: [\n    \"undefined is not an object (evaluating 'window.__pad.performLoop')\", // Only happens on Safari, but spams our servers. Doesn't break anything\n  ],\n  integrations: [\n    new SentryIntegrations.CaptureConsole({\n      levels: [\"error\"],\n    }),\n  ],\n  beforeSend(event) {\n    if (event.request?.url) {\n      event.request.url = event.request.url.replace(/#.*$/, \"\");\n    }\n    return event;\n  },\n});\n\nwindow.__EXCALIDRAW_SHA__ = REACT_APP_GIT_SHA;\n\n// Block pinch-zooming on iOS outside of the content area\ndocument.addEventListener(\n  \"touchmove\",\n  (event) => {\n    // @ts-ignore\n    if (event.scale !== 1) {\n      event.preventDefault();\n    }\n  },\n  { passive: false },\n);\n\nfunction ExcalidrawApp() {\n  const [dimensions, setDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  const onResize = () => {\n    setDimensions({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  };\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", onResize);\n\n    return () => window.removeEventListener(\"resize\", onResize);\n  }, []);\n\n  const { width, height } = dimensions;\n  return (\n    <TopErrorBoundary>\n      <IsMobileProvider>\n        <InitializeApp>\n          <App width={width} height={height} />\n        </InitializeApp>\n      </IsMobileProvider>\n    </TopErrorBoundary>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<ExcalidrawApp />, rootElement);\n\nregisterServiceWorker({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\n        EVENT.STATE_CHANGE,\n        (event: Event) => {\n          const target = event.target as ServiceWorker;\n          const state = target.state as ServiceWorkerState;\n          if (state === \"activated\") {\n            window.location.reload();\n          }\n        },\n      );\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n});\n\nif (\"launchQueue\" in window && \"LaunchParams\" in window) {\n  (window as any).launchQueue.setConsumer(\n    async (launchParams: { files: any[] }) => {\n      if (!launchParams.files.length) {\n        return;\n      }\n      const fileHandle = launchParams.files[0];\n      const blob = await fileHandle.getFile();\n      loadFromBlob(blob);\n    },\n  );\n}\n","var map = {\n\t\"./README.md\": [\n\t\t121,\n\t\t7,\n\t\t40\n\t],\n\t\"./ar-SA\": [\n\t\t44,\n\t\t3,\n\t\t0\n\t],\n\t\"./ar-SA.json\": [\n\t\t44,\n\t\t3,\n\t\t0\n\t],\n\t\"./bg-BG\": [\n\t\t45,\n\t\t3,\n\t\t1\n\t],\n\t\"./bg-BG.json\": [\n\t\t45,\n\t\t3,\n\t\t1\n\t],\n\t\"./ca-ES\": [\n\t\t46,\n\t\t3,\n\t\t2\n\t],\n\t\"./ca-ES.json\": [\n\t\t46,\n\t\t3,\n\t\t2\n\t],\n\t\"./de-DE\": [\n\t\t47,\n\t\t3,\n\t\t3\n\t],\n\t\"./de-DE.json\": [\n\t\t47,\n\t\t3,\n\t\t3\n\t],\n\t\"./el-GR\": [\n\t\t48,\n\t\t3,\n\t\t4\n\t],\n\t\"./el-GR.json\": [\n\t\t48,\n\t\t3,\n\t\t4\n\t],\n\t\"./en\": [\n\t\t22,\n\t\t3\n\t],\n\t\"./en.json\": [\n\t\t22,\n\t\t3\n\t],\n\t\"./es-ES\": [\n\t\t49,\n\t\t3,\n\t\t5\n\t],\n\t\"./es-ES.json\": [\n\t\t49,\n\t\t3,\n\t\t5\n\t],\n\t\"./fa-IR\": [\n\t\t50,\n\t\t3,\n\t\t6\n\t],\n\t\"./fa-IR.json\": [\n\t\t50,\n\t\t3,\n\t\t6\n\t],\n\t\"./fi-FI\": [\n\t\t51,\n\t\t3,\n\t\t7\n\t],\n\t\"./fi-FI.json\": [\n\t\t51,\n\t\t3,\n\t\t7\n\t],\n\t\"./fr-FR\": [\n\t\t52,\n\t\t3,\n\t\t8\n\t],\n\t\"./fr-FR.json\": [\n\t\t52,\n\t\t3,\n\t\t8\n\t],\n\t\"./he-IL\": [\n\t\t53,\n\t\t3,\n\t\t9\n\t],\n\t\"./he-IL.json\": [\n\t\t53,\n\t\t3,\n\t\t9\n\t],\n\t\"./hi-IN\": [\n\t\t54,\n\t\t3,\n\t\t10\n\t],\n\t\"./hi-IN.json\": [\n\t\t54,\n\t\t3,\n\t\t10\n\t],\n\t\"./hu-HU\": [\n\t\t55,\n\t\t3,\n\t\t11\n\t],\n\t\"./hu-HU.json\": [\n\t\t55,\n\t\t3,\n\t\t11\n\t],\n\t\"./id-ID\": [\n\t\t56,\n\t\t3,\n\t\t12\n\t],\n\t\"./id-ID.json\": [\n\t\t56,\n\t\t3,\n\t\t12\n\t],\n\t\"./it-IT\": [\n\t\t57,\n\t\t3,\n\t\t13\n\t],\n\t\"./it-IT.json\": [\n\t\t57,\n\t\t3,\n\t\t13\n\t],\n\t\"./ja-JP\": [\n\t\t58,\n\t\t3,\n\t\t14\n\t],\n\t\"./ja-JP.json\": [\n\t\t58,\n\t\t3,\n\t\t14\n\t],\n\t\"./ko-KR\": [\n\t\t59,\n\t\t3,\n\t\t15\n\t],\n\t\"./ko-KR.json\": [\n\t\t59,\n\t\t3,\n\t\t15\n\t],\n\t\"./nb-NO\": [\n\t\t60,\n\t\t3,\n\t\t16\n\t],\n\t\"./nb-NO.json\": [\n\t\t60,\n\t\t3,\n\t\t16\n\t],\n\t\"./nl-NL\": [\n\t\t61,\n\t\t3,\n\t\t17\n\t],\n\t\"./nl-NL.json\": [\n\t\t61,\n\t\t3,\n\t\t17\n\t],\n\t\"./nn-NO\": [\n\t\t62,\n\t\t3,\n\t\t18\n\t],\n\t\"./nn-NO.json\": [\n\t\t62,\n\t\t3,\n\t\t18\n\t],\n\t\"./percentages\": [\n\t\t23,\n\t\t3\n\t],\n\t\"./percentages.json\": [\n\t\t23,\n\t\t3\n\t],\n\t\"./pl-PL\": [\n\t\t63,\n\t\t3,\n\t\t19\n\t],\n\t\"./pl-PL.json\": [\n\t\t63,\n\t\t3,\n\t\t19\n\t],\n\t\"./pt-PT\": [\n\t\t64,\n\t\t3,\n\t\t20\n\t],\n\t\"./pt-PT.json\": [\n\t\t64,\n\t\t3,\n\t\t20\n\t],\n\t\"./ru-RU\": [\n\t\t65,\n\t\t3,\n\t\t21\n\t],\n\t\"./ru-RU.json\": [\n\t\t65,\n\t\t3,\n\t\t21\n\t],\n\t\"./sq-AL\": [\n\t\t66,\n\t\t3,\n\t\t22\n\t],\n\t\"./sq-AL.json\": [\n\t\t66,\n\t\t3,\n\t\t22\n\t],\n\t\"./tr-TR\": [\n\t\t67,\n\t\t3,\n\t\t23\n\t],\n\t\"./tr-TR.json\": [\n\t\t67,\n\t\t3,\n\t\t23\n\t],\n\t\"./uk-UA\": [\n\t\t68,\n\t\t3,\n\t\t24\n\t],\n\t\"./uk-UA.json\": [\n\t\t68,\n\t\t3,\n\t\t24\n\t],\n\t\"./zh-CN\": [\n\t\t69,\n\t\t3,\n\t\t25\n\t],\n\t\"./zh-CN.json\": [\n\t\t69,\n\t\t3,\n\t\t25\n\t],\n\t\"./zh-TW\": [\n\t\t70,\n\t\t3,\n\t\t26\n\t],\n\t\"./zh-TW.json\": [\n\t\t70,\n\t\t3,\n\t\t26\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 30;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}